{
    "openapi": "3.0.3",
    "info": {
        "title": "Baserow API spec",
        "version": "1.22.3",
        "description": "For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).\n\nFor more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).",
        "contact": {
            "url": "https://baserow.io/contact"
        },
        "license": {
            "name": "MIT",
            "url": "https://gitlab.com/baserow/baserow/-/blob/master/LICENSE"
        }
    },
    "paths": {
        "/api/_health/email/": {
            "post": {
                "operationId": "email_tester",
                "description": "Sends a test email to the provided email address. Useful for testing Baserow's email configuration as errors are clearly returned.",
                "tags": [
                    "Health"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTesterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTesterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTesterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTesterResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/_health/full/": {
            "get": {
                "operationId": "full_health_check",
                "description": "Runs a full health check testing as many services and systems as possible. These health checks can be expensive operations such as writing files to storage etc.",
                "tags": [
                    "Health"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullHealthCheck"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/audit-log/": {
            "get": {
                "operationId": "audit_log_list",
                "description": "Lists all audit log entries for the given workspace id.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "action_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the audit log entries by action type."
                    },
                    {
                        "in": "query",
                        "name": "from_timestamp",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ISO timestamp to filter the audit log entries from."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many audit log entries should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: `user, workspace, type, timestamp, ip_address`. For example `sorts=-user,-workspace` will sort the audit log entries first by descending user and then ascending workspace. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE error."
                    },
                    {
                        "in": "query",
                        "name": "to_timestamp",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ISO timestamp to filter the audit log entries to."
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter the audit log entries by user id."
                    },
                    {
                        "in": "query",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter the audit log entries by workspace id. This filter works only for the admin audit log."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerAuditLog"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/audit-log/action-types/": {
            "get": {
                "operationId": "audit_log_action_types",
                "description": "List all distinct action types related to an audit log entry.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only action_types with name that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Return action types related to the workspace."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditLogActionType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/audit-log/export/": {
            "post": {
                "operationId": "async_audit_log_export",
                "description": "Creates a job to export the filtered audit log to a CSV file.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleAuditLogExportJobResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/audit-log/users/": {
            "get": {
                "operationId": "audit_log_users",
                "description": "List all users that have performed an action in the audit log.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only users with email that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many users should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Return users belonging to the given workspace_id."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerAuditLogUser"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/audit-log/workspaces/": {
            "get": {
                "operationId": "audit_log_workspaces",
                "description": "List all distinct workspace names related to an audit log entry.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only workspaces with name that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many workspaces should be returned per page."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerAuditLogWorkspace"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/auth-provider/": {
            "get": {
                "operationId": "list_auth_providers",
                "description": "List all the available authentication providers.",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_auth_provider",
                "description": "Creates a new authentication provider. This can be used to enable authentication with a third party service like Google or Facebook.",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/auth-provider/{auth_provider_id}/": {
            "get": {
                "operationId": "get_auth_provider",
                "description": "Get an authentication provider.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_provider_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The authentication provider id to fetch.",
                        "required": true
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_AUTH_PROVIDER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_auth_provider",
                "description": "Updates a new authentication provider. This can be used to enable authentication with a third party service like Google or Facebook.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_provider_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The authentication provider id to update.",
                        "required": true
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_AUTH_PROVIDER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_auth_provider",
                "description": "Delete an authentication provider.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_provider_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The authentication provider id to delete.",
                        "required": true
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_AUTH_PROVIDER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/dashboard/": {
            "get": {
                "operationId": "admin_dashboard",
                "description": "Returns the new and active users for the last 24 hours, 7 days and 30 days. The `previous_` values are the values of the period before, so for example `previous_new_users_last_24_hours` are the new users that signed up from 48 to 24 hours ago. It can be used to calculate an increase or decrease in the amount of signups. A list of the new and active users for every day for the last 30 days is also included.\n\nThis is a **premium** feature.",
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminDashboard"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/groups/": {
            "get": {
                "operationId": "admin_list_groups",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [admin_list_workspaces](#tag/Admin/operation/admin_list_workspaces).**\n\n**Support for this endpoint will end in 2024.**\n\n Returns all groups with detailed information on each group, if the requesting user is staff.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only groups with id or name that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many groups should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: `id, name, application_count, created_on, row_count, storage_usage`. For example `sorts=-id,-name` will sort the groups first by descending id and then ascending name. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE error."
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerWorkspacesAdminResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/groups/{group_id}/": {
            "delete": {
                "operationId": "admin_delete_group",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [admin_delete_workspace](#tag/Admin/operation/admin_delete_workspace).**\n\n**Support for this endpoint will end in 2024.**\n\n Deletes the specified group and the applications inside that group, if the requesting user is staff. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the group to delete",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_FEATURE_NOT_AVAILABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/users/": {
            "get": {
                "operationId": "admin_list_users",
                "description": "Returns all users with detailed information on each user, if the requesting user is staff. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only users with username that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many users should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: `id, is_active, name, username, date_joined, last_login`. For example `sorts=-id,-is_active` will sort the users first by descending id and then ascending is_active. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE error."
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerUserAdminResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "admin_create_user",
                "description": "Creates and returns a new user if the requesting user is staff. This works even if new signups are disabled. \n\nThis is a **premium** feature.",
                "tags": [
                    "Admin"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAdminCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAdminCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAdminCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAdminResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_FEATURE_NOT_AVAILABLE",
                                                "USER_ADMIN_ALREADY_EXISTS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/users/{user_id}/": {
            "patch": {
                "operationId": "admin_edit_user",
                "description": "Updates specified user attributes and returns the updated user if the requesting user is staff. You cannot update yourself to no longer be an admin or active. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the user to edit",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAdminUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAdminUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserAdminUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAdminResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "USER_ADMIN_CANNOT_DEACTIVATE_SELF",
                                                "USER_ADMIN_UNKNOWN_USER",
                                                "USER_ADMIN_ALREADY_EXISTS",
                                                "ERROR_FEATURE_NOT_AVAILABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "admin_delete_user",
                "description": "Deletes the specified user, if the requesting user has admin permissions. You cannot delete yourself. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the user to delete",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "USER_ADMIN_CANNOT_DELETE_SELF",
                                                "USER_ADMIN_UNKNOWN_USER",
                                                "ERROR_FEATURE_NOT_AVAILABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/users/impersonate/": {
            "post": {
                "operationId": "admin_impersonate_user",
                "description": "This endpoint allows staff to impersonate another user by requesting a JWT token and user object. The requesting user must have staff access in order to do this. It's not possible to impersonate a superuser or staff.\n\nThis is a **premium** feature.",
                "tags": [
                    "Admin"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaserowImpersonateAuthToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BaserowImpersonateAuthToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BaserowImpersonateAuthToken"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "description": "An object containing information related to the user.",
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "The first name of related user."
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "description": "The username of the related user. This is always an email address."
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string",
                                            "deprecated": true,
                                            "description": "Deprecated. Use the `access_token` instead."
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "description": "'access_token' can be used to authorize for other endpoints that require authorization. This token will be valid for 10 minutes."
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/workspaces/": {
            "get": {
                "operationId": "admin_list_workspaces",
                "description": "Returns all workspaces with detailed information on each workspace, if the requesting user is staff.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only workspaces with id or name that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many workspaces should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: `id, name, application_count, created_on, row_count, storage_usage`. For example `sorts=-id,-name` will sort the workspaces first by descending id and then ascending name. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE error."
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerWorkspacesAdminResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/admin/workspaces/{workspace_id}/": {
            "delete": {
                "operationId": "admin_delete_workspace",
                "description": "Deletes the specified workspace and the applications inside that workspace, if the requesting user is staff. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the workspace to delete",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_FEATURE_NOT_AVAILABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/application/{application_id}/integrations/": {
            "get": {
                "operationId": "list_application_integrations",
                "description": "Lists all the integrations of the application related to the provided parameter if the user has access to the related application's workspace. If the workspace is related to a template, then this endpoint will be publicly accessible.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the integrations of the application related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IntegrationIntegration"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_application_integration",
                "description": "Creates a new integration",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates an integration for the application related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationCreateIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationCreateIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationCreateIntegration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationIntegration"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/application/{application_id}/user_sources/": {
            "get": {
                "operationId": "list_application_user_sources",
                "description": "Lists all the user_sources of the application related to the provided parameter if the user has access to the related application's workspace. If the workspace is related to a template, then this endpoint will be publicly accessible.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the user_sources of the application related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "User sources"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User_SourceUserSource"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_application_user_source",
                "description": "Creates a new user_source",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates an user_source for the application related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "User sources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User_SourceCreateUserSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User_SourceCreateUserSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User_SourceCreateUserSource"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User_SourceUserSource"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/": {
            "get": {
                "operationId": "list_all_applications",
                "description": "Lists all the applications that the authorized user has access to. The properties that belong to the application can differ per type. An application always belongs to a single workspace. All the applications of the workspaces that the user has access to are going to be listed here.",
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Applications"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/{application_id}/": {
            "get": {
                "operationId": "workspace_get_application",
                "description": "Returns the requested application if the authorized user is in the application's workspace. The properties that belong to the application can differ per type.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the application related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Applications"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_application",
                "description": "Updates the existing application related to the provided `application_id` param if the authorized user is in the application's workspace. It is not possible to change the type, but properties like the name can be changed.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the application related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedApplicationUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedApplicationUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedApplicationUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Applications"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_application",
                "description": "Deletes an application if the authorized user is in the application's workspace. All the related children are also going to be deleted. For example in case of a database application all the underlying tables, fields, views and rows are going to be deleted.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the application related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/{application_id}/duplicate/async/": {
            "post": {
                "operationId": "duplicate_application_async",
                "description": "Duplicate an application if the authorized user is in the application's workspace. All the related children are also going to be duplicated. For example in case of a database application all the underlying tables, fields, views and rows are going to be duplicated.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the application to duplicate.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleDuplicateApplicationJobType"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/group/{group_id}/": {
            "get": {
                "operationId": "group_list_applications",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_list_applications](#tag/Applications/operation/workspace_list_applications).**\n\n**Support for this endpoint will end in 2024.**\n\n Lists all the applications of the group related to the provided `group_id` parameter if the authorized user is in that group. If the group is related to a template, then this endpoint will be publicly accessible. The properties that belong to the application can differ per type. An application always belongs to a single group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only applications that are in the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Applications"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "group_create_application",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_create_application](#tag/Applications/operation/workspace_create_application).**\n\n**Support for this endpoint will end in 2024.**\n\n Creates a new application based on the provided type. The newly created application is going to be added to the group related to the provided `group_id` parameter. If the authorized user does not belong to the group an error will be returned.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates an application for the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Applications"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/group/{group_id}/order/": {
            "post": {
                "operationId": "group_order_applications",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_order_applications](#tag/Applications/operation/workspace_order_applications).**\n\n**Support for this endpoint will end in 2024.**\n\n Changes the order of the provided application ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order of the not provided tables will be set to `0`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the order of the applications in the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApplications"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApplications"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApplications"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/workspace/{workspace_id}/": {
            "get": {
                "operationId": "workspace_list_applications",
                "description": "Lists all the applications of the workspace related to the provided `workspace_id` parameter if the authorized user is in that workspace. If theworkspace is related to a template, then this endpoint will be publicly accessible. The properties that belong to the application can differ per type. An application always belongs to a single workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only applications that are in the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Applications"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workspace_create_application",
                "description": "Creates a new application based on the provided type. The newly created application is going to be added to the workspace related to the provided `workspace_id` parameter. If the authorized user does not belong to the workspace an error will be returned.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates an application for the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Applications"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/applications/workspace/{workspace_id}/order/": {
            "post": {
                "operationId": "workspace_order_applications",
                "description": "Changes the order of the provided application ids to the matching position that the id has in the list. If the authorized user does not belong to the workspace it will be ignored. The order of the not provided tables will be set to `0`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the order of the applications in the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApplications"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApplications"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderApplications"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/audit-log/": {
            "get": {
                "operationId": "audit_log_list_2",
                "description": "Lists all audit log entries for the given workspace id.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "action_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter the audit log entries by action type."
                    },
                    {
                        "in": "query",
                        "name": "from_timestamp",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ISO timestamp to filter the audit log entries from."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many audit log entries should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: `user, workspace, type, timestamp, ip_address`. For example `sorts=-user,-workspace` will sort the audit log entries first by descending user and then ascending workspace. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE error."
                    },
                    {
                        "in": "query",
                        "name": "to_timestamp",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ISO timestamp to filter the audit log entries to."
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter the audit log entries by user id."
                    },
                    {
                        "in": "query",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter the audit log entries by workspace id. This filter works only for the admin audit log."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerAuditLog"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/audit-log/action-types/": {
            "get": {
                "operationId": "audit_log_action_types_2",
                "description": "List all distinct action types related to an audit log entry.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only action_types with name that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Return action types related to the workspace."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditLogActionType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/audit-log/export/": {
            "post": {
                "operationId": "async_audit_log_export_2",
                "description": "Creates a job to export the filtered audit log to a CSV file.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleAuditLogExportJobResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/audit-log/users/": {
            "get": {
                "operationId": "audit_log_users_2",
                "description": "List all users that have performed an action in the audit log.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only users with email that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many users should be returned per page."
                    },
                    {
                        "in": "query",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Return users belonging to the given workspace_id."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerAuditLogUser"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/audit-log/workspaces/": {
            "get": {
                "operationId": "audit_log_workspaces_2",
                "description": "List all distinct workspace names related to an audit log entry.\n\nThis is a **enterprise** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only workspaces with name that match the query will be returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many workspaces should be returned per page."
                    }
                ],
                "tags": [
                    "Audit log"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerAuditLogWorkspace"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/auth-provider/login-options/": {
            "get": {
                "operationId": "list_auth_providers_login_options",
                "description": "Lists the available login options for the configured authentication providers.",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/{builder_id}/domains/": {
            "get": {
                "operationId": "get_builder_domains",
                "description": "Gets all the domains of a builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Gets all the domains for the specified builder",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder domains"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Domain_TypeDomain"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_builder_domain",
                "description": "Creates a new domain for an application builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a domain for the application builder related tothe provided value",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain_TypeCreateDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain_TypeCreateDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain_TypeCreateDomain"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain_TypeDomain"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/{builder_id}/domains/order/": {
            "post": {
                "operationId": "order_builder_domains",
                "description": "Apply a new order to the domains of a builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The builder the domain belongs to",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderDomains"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderDomains"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderDomains"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_DOMAIN_NOT_IN_BUILDER"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST",
                                                "ERROR_DOMAIN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/{builder_id}/pages/": {
            "post": {
                "operationId": "create_builder_page",
                "description": "Creates a new page for an application builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a page for the application builder related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder pages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_PAGE_NAME_NOT_UNIQUE",
                                                "ERROR_PAGE_PATH_NOT_UNIQUE",
                                                "ERROR_PATH_PARAM_NOT_IN_PATH",
                                                "ERROR_PATH_PARAM_NOT_DEFINED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/{builder_id}/pages/order/": {
            "post": {
                "operationId": "order_builder_pages",
                "description": "Apply a new order to the pages of a builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The builder the page belongs to",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder pages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderPages"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderPages"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderPages"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_PAGE_NOT_IN_BUILDER"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST",
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/{builder_id}/theme/": {
            "patch": {
                "operationId": "update_builder_theme",
                "description": "Updates the theme properties for the provided id.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the theme for the application builder related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder theme"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCombinedThemeConfigBlocks"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCombinedThemeConfigBlocks"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCombinedThemeConfigBlocks"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CombinedThemeConfigBlocks"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/data-source/{data_source_id}/": {
            "patch": {
                "operationId": "update_builder_page_data_source",
                "description": "Updates an existing builder data_source.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "data_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the data_source",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDataSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDataSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDataSource"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration_ServiceDataSource"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DATA_SOURCE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_builder_page_data_source",
                "description": "Deletes the data_source related by the given id.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "data_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the data_source",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DATA_SOURCE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/data-source/{data_source_id}/dispatch/": {
            "post": {
                "operationId": "dispatch_builder_page_data_source",
                "description": "Dispatches the service of the related data_source and returns the result.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "data_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the data_source you want to call the dispatch for",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DATA_SOURCE_DOES_NOT_EXIST",
                                                "ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED",
                                                "ERROR_IN_DISPATCH_CONTEXT",
                                                "ERROR_DATA_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/data_source/{data_source_id}/move/": {
            "patch": {
                "operationId": "move_builder_page_data_source",
                "description": "Moves the data_source in the page before another data_source or at the end of the page if no before data_source is given. The data_sources must belong to the same page.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "data_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the data_source to move",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveDataSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveDataSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveDataSource"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration_ServiceDataSource"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_DATA_SOURCE_NOT_IN_SAME_PAGE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DATA_SOURCE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/{domain_id}/": {
            "patch": {
                "operationId": "update_builder_domain",
                "description": "Updates an existing domain of an application builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "domain_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the domain",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateDomain"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain_TypeDomain"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DOMAIN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_builder_domain",
                "description": "Deletes an existing domain of an application builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "domain_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the domain",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder domains"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DOMAIN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/{domain_id}/publish/async/": {
            "post": {
                "operationId": "publish_builder_domain",
                "description": "This endpoint starts an asynchronous job to publish the builder. The job clones the current version of the given builder and publish it for the given domain.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "domain_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The builder application id the user wants to publish.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder domains"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/ask-public-domain-exists/": {
            "get": {
                "operationId": "ask_public_builder_domain_exists",
                "description": "This endpoint can be used to check whether a domain exists for SSL certificate purposes. It's compatible with the Caddy on_demand TLS as described here: https://caddyserver.com/docs/json/apps/tls/automation/on_demand/ask/. It will respond with a 200 status code if it exists or a 404 if it doesn't exist.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The domain name for which"
                    }
                ],
                "tags": [
                    "Builder workflow_actions"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    },
                    "404": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/builder/domains/published/by_id/{builder_id}/": {
            "get": {
                "operationId": "get_public_builder_by_id",
                "description": "Returns the public serialized version of the builder and its pages for the given builder id.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "builder_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the builder related to the provided Id and its pages.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder public"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicBuilder"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_BUILDER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/published/by_name/{domain_name}/": {
            "get": {
                "operationId": "get_public_builder_by_domain_name",
                "description": "Returns the public serialized version of the builder for the given domain name and its pages .",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns the builder published for the given domain name.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder public"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicBuilder"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_BUILDER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/published/page/{page_id}/data_sources/": {
            "get": {
                "operationId": "list_public_builder_page_data_sources",
                "description": "Lists all the data_sources of the page related to the provided parameter if the builder is public.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the data_sources of the page related to the provided Id if the related builder is public.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Integration_ServicePublicDataSource"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/published/page/{page_id}/elements/": {
            "get": {
                "operationId": "list_public_builder_page_elements",
                "description": "Lists all the elements of the page related to the provided parameter. If the user is Anonymous, the page must belong to a published builder instance to being accessible.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the elements of the page related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Element_TypePublicElement"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/domains/published/page/{page_id}/workflow_actions/": {
            "get": {
                "operationId": "list_public_builder_page_workflow_actions",
                "description": "Lists all the workflow actions with their public accessible data. Some configuration might be omitted for security reasons such as passwords or PII.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the public workflow actions of the page related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/public_Builder_Workflow_Action_TypeBuilderWorkflowAction"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/element/{element_id}/": {
            "patch": {
                "operationId": "update_builder_page_element",
                "description": "Updates an existing builder element.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "element_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the element",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedElement_TypeUpdateElement"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedElement_TypeUpdateElement"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedElement_TypeUpdateElement"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element_TypeElement"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_ELEMENT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_builder_page_element",
                "description": "Deletes the element related by the given id.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "element_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the element",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_ELEMENT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/element/{element_id}/duplicate/": {
            "post": {
                "operationId": "duplicate_builder_page_element",
                "description": "Duplicates an element and all of the elements children and the associated workflow actions as well.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "element_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the element to duplicate",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DuplicateElement"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_ELEMENT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/element/{element_id}/move/": {
            "patch": {
                "operationId": "move_builder_page_element",
                "description": "Moves the element in the page before another element or at the end of the page if no before element is given. The elements must belong to the same page.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "element_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the element to move",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveElement"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveElement"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveElement"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element_TypeElement"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_ELEMENT_NOT_IN_SAME_PAGE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_ELEMENT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/page/{page_id}/data-sources/": {
            "get": {
                "operationId": "list_builder_page_data_sources",
                "description": "Lists all the data_sources of the page related to the provided parameter if the user has access to the related builder's workspace. If the workspace is related to a template, then this endpoint will be publicly accessible.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the data_sources of the page related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Integration_ServiceDataSource"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_builder_page_data_source",
                "description": "Creates a new builder data_source",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a data_source for the builder page related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration_ServiceCreateDataSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration_ServiceCreateDataSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration_ServiceCreateDataSource"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration_ServiceDataSource"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/page/{page_id}/dispatch-data-sources/": {
            "post": {
                "operationId": "dispatch_builder_page_data_sources",
                "description": "Dispatches the service of the related page data_sources",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Builder data sources"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED",
                                                "ERROR_IN_DISPATCH_CONTEXT",
                                                "ERROR_DATA_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/page/{page_id}/elements/": {
            "get": {
                "operationId": "list_builder_page_elements",
                "description": "Lists all the elements of the page related to the provided parameter if the user has access to the related builder's workspace. If the workspace is related to a template, then this endpoint will be publicly accessible.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the elements of the page related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Element_TypeElement"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_builder_page_element",
                "description": "Creates a new builder element",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates an element for the builder page related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder elements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Element_TypeCreateElement"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Element_TypeCreateElement"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Element_TypeCreateElement"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element_TypeElement"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/page/{page_id}/workflow_actions/": {
            "get": {
                "operationId": "list_builder_page_workflow_actions",
                "description": "Lists all the workflow actions of the page related to the provided parameter if the user has access to the related builder's workspace. If the workspace is related to a template, then this endpoint will be publicly accessible.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the workflow actions of the page related to the provided Id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_builder_page_workflow_action",
                "description": "Creates a new builder workflow action",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a workflow action for the builder page related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/page/{page_id}/workflow_actions/order/": {
            "post": {
                "operationId": "order_builder_workflow_actions",
                "description": "Apply a new order to the workflow actions of a page",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The page the workflow actions belong to",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkflowActions"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkflowActions"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkflowActions"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST",
                                                "ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST",
                                                "ERROR_WORKFLOW_ACTION_NOT_IN_ELEMENT"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/pages/{page_id}/": {
            "patch": {
                "operationId": "update_builder_page",
                "description": "Updates an existing page of an application builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the page",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder pages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdatePage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdatePage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdatePage"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_PAGE_NAME_NOT_UNIQUE",
                                                "ERROR_PAGE_PATH_NOT_UNIQUE",
                                                "ERROR_PATH_PARAM_NOT_IN_PATH",
                                                "ERROR_PATH_PARAM_NOT_DEFINED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST",
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_builder_page",
                "description": "Deletes an existing page of an application builder",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the page",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder pages"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/pages/{page_id}/duplicate/async/": {
            "post": {
                "operationId": "duplicate_builder_page_async",
                "description": "Start a job to duplicate the page with the provided `page_id` parameter if the authorized user has access to the builder's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "page_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The page to duplicate.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder pages"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleDuplicatePageJobType"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_PAGE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/workflow_action/{workflow_action_id}/": {
            "patch": {
                "operationId": "update_builder_page_workflow_action",
                "description": "Updates an existing builder workflow action.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "workflow_action_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the workflow action",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_builder_page_workflow_action",
                "description": "Deletes the workflow action related by the given id.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "workflow_action_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the workflow action",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/builder/workflow_action/{workflow_action_id}/dispatch/": {
            "post": {
                "operationId": "dispatch_builder_page_workflow_action",
                "description": "Dispatches the service of the related workflow_action and returns the result.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "workflow_action_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the workflow_action you want to call the dispatch for.",
                        "required": true
                    }
                ],
                "tags": [
                    "Builder workflow actions"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_WORKFLOW_ACTION_CANNOT_BE_DISPATCHED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/export/{job_id}/": {
            "get": {
                "operationId": "get_export_job",
                "description": "Returns information such as export progress and state or the url of the exported file for the specified export job, only if the requesting user has access.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The job id to lookup information about.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table export"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportJob"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_EXPORT_JOB_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/export/table/{table_id}/": {
            "post": {
                "operationId": "export_table",
                "description": "Creates and starts a new export job for a table given some exporter options. Returns an error if the requesting user does not have permissionsto view the table.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table id to create and start an export job for",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table export"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Export"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Export"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Export"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportJob"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_TABLE_ONLY_EXPORT_UNSUPPORTED",
                                                "ERROR_VIEW_UNSUPPORTED_FOR_EXPORT_TYPE",
                                                "ERROR_VIEW_NOT_IN_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/fields/{field_id}/": {
            "get": {
                "operationId": "get_database_table_field",
                "description": "Returns the existing field if the authorized user has access to the related database's workspace. Depending on the type different properties could be returned.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the field related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldField"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_field",
                "description": "Updates the existing field if the authorized user has access to the related database's workspace. The type can also be changed and depending on that type, different additional properties can optionally be set. If you change the field type it could happen that the data conversion fails, in that case the `ERROR_CANNOT_CHANGE_FIELD_TYPE` is returned, but this rarely happens. If a data value cannot be converted it is set to `null` so data might go lost.If updated the field causes other fields to change then the specificinstances of those fields will be included in the related fields response key.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the field related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFieldUpdateField"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFieldUpdateField"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFieldUpdateField"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldFieldSerializerWithRelatedFields"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_CHANGE_FIELD_TYPE",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_RESERVED_BASEROW_FIELD_NAME",
                                                "ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS",
                                                "ERROR_INVALID_BASEROW_FIELD_NAME",
                                                "ERROR_FIELD_SELF_REFERENCE",
                                                "ERROR_FIELD_CIRCULAR_REFERENCE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_field",
                "description": "Deletes the existing field if the authorized user has access to the related database's workspace. Note that all the related data to that field is also deleted. Primary fields cannot be deleted because their value represents the row. If deleting the field causes other fields to change then the specificinstances of those fields will be included in the related fields response key.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the field related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelatedFields"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_DELETE_PRIMARY_FIELD",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/fields/{field_id}/duplicate/async/": {
            "post": {
                "operationId": "duplicate_table_field",
                "description": "Duplicates the table with the provided `table_id` parameter if the authorized user has access to the database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The field to duplicate.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleDuplicateFieldJobType"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/fields/{field_id}/unique_row_values/": {
            "get": {
                "operationId": "get_database_field_unique_row_values",
                "description": "Returns a list of all the unique row values for an existing field, sorted in order of frequency.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the values related to the provided field.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many values should be returned."
                    },
                    {
                        "in": "query",
                        "name": "split_comma_separated",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Indicates whether the original column values must be splitted by comma."
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UniqueRowValues"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/fields/table/{table_id}/": {
            "get": {
                "operationId": "list_database_table_fields",
                "description": "Lists all the fields of the table related to the provided parameter if the user has access to the related database's workspace. If the workspace is related to a template, then this endpoint will be publicly accessible. A table consists of fields and each field can have a different type. Each type can have different properties. A field is comparable with a regular table's column.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only the fields of the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FieldField"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_field",
                "description": "Creates a new field for the table related to the provided `table_id` parameter if the authorized user has access to the related database's workspace. Depending on the type, different properties can optionally be set.If creating the field causes other fields to change then the specificinstances of those fields will be included in the related fields response key.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a new field for the provided table related to the value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldCreateField"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldCreateField"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldCreateField"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldFieldSerializerWithRelatedFields"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_FIELD_COUNT_EXCEEDED",
                                                "ERROR_RESERVED_BASEROW_FIELD_NAME",
                                                "ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS",
                                                "ERROR_INVALID_BASEROW_FIELD_NAME",
                                                "ERROR_FIELD_SELF_REFERENCE",
                                                "ERROR_FIELD_CIRCULAR_REFERENCE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/formula/{table_id}/type/": {
            "post": {
                "operationId": "type_formula_field",
                "description": "Calculates and returns the type of the specified formula value. Does not change the state of the field in any way.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table id of the formula field to type.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table fields"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeFormulaRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeFormulaRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeFormulaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeFormulaResult"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_WITH_FORMULA",
                                                "ERROR_FIELD_SELF_REFERENCE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/names/": {
            "get": {
                "operationId": "list_database_table_row_names",
                "description": "Returns the names of the given row of the given tables. The nameof a row is the primary field value for this row. The result can be usedfor example, when you want to display the name of a linked row from another table.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "table__{id}",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of comma separated row ids to query from the table with id {id}. For example, if you want the name of row `42` and `43` from table `28` this parameter will be `table__28=42,43`. You can specify multiple rows for different tables but every tables must be in the same database. You need at least read permission on all specified tables."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "{table_id}*": {
                                            "type": "object",
                                            "description": "An object containing the row names of table `table_id`.",
                                            "properties": {
                                                "{row_id}*": {
                                                    "type": "string",
                                                    "description": "the name of the row with id `row_id` from table with id `table_id`."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/": {
            "get": {
                "operationId": "list_database_table_rows",
                "description": "Lists all the rows of the table related to the provided parameter if the user has access to the related database's workspace. The response is paginated by a page/size style. It is also possible to provide an optional search query, only rows where the data matches the search query are going to be returned then. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. Or if the GET parameter `user_field_names` is provided then the keys will be the name of the field. The value is what the user has provided and the format of it depends on the fields type.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "exclude",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the exclude query parameter. If you for example provide the following GET parameter `exclude=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. If the `user_field_names` parameter is provided then instead exclude should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `exclude=My Field,\"Field With , \"`. A backslash can be used to escape field names which contain double quotes like so: `exclude=My Field,Field with \\\"`."
                    },
                    {
                        "in": "query",
                        "name": "filter__{field}__{filter}",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.\n\nPlease note that if the `filters` parameter is provided, this parameter will be ignored. \n\nFor example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "filter_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "`AND`: Indicates that the rows must match all the provided filters.\n`OR`: Indicates that the rows only have to match one of the filters.\n\nThis works only if two or more filters are provided.Please note that if the `filters` parameter is provided, this parameter will be ignored. \n\n"
                    },
                    {
                        "in": "query",
                        "name": "filters",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A JSON serialized string containing the filter tree to apply to this view. The filter tree is a nested structure containing the filters that need to be applied. \n\nPlease note that if this parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type` parameter. \n\nAn example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the include query parameter. If you for example provide the following GET parameter `include=field_1,field_2` then only the fields withid `1` and id `2` are going to be selected and included in the response. If the `user_field_names` parameter is provided then instead include should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `include=My Field,\"Field With , \"`. A backslash can be used to escape field names which contain double quotes like so: `include=My Field,Field with \\\"`."
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be ordered descending (Z-A). If the `user_field_names` parameter is provided then instead order_by should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `order_by=My Field,\"Field With , \"`. A backslash can be used to escape field names which contain double quotes like so: `order_by=My Field,Field with \\\"`."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page of rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned per page."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the rows of the table related to the provided value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). "
                    },
                    {
                        "in": "query",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Includes all the filters and sorts of the provided view."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerExampleRowResponseSerializerWithUserFieldNames"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_PAGE_SIZE_LIMIT",
                                                "ERROR_INVALID_PAGE",
                                                "ERROR_ORDER_BY_FIELD_NOT_FOUND",
                                                "ERROR_ORDER_BY_FIELD_NOT_POSSIBLE",
                                                "ERROR_FILTER_FIELD_NOT_FOUND",
                                                "ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST",
                                                "ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD",
                                                "ERROR_FILTERS_PARAM_VALIDATION_ERROR"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_FIELD_DOES_NOT_EXIST",
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_row",
                "description": "Creates a new row in the table if the user has access to the related table's workspace. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** to list them all. None of the fields are required, if they are not provided the value is going to be `null` or `false` or some default value is that is set. If you want to add a value for the field with for example id `10`, the key must be named `field_10`. Or instead if the `user_field_names` GET param is provided the key must be the name of the field. Of course multiple fields can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "If provided then the newly created row will be positioned before the row with the provided id."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a row in the table related to the provided value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc)."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/{row_id}/": {
            "get": {
                "operationId": "get_database_table_row",
                "description": "Fetches an existing row from the table if the user has access to the related table's workspace. The properties of the returned row depend on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field of the field. Or if the GET parameter `user_field_names` is provided then the keys will be the name of the field. The value is what the user has provided and the format of it depends on the fields type.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the row related the provided value.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the row of the table related to the provided value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). "
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_row",
                "description": "Updates an existing row in the table if the user has access to the related table's workspace. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. None of the fields are required, if they are not provided the value is not going to be updated. When you want to update a value for the field with id `10`, the key must be named `field_10`. Or if the GET parameter `user_field_names` is provided the key of the field to update must be the name of the field. Multiple different fields to update can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the row related to the value.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the row in the table related to the value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc)."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_row",
                "description": "Deletes an existing row in the table if the user has access to the table's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the row related to the value.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the row in the table related to the value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/{row_id}/adjacent/": {
            "get": {
                "operationId": "get_adjacent_database_table_row",
                "description": "Fetches the adjacent row to a given row_id in the table with the given table_id. If the previous flag is set it will return the previous row, otherwise it will return the next row. You can specifya view_id and it will apply the filters and sorts of the provided view.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "previous",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided returns theprevious row to the specified row_id. If it's not setit will return the next row."
                    },
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the row adjacent the provided value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, the adjacent row will be one that matchesthe search query."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the row of the table related to the provided value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). "
                    },
                    {
                        "in": "query",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Applies the filters and sorts of the provided view."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST",
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/{row_id}/history/": {
            "get": {
                "operationId": "get_database_table_row_history",
                "description": "Fetches the row change history of a given row_id in the table with the given table_id. The row change history is paginated and can be limited with the limit and offset query parameters.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The maximum number of row change history entries to return."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The offset of the row change history entries to return."
                    },
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the row to fetch the change history from.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the table to fetch the row change history from.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerRowHistory"
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/{row_id}/move/": {
            "patch": {
                "operationId": "move_database_table_row",
                "description": "Moves the row related to given `row_id` parameter to another position. It is only possible to move the row before another existing row or to the end. If the `before_id` is provided then the row related to the `row_id` parameter is moved before that row. If the `before_id` parameter is not provided, then the row will be moved to the end.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "query",
                        "name": "before_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Moves the row related to the given `row_id` before the row related to the provided value. If not provided, then the row will be moved to the end."
                    },
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Moves the row related to the value.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Moves the row in the table related to the value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). "
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/batch/": {
            "post": {
                "operationId": "batch_create_database_table_rows",
                "description": "Creates new rows in the table if the user has access to the related table's workspace. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** to list them all. None of the fields are required, if they are not provided the value is going to be `null` or `false` or some default value is that is set. If you want to add a value for the field with for example id `10`, the key must be named `field_10`. Or instead if the `user_field_names` GET param is provided the key must be the name of the field. Of course multiple fields can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.\n\n **WARNING:** This endpoint doesn't yet work with row created webhooks.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "If provided then the newly created rows will be positioned before the row with the provided id."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates the rows in the table.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc)."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleBatchRowsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleBatchRowsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleBatchRowsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleBatchRowsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_ROW_IDS_NOT_UNIQUE",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "batch_update_database_table_rows",
                "description": "Updates existing rows in the table if the user has access to the related table's workspace. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. None of the fields are required, if they are not provided the value is not going to be updated. When you want to update a value for the field with id `10`, the key must be named `field_10`. Or if the GET parameter `user_field_names` is provided the key of the field to update must be the name of the field. Multiple different fields to update can be provided for each row. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.\n\n **WARNING:** This endpoint doesn't yet work with row updated webhooks.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the rows in the table.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_field_names",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc)."
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExampleBatchUpdateRowsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExampleBatchUpdateRowsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExampleBatchUpdateRowsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExampleBatchRowsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_ROW_IDS_NOT_UNIQUE",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/rows/table/{table_id}/batch-delete/": {
            "post": {
                "operationId": "batch_delete_database_table_rows",
                "description": "Deletes existing rows in the table if the user has access to the table's workspace.\n\n **WARNING:**  This endpoint doesn't yet work with row deleted webhooks.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the rows in the table related to the value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchDeleteRows"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchDeleteRows"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchDeleteRows"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM",
                                                "ERROR_ROW_IDS_NOT_UNIQUE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tables/{table_id}/": {
            "get": {
                "operationId": "get_database_table",
                "description": "Returns the requested table if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Table"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table",
                "description": "Updates the existing table if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTableUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTableUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTableUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Table"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table",
                "description": "Deletes the existing table if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tables/{table_id}/duplicate/async/": {
            "post": {
                "operationId": "duplicate_database_table_async",
                "description": "Start a job to duplicate the table with the provided `table_id` parameter if the authorized user has access to the database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table to duplicate.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleDuplicateTableJobType"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tables/{table_id}/import/async/": {
            "post": {
                "operationId": "import_data_database_table_async",
                "description": "Import data in the specified table if the authorized user has access to the related database's workspace. This endpoint is asynchronous and return the created job to track the progress of the task.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Import data into the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TableImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TableImport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TableImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleFileImportJobSerializerClass"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tables/database/{database_id}/": {
            "get": {
                "operationId": "list_database_tables",
                "description": "Lists all the tables that are in the database related to the `database_id` parameter if the user has access to the database's workspace. A table is exactly as the name suggests. It can hold multiple fields, each having their own type and multiple rows. They can be added via the **create_database_table_field** and **create_database_table_row** endpoints.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "database_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only tables that are related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Table"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table",
                "description": "Creates synchronously a new table for the database related to the provided `database_id` parameter if the authorized user has access to the database's workspace.\n\nAs an alternative you can use the `create_async_database_table` for better performances and importing bigger files.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "database_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a table for the database related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TableCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TableCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TableCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Table"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_INVALID_INITIAL_TABLE_DATA",
                                                "ERROR_INITIAL_TABLE_DATA_LIMIT_EXCEEDED",
                                                "ERROR_RESERVED_BASEROW_FIELD_NAME",
                                                "ERROR_INITIAL_TABLE_DATA_HAS_DUPLICATE_NAMES",
                                                "ERROR_INVALID_BASEROW_FIELD_NAME",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tables/database/{database_id}/async/": {
            "post": {
                "operationId": "create_database_table_async",
                "description": "Creates a job that creates a new table for the database related to the provided `database_id` parameter if the authorized user has access to the database's workspace. This endpoint is asynchronous and return the created job to track the progress of the task.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "database_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a table for the database related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TableCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TableCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TableCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleFileImportJobSerializerClass"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tables/database/{database_id}/order/": {
            "post": {
                "operationId": "order_database_tables",
                "description": "Changes the order of the provided table ids to the matching position that the id has in the list. If the authorized user does not belong to the workspace it will be ignored. The order of the not provided tables will be set to `0`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "database_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the order of the tables in the database related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tables"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTables"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTables"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTables"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TABLE_NOT_IN_DATABASE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tokens/": {
            "get": {
                "operationId": "list_database_tokens",
                "description": "Lists all the database tokens that belong to the authorized user. A token can be used to create, read, update and delete rows in the tables of the token's workspace. It only works on the tables if the token has the correct permissions. The **Database table rows** endpoints can be used for these operations.",
                "tags": [
                    "Database tokens"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Token"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_token",
                "description": "Creates a new database token for a given workspace and for the authorized user.",
                "tags": [
                    "Database tokens"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tokens/{token_id}/": {
            "get": {
                "operationId": "get_database_token",
                "description": "Returns the requested database token if it is owned by the authorized user andif the user has access to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the database token related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tokens"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TOKEN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_token",
                "description": "Updates the existing database token if it is owned by the authorized user and ifthe user has access to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the database token related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tokens"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTokenUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTokenUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTokenUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_DATABASE_DOES_NOT_BELONG_TO_GROUP",
                                                "ERROR_TABLE_DOES_NOT_BELONG_TO_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TOKEN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_token",
                "description": "Deletes the existing database token if it is owned by the authorized user and ifthe user has access to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the database token related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database tokens"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TOKEN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/tokens/check/": {
            "get": {
                "operationId": "check_database_token",
                "description": "This endpoint check be used to check if the provided personal API token is valid. If returns a `200` response if so and a `403` is not. This can be used by integrations like Zapier or n8n to test if a token is valid.",
                "tags": [
                    "Database tokens"
                ],
                "security": [
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TOKEN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/view/{view_id}/premium": {
            "patch": {
                "operationId": "premium_view_attributes_update",
                "description": "Sets view attributes only available for premium users.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Sets show_logo of this view.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdatePremiumViewAttributes"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdatePremiumViewAttributes"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdatePremiumViewAttributes"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/View"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_FEATURE_NOT_AVAILABLE",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_CANNOT_UPDATE_PREMIUM_ATTRIBUTES_ON_TEMPLATE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{slug}/link-row-field-lookup/{field_id}/": {
            "get": {
                "operationId": "database_table_public_view_link_row_field_lookup",
                "description": "If the view is publicly shared or if an authenticated user has access to the related workspace, then this endpoint can be used to do a value lookup of the link row fields that are included in the view. Normally it is not possible for a not authenticated visitor to fetch the rows of a table. This endpoint makes it possible to fetch the id and primary field value of the related table of a link row included in the view.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The field id of the link row field.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slug related to the view.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerLinkRowValue"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST",
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{slug}/public/auth/": {
            "post": {
                "operationId": "public_view_token_auth",
                "description": "Returns a valid never-expiring JWT token for this public shared view if the password provided matches with the one saved by the view's owner.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slug of the grid view to get public information about.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicViewAuthRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicViewAuthRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicViewAuthRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicViewAuthResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The password provided for this view is incorrect"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{slug}/public/info/": {
            "get": {
                "operationId": "get_public_view_info",
                "description": "Returns the required public information to display a single shared view.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slug of the view to get public information about.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicViewInfo"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/": {
            "get": {
                "operationId": "get_database_table_view",
                "description": "Returns the existing view. Depending on the type different propertiescould be returned.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of extra attributes to include on the returned view. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewView"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view",
                "description": "Updates the existing view. The type cannot be changed. It depends on the existing type which properties can be changed.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of extra attributes to include on the returned view. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedViewUpdateView"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedViewUpdateView"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedViewUpdateView"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewView"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_FIELD_NOT_IN_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_view",
                "description": "Deletes the existing view. Note that all the related settings of the view are going to be deleted also. The data stays intact after deleting the view because this is related to the table and not the view.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/decorations/": {
            "get": {
                "operationId": "list_database_table_view_decorations",
                "description": "Lists all decorations of the view related to the provided `view_id` if the user has access to the related database's workspace. A view can have multiple decorations. View decorators can be used to decorate rows. This can, for example, be used to change the border or background color of a row if it matches certain conditions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only decoration of the view given to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view decorations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_view_decoration",
                "description": "Creates a new decoration for the view related to the provided `view_id` parameter if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a decoration for the view related to the given value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view decorations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/duplicate/": {
            "post": {
                "operationId": "duplicate_database_table_view",
                "description": "Duplicates an existing view if the user has access to it. When a view is duplicated everything is copied except:\n- The name is appended with the copy number. Ex: `ViewName`->`ViewName(2)` and `View(2)`->`View(3)`\n- If the original view is publicly shared, the new view will not be shared anymore",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Duplicates the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewView"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/field-options/": {
            "get": {
                "operationId": "get_database_table_view_field_options",
                "description": "Responds with the fields options of the provided view if the authenticated user has access to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Responds with field options related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFieldOptions"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view_field_options",
                "description": "Updates the field options of a view. The field options differ per field type  This could for example be used to update the field width of a `grid` view if the user changes it.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the field options related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedViewFieldOptions"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedViewFieldOptions"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedViewFieldOptions"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFieldOptions"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/filter-groups/": {
            "post": {
                "operationId": "create_database_table_view_filter_group",
                "description": "Creates a new filter group for the view related to the provided `view_id` parameter.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the view where create the new filter group.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewFilterGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewFilterGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewFilterGroup"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFilterGroup"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/filters/": {
            "get": {
                "operationId": "list_database_table_view_filters",
                "description": "Lists all filters of the view related to the provided `view_id`. A view can have multiple filters. When all the rows are requested for the view only those that apply to the filters are returned.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only filters of the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ViewFilter"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_view_filter",
                "description": "Creates a new filter for the view related to the provided `view_id` parameter. When the rows of a view are requested, for example via the `list_database_table_grid_view_rows` endpoint, then only the rows that apply to all the filters are going to be returned. A filter compares the value of a field to the value of a filter. It depends on the type how values are going to be compared.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a filter for the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewFilter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewFilter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewFilter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFilter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_FIELD_NOT_IN_TABLE",
                                                "ERROR_VIEW_FILTER_NOT_SUPPORTED",
                                                "ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST",
                                                "ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/group_bys/": {
            "get": {
                "operationId": "list_database_table_view_groupings",
                "description": "Lists all groupings of the view related to the provided `view_id` if the user has access to the related database's workspace. A view can have multiple groupings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only groupings of the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view groupings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ViewGroupBy"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_view_group",
                "description": "Creates a new group by for the view related to the provided `view_id` parameter if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a group by for the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view groupings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewGroupBy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewGroupBy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewGroupBy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewGroupBy"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_VIEW_GROUP_BY_NOT_SUPPORTED",
                                                "ERROR_FIELD_NOT_IN_TABLE",
                                                "ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS",
                                                "ERROR_VIEW_GROUP_BY_FIELD_NOT_SUPPORTED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/rotate-slug/": {
            "post": {
                "operationId": "rotate_database_view_slug",
                "description": "Rotates the unique slug of the view by replacing it with a new value. This would mean that the publicly shared URL of the view will change. Anyone with the old URL won't be able to access the viewanymore. Only view types which are sharable can have their slugs rotated.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Rotates the slug of the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewView"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_SHARE_VIEW_TYPE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/{view_id}/sortings/": {
            "get": {
                "operationId": "list_database_table_view_sortings",
                "description": "Lists all sortings of the view related to the provided `view_id` if the user has access to the related database's workspace. A view can have multiple sortings. When all the rows are requested they will be in the desired order.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only sortings of the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view sortings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ViewSort"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_view_sort",
                "description": "Creates a new sort for the view related to the provided `view_id` parameter if the authorized user has access to the related database's workspace. When the rows of a view are requested, for example via the `list_database_table_grid_view_rows` endpoint, they will be returned in the respected order defined by all the sortings.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a sort for the view related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view sortings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewSort"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewSort"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateViewSort"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewSort"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_VIEW_SORT_NOT_SUPPORTED",
                                                "ERROR_FIELD_NOT_IN_TABLE",
                                                "ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS",
                                                "ERROR_VIEW_SORT_FIELD_NOT_SUPPORTED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/calendar/{slug}/public/rows/": {
            "get": {
                "operationId": "public_list_database_table_calendar_view_rows",
                "description": "Responds with serialized rows grouped by the view's date field options related to the `slug` if the calendar view is publicly shared. Additional query parameters can be provided to control the `limit` and `offset` per select option. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from_timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Restricts results based on the calendar date field.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned by default. This value can be overwritten per select option."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines from which offset the rows should be returned.This value can be overwritten per select option."
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns only rows that belong to the related view.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "to_timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Restricts results based on the calendar date field.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_timezone",
                        "schema": {
                            "type": "string",
                            "default": "UTC"
                        },
                        "description": "User's timezone will be taken into account for date fieldtypes that have a time and don't enforce a timezone. The timezone will be used for aggregating the dates. For date fields without a time this will be ignored and UTC will be forced. "
                    }
                ],
                "tags": [
                    "Database table calendar view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalendarViewExampleResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/calendar/{view_id}/": {
            "get": {
                "operationId": "list_database_table_calendar_view_rows",
                "description": "Responds with serialized rows grouped by date regarding view's date fieldif the user is authenticated and has access to the related workspace.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from_timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Restricts results based on the calendar date field.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list allowing the values of `field_options` and `row_metadata` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here. The `row_metadata` object includes extra row specific data on a per row basis."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned by default."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        },
                        "description": "Defines from which offset the rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "query",
                        "name": "to_timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Restricts results based on the calendar date field.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user_timezone",
                        "schema": {
                            "type": "string",
                            "default": "UTC"
                        },
                        "description": "User's timezone will be taken into account for date fieldtypes that have a time and don't enforce a timezone. The timezone will be used for aggregating the dates. For date fields without a time this will be ignored and UTC will be forced. "
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only rows that belong to the related view's table.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table calendar view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalendarViewExampleResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD",
                                                "ERROR_FEATURE_NOT_AVAILABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/decoration/{view_decoration_id}/": {
            "get": {
                "operationId": "get_database_table_view_decoration",
                "description": "Returns the existing view decoration if the current user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_decoration_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the view decoration related to the provided id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view decorations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DECORATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view_decoration",
                "description": "Updates the existing decoration if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_decoration_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the view decoration related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view decorations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DECORATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_view_decoration",
                "description": "Deletes the existing decoration if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_decoration_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the decoration related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view decorations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DECORATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/filter-group/{filter_group_id}/": {
            "get": {
                "operationId": "get_database_table_view_filter_group",
                "description": "Returns the existing view filter group with the given `view_filter_group_id`.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filter_group_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "view_filter_group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Teh ID of the view filter group to return.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFilterGroup"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view_filter_group",
                "description": "Updates the existing filter group with the given `view_filter_group_id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "filter_group_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "view_filter_group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the view filter group to update.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewFilterGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewFilterGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewFilterGroup"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFilterGroup"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_view_filter_group",
                "description": "Deletes the existing filter group with the given `view_filter_group_id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "filter_group_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "view_filter_group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the view filter group to delete.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/filter/{view_filter_id}/": {
            "get": {
                "operationId": "get_database_table_view_filter",
                "description": "Returns the existing view filter.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_filter_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the view filter to return.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFilter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_FILTER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view_filter",
                "description": "Updates the existing filter.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_filter_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the view filter to update.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewFilter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewFilter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewFilter"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewFilter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_FIELD_NOT_IN_TABLE",
                                                "ERROR_VIEW_FILTER_NOT_SUPPORTED",
                                                "ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_FILTER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_view_filter",
                "description": "Deletes the existing filter if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_filter_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the view filter to delete.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view filters"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_FILTER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/form/{slug}/submit/": {
            "get": {
                "operationId": "get_meta_database_table_form_view",
                "description": "Returns the metadata related to the form view if the form is publicly shared or if the user has access to the related workspace. This data can be used to construct a form with the right fields.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slug related to the form form.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table form view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicFormView"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FORM_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "submit_database_table_form_view",
                "description": "Submits the form if the form is publicly shared or if the user has access to the related workspace. The provided data will be validated based on the fields that are in the form and the rules per field. If valid, a new row will be created in the table.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slug related to the form.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table form view"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleRowRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleRowRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExampleRowRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormViewSubmitted"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FORM_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/form/{slug}/upload-file/": {
            "post": {
                "operationId": "upload_file_form_view",
                "description": "Uploads a file anonymously to Baserow by uploading the file contents directly. A `file` multipart is expected containing the file contents.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Submits files only if the view with the provided slughas a public file field.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table form view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFile"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INVALID_FILE",
                                                "ERROR_FILE_SIZE_TOO_LARGE",
                                                "ERROR_VIEW_HAS_NO_PUBLIC_FILE_FIELD"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/gallery/{slug}/public/rows/": {
            "get": {
                "operationId": "public_list_database_table_gallery_view_rows",
                "description": "Lists the requested rows of the view's table related to the provided `slug` if the gallery view is public.The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.\n\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "count",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If provided only the count will be returned."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the exclude_fields query parameter. If you for example provide the following GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. "
                    },
                    {
                        "in": "query",
                        "name": "filter__{field}__{filter}",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.\n\nPlease note that if the `filters` parameter is provided, this parameter will be ignored. \n\nFor example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "filter_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "`AND`: Indicates that the rows must match all the provided filters.\n`OR`: Indicates that the rows only have to match one of the filters.\n\nThis works only if two or more filters are provided.Please note that if the `filters` parameter is provided, this parameter will be ignored. \n\n"
                    },
                    {
                        "in": "query",
                        "name": "filters",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A JSON serialized string containing the filter tree to apply to this view. The filter tree is a nested structure containing the filters that need to be applied. \n\nPlease note that if this parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type` parameter. \n\nAn example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list allowing the values of `field_options` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here."
                    },
                    {
                        "in": "query",
                        "name": "include_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the fields query parameter. If you for example provide the following GET parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going to be selected and included in the response."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be ordered descending (Z-A)."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `page` parameter and defines how many rows should be returned."
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns only rows that belong to the related view.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table gallery view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_FILTER_FIELD_NOT_FOUND",
                                                "ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST",
                                                "ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD",
                                                "ERROR_FILTERS_PARAM_VALIDATION_ERROR"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GALLERY_DOES_NOT_EXIST",
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/gallery/{view_id}/": {
            "get": {
                "operationId": "list_database_table_gallery_view_rows",
                "description": "Lists the requested rows of the view's table related to the provided `view_id` if the authorized user has access to the database's workspace. The response is paginated by a limit/offset style.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "count",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If provided only the count will be returned."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list allowing the values of `field_options` and `row_metadata` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here. The `row_metadata` object includes extra row specific data on a per row basis."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only rows that belong to the related view's table.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table gallery view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GALLERY_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/grid/{slug}/public/rows/": {
            "get": {
                "operationId": "public_list_database_table_grid_view_rows",
                "description": "Lists the requested rows of the view's table related to the provided `slug` if the grid view is public.The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.\n\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "count",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If provided only the count will be returned."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the exclude_fields query parameter. If you for example provide the following GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. "
                    },
                    {
                        "in": "query",
                        "name": "filter__{field}__{filter}",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.\n\nPlease note that if the `filters` parameter is provided, this parameter will be ignored. \n\nFor example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "filter_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "`AND`: Indicates that the rows must match all the provided filters.\n`OR`: Indicates that the rows only have to match one of the filters.\n\nThis works only if two or more filters are provided.Please note that if the `filters` parameter is provided, this parameter will be ignored. \n\n"
                    },
                    {
                        "in": "query",
                        "name": "filters",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A JSON serialized string containing the filter tree to apply to this view. The filter tree is a nested structure containing the filters that need to be applied. \n\nPlease note that if this parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type` parameter. \n\nAn example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "group_by",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optionally the rows can be grouped by provided field ids separated by comma. By default no groups are applied. This doesn't actually responds with the rows groups, this is just what's needed for the Baserow group by feature."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list allowing the values of `field_options` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here."
                    },
                    {
                        "in": "query",
                        "name": "include_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the fields query parameter. If you for example provide the following GET parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going to be selected and included in the response."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be ordered descending (Z-A)."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `page` parameter and defines how many rows should be returned."
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns only rows that belong to the related view.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table grid view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_FILTER_FIELD_NOT_FOUND",
                                                "ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST",
                                                "ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD",
                                                "ERROR_FILTERS_PARAM_VALIDATION_ERROR"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GRID_DOES_NOT_EXIST",
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/grid/{view_id}/": {
            "get": {
                "operationId": "list_database_table_grid_view_rows",
                "description": "Lists the requested rows of the view's table related to the provided `view_id` if the authorized user has access to the database's workspace. The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.\n\nThe filters and sortings are automatically applied. To get a full overview of the applied filters and sortings you can use the `list_database_table_view_filters` and `list_database_table_view_sortings` endpoints.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "count",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If provided only the count will be returned."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the exclude_fields query parameter. If you for example provide the following GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. "
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list allowing the values of `field_options` and `row_metadata` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here. The `row_metadata` object includes extra row specific data on a per row basis."
                    },
                    {
                        "in": "query",
                        "name": "include_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "All the fields are included in the response by default. You can select a subset of fields by providing the fields query parameter. If you for example provide the following GET parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going to be selected and included in the response."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided only rows with data that matches the search query are going to be returned."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `page` parameter and defines how many rows should be returned."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only rows that belong to the related view's table.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table grid view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerWithGridViewFieldOptionsExampleRowResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GRID_DOES_NOT_EXIST",
                                                "ERROR_FIELD_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "filter_database_table_grid_view_rows",
                "description": "Lists only the rows and fields that match the request. Only the rows with the ids that are in the `row_ids` list are going to be returned. Same goes for the fields, only the fields with the ids in the `field_ids` are going to be returned. This endpoint could be used to refresh data after changes something. For example in the web frontend after changing a field type, the data of the related cells will be refreshed using this endpoint. In the example all field types are listed, but normally  the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only rows that belong to the related view's table.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table grid view"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GridViewFilter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GridViewFilter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GridViewFilter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExampleRowResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GRID_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/grid/{view_id}/aggregation/{field_id}/": {
            "get": {
                "operationId": "get_database_table_grid_view_field_aggregation",
                "description": "Computes the aggregation of all the values for a specified field from the selected grid view. You must select the aggregation type by setting the `type` GET parameter. If filters are configured for the selected view, the aggregation is calculated only on filtered rows. You need to have read permissions on the view to request an aggregation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "field_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The field id you want to aggregate",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "if `include` is set to `total`, the total row count will be returned with the result."
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The aggregation type you want. Available aggregation types: empty_count, not_empty_count, unique_count, min, max, sum, average, median, decile, variance, std_dev"
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Select the view you want the aggregation for.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table grid view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "anyOf": [
                                                {
                                                    "type": "number",
                                                    "description": "The aggregation result for the specified field.",
                                                    "example": 5
                                                },
                                                {
                                                    "type": "string",
                                                    "description": "The aggregation result for the specified field."
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {},
                                                    "description": "The aggregation result for the specified field."
                                                },
                                                {
                                                    "type": "object",
                                                    "description": "The aggregation result for the specified field."
                                                }
                                            ]
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "The total value count. Only returned if `include=total` is specified as GET parameter.",
                                            "example": 7
                                        }
                                    },
                                    "required": [
                                        "value"
                                    ]
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_AGGREGATION_TYPE_DOES_NOT_EXIST",
                                                "ERROR_FIELD_NOT_IN_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_FIELD_DOES_NOT_EXIST",
                                                "ERROR_GRID_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/grid/{view_id}/aggregations/": {
            "get": {
                "operationId": "get_database_table_grid_view_field_aggregations",
                "description": "Returns all field aggregations values previously defined for this grid view. If filters exist for this view, the aggregations are computed only on filtered rows.You need to have read permissions on the view to request aggregations.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "if `include` is set to `total`, the total row count will be returned with the result."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided the aggregations are calculated only for matching rows."
                    },
                    {
                        "in": "query",
                        "name": "search_mode",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, allows API consumers to determine what kind of search experience they wish to have. If the default `full-text-with-count` is used, then Postgres full-text search is used. If `compat` is provided then the search term will be exactly searched for including whitespace on each cell. This is the Baserow legacy search behaviour."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Select the view you want the aggregations for.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table grid view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "field_{id}": {
                                            "anyOf": [
                                                {
                                                    "type": "number",
                                                    "description": "The aggregation result for the field with id {id}.",
                                                    "example": 5
                                                },
                                                {
                                                    "type": "string",
                                                    "description": "The aggregation result for the field with id {id}."
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {},
                                                    "description": "The aggregation result for the field with id {id}."
                                                },
                                                {
                                                    "type": "object",
                                                    "description": "The aggregation result for the field with id {id}."
                                                }
                                            ]
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "The total value count. Only returned if `include=total` is specified as GET parameter.",
                                            "example": 7
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GRID_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/group_by/{view_group_by_id}/": {
            "get": {
                "operationId": "get_database_table_view_group",
                "description": "Returns the existing view group by if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_group_by_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the view group by related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view groupings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewGroupBy"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view_group",
                "description": "Updates the existing group by if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_group_by_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the view group by related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view groupings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewGroupBy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewGroupBy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewGroupBy"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewGroupBy"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_FIELD_NOT_IN_TABLE",
                                                "ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_view_group",
                "description": "Deletes the existing group by if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_group_by_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the group by related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view groupings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/kanban/{slug}/public/rows/": {
            "get": {
                "operationId": "public_list_database_table_kanban_view_rows",
                "description": "Responds with serialized rows grouped by the view's single select field options related to the `slug` if the kanban view is publicly shared. Additional query parameters can be provided to control the `limit` and `offset` per select option. \n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter__{field}__{filter}",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.\n\nPlease note that if the `filters` parameter is provided, this parameter will be ignored. \n\nFor example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "filter_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "`AND`: Indicates that the rows must match all the provided filters.\n`OR`: Indicates that the rows only have to match one of the filters.\n\nThis works only if two or more filters are provided.Please note that if the `filters` parameter is provided, this parameter will be ignored. \n\n"
                    },
                    {
                        "in": "query",
                        "name": "filters",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A JSON serialized string containing the filter tree to apply to this view. The filter tree is a nested structure containing the filters that need to be applied. \n\nPlease note that if this parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type` parameter. \n\nAn example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.\n\nThe following filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, lower_than, is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned by default. This value can be overwritten per select option."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines from which offset the rows should be returned.This value can be overwritten per select option."
                    },
                    {
                        "in": "query",
                        "name": "select_option",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Accepts multiple `select_option` parameters. If not provided, the rows of all select options will be returned. If one or more `select_option` parameters are provided, then only the rows of those will be included in the response. `?select_option=1&select_option=null` will only include the rows for both select option with id `1` and `null`. `?select_option=1,10,20` will only include the rows of select option id `1` with a limit of `10` and and offset of `20`."
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns only rows that belong to the related view.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table kanban view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KanbanViewExampleResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD",
                                                "ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST",
                                                "ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD",
                                                "ERROR_FILTER_FIELD_NOT_FOUND",
                                                "ERROR_FILTERS_PARAM_VALIDATION_ERROR"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_KANBAN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/kanban/{view_id}/": {
            "get": {
                "operationId": "list_database_table_kanban_view_rows",
                "description": "Responds with serialized rows grouped by the view's single select field options if the user is authenticated and has access to the related workspace. Additional query parameters can be provided to control the `limit` and `offset` per select option.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list allowing the values of `field_options` and `row_metadata` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here. The `row_metadata` object includes extra row specific data on a per row basis."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned by default. This value can be overwritten per select option."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines from which offset the rows should be returned.This value can be overwritten per select option."
                    },
                    {
                        "in": "query",
                        "name": "select_option",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Accepts multiple `select_option` parameters. If not provided, the rows of all select options will be returned. If one or more `select_option` parameters are provided, then only the rows of those will be included in the response. `?select_option=1&select_option=null` will only include the rows for both select option with id `1` and `null`. `?select_option=1,10,20` will only include the rows of select option id `1` with a limit of `10` and and offset of `20`."
                    },
                    {
                        "in": "path",
                        "name": "view_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only rows that belong to the related view's table.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table kanban view"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KanbanViewExampleResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD",
                                                "ERROR_INVALID_SELECT_OPTION_PARAMETER",
                                                "ERROR_FEATURE_NOT_AVAILABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_KANBAN_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/sort/{view_sort_id}/": {
            "get": {
                "operationId": "get_database_table_view_sort",
                "description": "Returns the existing view sort if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "view_sort_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the view sort related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view sortings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewSort"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_SORT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_view_sort",
                "description": "Updates the existing sort if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_sort_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the view sort related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view sortings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewSort"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewSort"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateViewSort"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewSort"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_FIELD_NOT_IN_TABLE",
                                                "ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_SORT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_view_sort",
                "description": "Deletes the existing sort if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "view_sort_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the sort related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table view sortings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_VIEW_SORT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/table/{table_id}/": {
            "get": {
                "operationId": "list_database_table_views",
                "description": "Lists all views of the table related to the provided `table_id`. If the workspace is related to a template, then this endpoint will be publicly accessible. A table can have multiple views. Each view can display the data in a different way. For example the `grid` view shows the in a spreadsheet like way. That type has custom endpoints for data retrieval and manipulation. In the future other views types like a calendar or Kanban are going to be added. Each type can have different properties.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of extra attributes to include on each view in the response. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The maximum amount of views that must be returned. This endpoint doesn't support pagination, but if you for example just need to fetch the first view, you can do that by setting a limit. There isn't a limit by default."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only views of the table related to the provided value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optionally filter on the view type. If provided, only views of that type will be returned."
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ViewView"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_view",
                "description": "Creates a new view for the table related to the provided `table_id` parameter. Depending on the type, different properties can optionally be set.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of extra attributes to include on each view in the response. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a view for the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ViewCreateView"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ViewCreateView"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ViewCreateView"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ViewView"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_FIELD_NOT_IN_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/views/table/{table_id}/order/": {
            "post": {
                "operationId": "order_database_table_views",
                "description": "Changes the order of the provided view ids to the matching position that the id has in the list. The order of the not provided views will be set to `0`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the order of the views in the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table views"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderViews"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderViews"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderViews"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_VIEW_NOT_IN_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/webhooks/{webhook_id}/": {
            "get": {
                "operationId": "get_database_table_webhook",
                "description": "Returns the existing webhook if the authorized user has access to the related database workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "webhook_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the webhook related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table webhooks"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableWebhook"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_database_table_webhook",
                "description": "Updates the existing view if the authorized user has access to the related database workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "webhook_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the webhook related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table webhooks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTableWebhookUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTableWebhookUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTableWebhookUpdateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableWebhook"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_database_table_webhook",
                "description": "Deletes the existing webhook if the authorized user has access to the related database's workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "webhook_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the webhook related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table webhooks"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/webhooks/table/{table_id}/": {
            "get": {
                "operationId": "list_database_table_webhooks",
                "description": "Lists all webhooks of the table related to the provided `table_id` if the user has access to the related database workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only webhooks of the table related to this value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table webhooks"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableWebhook"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_database_table_webhook",
                "description": "Creates a new webhook for the table related to the provided `table_id` parameter if the authorized user has access to the related database workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a webhook for the table related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table webhooks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TableWebhookCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TableWebhookCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TableWebhookCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableWebhook"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TABLE_WEBHOOK_MAX_LIMIT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/database/webhooks/table/{table_id}/test-call/": {
            "post": {
                "operationId": "test_call_database_table_webhook",
                "description": "This endpoint triggers a test call based on the provided data if the user has access to the workspace related to the table. The test call will be made immediately and a copy of the request, response and status will be included in the response.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the table that must be tested.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table webhooks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TableWebhookTestCallRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TableWebhookTestCallRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TableWebhookTestCallRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableWebhookTestCallResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/": {
            "get": {
                "operationId": "list_groups",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [list_workspaces](#tag/Workspaces/operation/list_workspaces).**\n\n**Support for this endpoint will end in 2024.**\n\n Lists all the groups of the authorized user. A group can contain multiple applications like a database. Multiple users can have access to a group. For example each company could have their own group containing databases related to that company. The order of the groups are custom for each user. The order is configurable via the **order_groups** endpoint.",
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceUserWorkspace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_group",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [create_workspace](#tag/Workspaces/operation/create_workspace).**\n\n**Support for this endpoint will end in 2024.**\n\n Creates a new group where only the authorized user has access to. No initial data like database applications are added, they have to be created via other endpoints.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceUserWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/{group_id}/": {
            "patch": {
                "operationId": "update_group",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [update_workspace](#tag/Workspaces/operation/update_workspace).**\n\n**Support for this endpoint will end in 2024.**\n\n Updates the existing group related to the provided `group_id` parameter if the authorized user belongs to the group. It is not yet possible to add additional users to a group.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_group",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [delete_workspace](#tag/Workspaces/operation/delete_workspace).**\n\n**Support for this endpoint will end in 2024.**\n\n Deletes an existing group if the authorized user belongs to the group. All the applications, databases, tables etc that were in the group are going to be deleted also.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/{group_id}/leave/": {
            "post": {
                "operationId": "leave_group",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [leave_workspace](#tag/Workspaces/operation/leave_workspace).**\n\n**Support for this endpoint will end in 2024.**\n\n Makes the authenticated user leave the group related to the provided `group_id` if the user is in that group. If the user is the last admin in the group, they will not be able to leave it. There must always be one admin in the group, otherwise it will be left without control. If that is the case, they must either delete the group or give another member admin permissions first.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Leaves the group related to the value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_GROUP_USER_IS_LAST_ADMIN"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/{group_id}/permissions/": {
            "get": {
                "operationId": "group_permissions",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_permissions](#tag/Workspaces/operation/workspace_permissions).**\n\n**Support for this endpoint will end in 2024.**\n\n Returns a the permission data necessary to determine the permissions of a specific user over a specific group.\n See `core.handler.CoreHandler.get_permissions()` for more details.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The group id we want the permission object for.",
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PermissionObject"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/invitations/{group_invitation_id}/": {
            "get": {
                "operationId": "get_group_invitation",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [get_workspace_invitation](#tag/Workspace-invitations/operation/get_workspace_invitation).**\n\n**Support for this endpoint will end in 2024.**\n\n Returns the requested group invitation if the authorized user has admin right to the related group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the group invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_group_invitation",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [update_workspace_invitation](#tag/Workspace-invitations/operation/update_workspace_invitation).**\n\n**Support for this endpoint will end in 2024.**\n\n Updates the existing group invitation related to the provided `group_invitation_id` param if the authorized user has admin rights to the related group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the group invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_group_invitation",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [delete_workspace_invitation](#tag/Workspace-invitations/operation/delete_workspace_invitation).**\n\n**Support for this endpoint will end in 2024.**\n\n Deletes a group invitation if the authorized user has admin rights to the related group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the group invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/invitations/{group_invitation_id}/accept/": {
            "post": {
                "operationId": "accept_group_invitation",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [accept_workspace_invitation](#tag/Workspace-invitations/operation/accept_workspace_invitation).**\n\n**Support for this endpoint will end in 2024.**\n\n Accepts a group invitation with the given id if the email address of the user matches that of the invitation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Accepts the group invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceUserWorkspace"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_EMAIL_MISMATCH"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/invitations/{group_invitation_id}/reject/": {
            "post": {
                "operationId": "reject_group_invitation",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [reject_workspace_invitation](#tag/Workspace-invitations/operation/reject_workspace_invitation).**\n\n**Support for this endpoint will end in 2024.**\n\n Rejects a group invitation with the given id if the email address of the user matches that of the invitation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Rejects the group invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_EMAIL_MISMATCH"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/invitations/group/{group_id}/": {
            "get": {
                "operationId": "list_group_invitations",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [list_workspace_invitations](#tag/Workspace-invitations/operation/list_workspace_invitations).**\n\n**Support for this endpoint will end in 2024.**\n\n Lists all the group invitations of the group related to the provided `group_id` parameter if the authorized user has admin rights to that group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only invitations that are in the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceInvitation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_group_invitation",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [create_workspace_invitation](#tag/Workspace-invitations/operation/create_workspace_invitation).**\n\n**Support for this endpoint will end in 2024.**\n\n Creates a new group invitations for an email address if the authorized user has admin rights to the related group. An email containing a sign up link will be send to the user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a group invitation to the group related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceInvitation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceInvitation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceInvitation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/invitations/token/{token}/": {
            "get": {
                "operationId": "get_group_invitation_by_token",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [get_workspace_invitation_by_token](#tag/Workspace-invitations/operation/get_workspace_invitation_by_token).**\n\n**Support for this endpoint will end in 2024.**\n\n Responds with the serialized group invitation if an invitation with the provided token is found.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns the group invitation related to the provided token.",
                        "required": true
                    }
                ],
                "tags": [
                    "Group invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "BAD_TOKEN_SIGNATURE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/order/": {
            "post": {
                "operationId": "order_groups",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [order_workspaces](#tag/Workspaces/operation/order_workspaces).**\n\n**Support for this endpoint will end in 2024.**\n\n Changes the order of the provided group ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order will be custom for each user.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkspaces"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkspaces"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkspaces"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/groups/users/{group_user_id}/": {
            "patch": {
                "operationId": "update_group_user",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [update_workspace_user](#tag/Workspaces/operation/update_workspace_user).**\n\n Updates the existing group user related to the provided `group_user_id` param if the authorized user has admin rights to the related group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the group user related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceUser"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_USER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_group_user",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [delete_workspace_user](#tag/Workspaces/operation/delete_workspace_user).**\n\n Deletes a group user if the authorized user has admin rights to the related group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the group user related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/groups/users/group/{group_id}/": {
            "get": {
                "operationId": "list_group_users",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [list_workspace_users](#tag/Workspaces/operation/list_workspace_users).**\n\n Lists all the users that are in a group if the authorized user has admin permissions to the related group. To add a user to a group an invitation must be sent first.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Lists group users related to the provided group value.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search for group users by username, or email."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort group users by name, email or role."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListWorkspaceUsersWithMemberData"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/integration/{integration_id}/": {
            "patch": {
                "operationId": "update_application_integration",
                "description": "Updates an existing integration.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "integration_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the integration",
                        "required": true
                    }
                ],
                "tags": [
                    "Integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIntegrationUpdateIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIntegrationUpdateIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIntegrationUpdateIntegration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationIntegration"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INTEGRATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_application_integration",
                "description": "Deletes the integration related by the given id.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "integration_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the integration",
                        "required": true
                    }
                ],
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INTEGRATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/integration/{integration_id}/move/": {
            "patch": {
                "operationId": "move_application_integration",
                "description": "Moves the integration in the application before another integration or at the end of the application if no before integration is given. The integrations must belong to the same application.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "integration_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the integration to move",
                        "required": true
                    }
                ],
                "tags": [
                    "Integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveIntegration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationIntegration"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_INTEGRATION_NOT_IN_SAME_APPLICATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INTEGRATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/": {
            "get": {
                "operationId": "list_job",
                "description": "List all existing jobs. Jobs are task executed asynchronously in the background. You can use the `get_job` endpoint to read the currentprogress of a the job.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "job_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of job ids in the desired order.The jobs will be returned in the same order as the ids.If a job id is not found it will be ignored."
                    },
                    {
                        "in": "query",
                        "name": "states",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma separated list of jobs state to look for. The only possible values are: `pending`, `finished` and `failed`. It's possible to exclude a state by prefixing it with a `!`. "
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job_TypeJob"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_job",
                "description": "Creates a new job. This job runs asynchronously in the background and execute the task specific to the provided typeparameters. The `get_job` can be used to get the current state of the job.",
                "tags": [
                    "Jobs"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job_TypeCreateJob"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Job_TypeCreateJob"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Job_TypeCreateJob"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job_TypeJob"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/{job_id}/": {
            "get": {
                "operationId": "get_job",
                "description": "Returns the information related to the provided job id. This endpoint can for example be polled to get the state and progress of the job in real time.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The job id to lookup information about.",
                        "required": true
                    }
                ],
                "tags": [
                    "Jobs"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job_TypeJob"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_JOB_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/": {
            "get": {
                "operationId": "admin_licenses",
                "description": "Lists all the valid licenses that are registered to this instance. A premium license can be used to unlock the premium features for a fixed amount of users. An enterprise license can similarly be used to unlock enterpise features. More information about self hosted licenses can be found on our pricing page https://baserow.io/pricing.",
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/License"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "admin_register_license",
                "description": "Registers a new license. After registering you can assign users to the license that will be able to use the license's features while the license is active. If an existing license with the same `license_id` already exists and the provided license has been issued later than that one, the existing one will be upgraded.",
                "tags": [
                    "Admin"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterLicense"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterLicense"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterLicense"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INVALID_LICENSE",
                                                "ERROR_UNSUPPORTED_LICENSE",
                                                "ERROR_PREMIUM_LICENSE_INSTANCE_ID_MISMATCH",
                                                "ERROR_LICENSE_HAS_EXPIRED",
                                                "ERROR_LICENSE_ALREADY_EXISTS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/{id}/": {
            "get": {
                "operationId": "admin_get_license",
                "description": "Responds with detailed information about the license related to the provided parameter.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseWithUsers"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "admin_remove_license",
                "description": "Removes the existing license related to the provided parameter. If the license is active, then all the users that are using the license will lose access to the features granted by that license.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/{id}/{user_id}/": {
            "post": {
                "operationId": "admin_add_user_to_license",
                "description": "Adds the user related to the provided parameter and to the license related to the parameter. This only happens if there are enough seats left on the license and if the user is not already on the license.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the user that must be added to the license.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseUser"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_ALREADY_ON_LICENSE",
                                                "ERROR_NO_SEATS_LEFT_IN_LICENSE",
                                                "ERROR_CANT_MANUALLY_CHANGE_SEATS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST",
                                                "ERROR_USER_NOT_FOUND"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "admin_remove_user_from_license",
                "description": "Removes the user related to the provided parameter and to the license related to the parameter. This only happens if the user is on the license, otherwise nothing will happen.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the user that must be removed from the license.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_CANT_MANUALLY_CHANGE_SEATS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST",
                                                "ERROR_USER_NOT_FOUND"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/{id}/check/": {
            "get": {
                "operationId": "admin_license_check",
                "description": "This endpoint checks with the authority if the license needs to be updated. It also checks if the license is operating within its limits and might take action on that. It could also happen that the license has been deleted because there is an instance id mismatch or because it's invalid. In that case a `204` status code is returned.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LicenseWithUsers"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/{id}/fill-seats/": {
            "post": {
                "operationId": "admin_fill_remaining_seats_of_license",
                "description": "Fills the remaining empty seats of the license with the first users that are found.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LicenseUser"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_CANT_MANUALLY_CHANGE_SEATS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/{id}/lookup-users/": {
            "get": {
                "operationId": "admin_license_lookup_users",
                "description": "This endpoint can be used to lookup users that can be added to a  license. Users that are already in the license are not returned here. Optionally a `search` query parameter can be provided to filter the results.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page of users should be returned."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, only users where the name or email contains the value are returned."
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many users should be returned per page."
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerLicenseUserLookup"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/licenses/{id}/remove-all-users/": {
            "post": {
                "operationId": "admin_remove_all_users_from_license",
                "description": "Removes all the users that are on the license. This will empty all the seats.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The internal identifier of the license, this is `id` and not `license_id`.",
                        "required": true
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_CANT_MANUALLY_CHANGE_SEATS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_LICENSE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/{workspace_id}/": {
            "get": {
                "operationId": "list_workspace_notifications",
                "description": "Lists the notifications for the given workspace and the current user. The response is paginated and the limit and offset parameters can be controlled using the query parameters.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many notifications should be returned."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines the offset of the notifications that should be returned."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace id that the notifications belong to.",
                        "required": true
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerNotificationRecipient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "clear_workspace_notifications",
                "description": "Clear all the notifications for the given workspace and user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace the notifications are in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/{workspace_id}/{notification_id}/": {
            "patch": {
                "operationId": "mark_notification_as_read",
                "description": "Marks a notification as read.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "notification_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The notification id to update.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace the notification is in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationRecipient"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "NOTIFICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/{workspace_id}/mark-all-as-read/": {
            "post": {
                "operationId": "mark_all_workspace_notifications_as_read",
                "description": "Mark as read all the notifications for the given workspace and user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace the notifications are in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/role/{group_id}/": {
            "get": {
                "operationId": "group_list_role_assignments",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_assign_role](#tag/Role-assignments/operation/workspace_assign_role).**\n\n**Support for this endpoint will end in 2024.**\n\n You can list the role assignments within a group, optionally filtered down to a specific scope inside of that group. If the scope isn't specified,the group will be considered the scope.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The group in which the role assignments are related to.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "scope_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the scope you are trying to get all roleassignments for."
                    },
                    {
                        "in": "query",
                        "name": "scope_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The type of scope you are trying to get all roleassignments for."
                    }
                ],
                "tags": [
                    "Role assignments"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OpenApiRoleAssignment"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SCOPE_DOES_NOT_EXIST",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "group_assign_role",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_assign_role](#tag/Role-assignments/operation/workspace_assign_role).**\n\n**Support for this endpoint will end in 2024.**\n\n You can assign a role to a subject into the given group for the given scope with this endpoint. If you want to remove the role you can omit the role property.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The group in which the role assignment takes place.",
                        "required": true
                    }
                ],
                "tags": [
                    "Role assignments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiRoleAssignment"
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SCOPE_DOES_NOT_EXIST",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_TYPE_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/role/{group_id}/batch/": {
            "post": {
                "operationId": "group_batch_assign_role",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_batch_assign_role](#tag/Role-assignments/operation/workspace_batch_assign_role).**\n\n**Support for this endpoint will end in 2024.**\n\n You can assign a role to a multiple subjects into the given group for the given scope with this endpoint. If you want to remove the role you can omit the role property.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The group in which the role assignment takes place.",
                        "required": true
                    }
                ],
                "tags": [
                    "Role assignments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreateRoleAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreateRoleAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreateRoleAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OpenApiRoleAssignment"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_DUPLICATE_ROLE_ASSIGNMENTS",
                                                "ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SCOPE_DOES_NOT_EXIST",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_TYPE_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/role/{workspace_id}/": {
            "get": {
                "operationId": "list_role_assignments",
                "description": "You can list the role assignments within a workspace, optionally filtered downto a specific scope inside of that workspace. If the scope isn't specified,the workspace will be considered the scope.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "scope_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the scope you are trying to get all roleassignments for."
                    },
                    {
                        "in": "query",
                        "name": "scope_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The type of scope you are trying to get all roleassignments for."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace in which the role assignments are related to.",
                        "required": true
                    }
                ],
                "tags": [
                    "Role assignments"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OpenApiRoleAssignment"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SCOPE_DOES_NOT_EXIST",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "assign_role",
                "description": "You can assign a role to a subject into the given workspace for the given scope with this endpoint. If you want to remove the role you can omit the role property.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace in which the role assignment takes place.",
                        "required": true
                    }
                ],
                "tags": [
                    "Role assignments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiRoleAssignment"
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SCOPE_DOES_NOT_EXIST",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_TYPE_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/role/{workspace_id}/batch/": {
            "post": {
                "operationId": "batch_assign_role",
                "description": "You can assign a role to a multiple subjects into the given workspace for the given scopes with this endpoint. If you want to remove the role you can omit the role property.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace in which the role assignment takes place.",
                        "required": true
                    }
                ],
                "tags": [
                    "Role assignments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreateRoleAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreateRoleAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreateRoleAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OpenApiRoleAssignment"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_DUPLICATE_ROLE_ASSIGNMENTS",
                                                "ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SCOPE_DOES_NOT_EXIST",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_TYPE_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/row_comments/{table_id}/{row_id}/": {
            "get": {
                "operationId": "get_row_comments",
                "description": "Returns all row comments for the specified table and row.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines how many rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both."
                    },
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The row to get row comments for.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Can only be used in combination with the `page` parameter and defines how many rows should be returned."
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table the row is in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerRowComment"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_row_comment",
                "description": "Creates a comment on the specified row.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The row to create a comment for.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table to find the row to comment on in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RowCommentCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RowCommentCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RowCommentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RowComment"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_INVALID_COMMENT_MENTION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/row_comments/{table_id}/{row_id}/notification-mode/": {
            "put": {
                "operationId": "update_row_comment_notification_mode",
                "description": "Updates the user's notification preferences for comments made on a specified table row.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The row on which to manage the comment subscription.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table id where the row is in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RowCommentsNotificationMode"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RowCommentsNotificationMode"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RowCommentsNotificationMode"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/row_comments/{table_id}/comment/{comment_id}/": {
            "patch": {
                "operationId": "update_row_comment",
                "description": "Update a row comment.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "comment_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The row comment to update.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table the row is in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RowComment"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_NOT_COMMENT_AUTHOR",
                                                "ERROR_INVALID_COMMENT_MENTION",
                                                "ERROR_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_COMMENT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_row_comment",
                "description": "Delete a row comment.\n\nThis is a **premium** feature.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "comment_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The row comment to delete.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "table_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The table the row is in.",
                        "required": true
                    }
                ],
                "tags": [
                    "Database table rows"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RowComment"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_NOT_COMMENT_AUTHOR"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_NO_PERMISSION_TO_TABLE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TABLE_DOES_NOT_EXIST",
                                                "ERROR_ROW_COMMENT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/settings/": {
            "get": {
                "operationId": "get_settings",
                "description": "Responds with all the admin configured settings.",
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/settings/instance-id/": {
            "get": {
                "operationId": "get_instance_id",
                "description": "Responds with the self hosted instance id. Only a user with staff permissions can request it.",
                "tags": [
                    "Settings"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceId"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/settings/update/": {
            "patch": {
                "operationId": "update_settings",
                "description": "Updates the admin configured settings if the user has admin permissions.",
                "tags": [
                    "Settings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSettings"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSettings"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSettings"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/snapshots/{snapshot_id}/": {
            "delete": {
                "operationId": "delete_snapshot",
                "description": "Deletes a snapshot. Deleting a snapshot doesn't affect the application that the snapshot is made from and doesn't affect any applications that were created by restoring it. Snapshot deletion is permanent and can't be undone.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "snapshot_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id of the snapshot to delete.",
                        "required": true
                    }
                ],
                "tags": [
                    "Snapshots"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_OPERATION_NOT_SUPPORTED",
                                                "ERROR_SNAPSHOT_IS_BEING_RESTORED",
                                                "ERROR_SNAPSHOT_IS_BEING_DELETED",
                                                "ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SNAPSHOT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/snapshots/{snapshot_id}/restore/": {
            "post": {
                "operationId": "restore_snapshot",
                "description": "Restores a snapshot. When an application snapshot is restored, a new application will be created in the same workspace that the original application was placed in with the name of the snapshot and data that were in the original application at the time the snapshot was taken. The original application that the snapshot was taken from is unaffected. Snapshots can be restored multiple times and a number suffix is added to the new application name in the case of a collision.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "snapshot_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id of the snapshot to restore.",
                        "required": true
                    }
                ],
                "tags": [
                    "Snapshots"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_OPERATION_NOT_SUPPORTED",
                                                "ERROR_SNAPSHOT_IS_BEING_RESTORED",
                                                "ERROR_SNAPSHOT_IS_BEING_DELETED",
                                                "ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SNAPSHOT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/snapshots/application/{application_id}/": {
            "get": {
                "operationId": "list_snapshots",
                "description": "Lists snapshots that were created for a given application.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Application ID for which to list snapshots.",
                        "required": true
                    }
                ],
                "tags": [
                    "Snapshots"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Snapshot"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_snapshot",
                "description": "Creates a new application snapshot. Snapshots represent a state of an application at a specific point in time and can be restored later, making it easy to create backups of entire applications.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Application ID for which to list snapshots.",
                        "required": true
                    }
                ],
                "tags": [
                    "Snapshots"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Snapshot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Snapshot"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Snapshot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_MAXIMUM_SNAPSHOTS_REACHED",
                                                "ERROR_APPLICATION_OPERATION_NOT_SUPPORTED",
                                                "ERROR_SNAPSHOT_IS_BEING_CREATED",
                                                "ERROR_SNAPSHOT_NAME_NOT_UNIQUE",
                                                "ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/sso/oauth2/callback/{provider_id}/": {
            "get": {
                "operationId": "oauth_provider_login_callback",
                "description": "Processes callback from OAuth2 provider and logs the user in if successful.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "code",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the provider for which to process the callback."
                    },
                    {
                        "in": "path",
                        "name": "provider_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the provider for which to process the callback.",
                        "required": true
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/sso/oauth2/login/{provider_id}/": {
            "get": {
                "operationId": "oauth_provider_login_redirect",
                "description": "Redirects to the OAuth2 provider's authentication URL based on the provided auth provider's id.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "group_invitation_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Please use the functionally identical `workspace_invitation_token` instead as this querystring is being removed in the future.",
                        "deprecated": true
                    },
                    {
                        "in": "query",
                        "name": "original",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The relative part of URL that the user wanted to access."
                    },
                    {
                        "in": "path",
                        "name": "provider_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the provider for redirect.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "workspace_invitation_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The invitation token sent to the user to join a specific workspace."
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/sso/saml/acs/": {
            "post": {
                "operationId": "auth_provider_saml_acs_url",
                "description": "Complete the SAML authentication flow by validating the SAML response. Sign in the user if already exists in Baserow or create a new one otherwise. Once authenticated, the user will be redirected to the original URL they were trying to access. If the response is invalid, the user will be redirected to an error page with a specific error message.It accepts the language code and the workspace invitation token as query parameters if provided.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SAMLResponse"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SAMLResponse"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SAMLResponse"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/sso/saml/login/": {
            "get": {
                "operationId": "auth_provider_saml_sp_login",
                "description": "This is the endpoint that is called when the user wants to initiate a SSO SAML login from Baserow (the service provider). The user will be redirected to the SAML identity provider (IdP) where the user can authenticate. Once logged in in the IdP, the user will be redirected back to the assertion consumer service endpoint (ACS) where the SAML response will be validated and a new JWT session token will be provided to work with Baserow APIs.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The email address of the user that want to sign in using SAML."
                    },
                    {
                        "in": "query",
                        "name": "group_invitation_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Please use the functionally identical `workspace_invitation_token` instead as this querystring is being removed in the future",
                        "deprecated": true
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                    },
                    {
                        "in": "query",
                        "name": "original",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The url to which the user should be redirected after a successful login or sign up."
                    },
                    {
                        "in": "query",
                        "name": "workspace_invitation_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided and valid, the user accepts the workspace invitation and will have access to the workspace after login or signing up."
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/sso/saml/login-url/": {
            "get": {
                "operationId": "auth_provider_login_url",
                "description": "Return the correct redirect_url to initiate the SSO SAML login. It needs an email address if multiple SAML providers are configured otherwise the only configured SAML provider signup URL will be returned.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The email address of the user that want to sign in using SAML."
                    },
                    {
                        "in": "query",
                        "name": "group_invitation_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Please use the functionally identical `workspace_invitation_token` instead as this querystring is being removed in the future.",
                        "deprecated": true
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "schema": {
                            "type": "string"
                        },
                        "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                    },
                    {
                        "in": "query",
                        "name": "original",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The url to which the user should be redirected after a successful login."
                    },
                    {
                        "in": "query",
                        "name": "workspace_invitation_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided and valid, the user accepts the workspace invitation and will have access to the workspace after login or signing up."
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SAML_INVALID_LOGIN_REQUEST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/{team_id}/": {
            "get": {
                "operationId": "get_team",
                "description": "Returns the information related to the provided team id.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the team related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_team",
                "description": "Updates an existing team with a new name.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TEAM_NAME_NOT_UNIQUE",
                                                "ERROR_SUBJECT_BAD_REQUEST\""
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_team",
                "description": "Deletes a team if the authorized user is in the team's workspace. All the related children (e.g. subjects) are also going to be deleted.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the team related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/{team_id}/subjects/": {
            "get": {
                "operationId": "list_team_subjects",
                "description": "Lists all team subjects in a given team.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamSubjectResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_subject",
                "description": "Creates a new team subject.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamSubject"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamSubject"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamSubject"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamSubjectResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_SUBJECT_NOT_IN_GROUP",
                                                "ERROR_SUBJECT_TYPE_UNSUPPORTED",
                                                "ERROR_SUBJECT_BAD_REQUEST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/{team_id}/subjects/{subject_id}/": {
            "get": {
                "operationId": "get_subject",
                "description": "Returns the information related to the provided subject id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "subject_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the subject related to the provided value.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamSubjectResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_subject",
                "description": "Deletes a subject if the authorized user is in the team's workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "subject_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The subject id to remove from the team.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "team_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The team id which the subject will be removed from.",
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_TEAM_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/group/{group_id}/": {
            "get": {
                "operationId": "group_list_teams",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_list_teams](#tag/Teams/operation/workspace_list_teams).**\n\n**Support for this endpoint will end in 2024.**\n\n Lists all teams in a given group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Lists all teams in a given group.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search for teams by their name."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort teams by name or subjects."
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "group_create_team",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_create_team](#tag/Teams/operation/create_workspace).**\n\n**Support for this endpoint will end in 2024.**\n\n Creates a new team in a given group.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_SUBJECT_BAD_REQUEST",
                                                "ERROR_TEAM_NAME_NOT_UNIQUE",
                                                "ERROR_SUBJECT_NOT_IN_GROUP",
                                                "ERROR_SUBJECT_TYPE_UNSUPPORTED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/workspace/{workspace_id}/": {
            "get": {
                "operationId": "workspace_list_teams",
                "description": "Lists all teams in a given workspace.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search for teams by their name."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort teams by name or subjects."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Lists all teams in a given workspace.",
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "workspace_create_team",
                "description": "Creates a new team.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_SUBJECT_BAD_REQUEST",
                                                "ERROR_TEAM_NAME_NOT_UNIQUE",
                                                "ERROR_SUBJECT_NOT_IN_GROUP",
                                                "ERROR_SUBJECT_TYPE_UNSUPPORTED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_SUBJECT_DOES_NOT_EXIST",
                                                "ERROR_ROLE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/templates/": {
            "get": {
                "operationId": "list_templates",
                "description": "Lists all the template categories and the related templates that are in that category. The template's `workspace_id` can be used for previewing purposes because that workspace contains the applications that are in the template. All the `get` and `list` endpoints related to that workspace are publicly accessible.",
                "tags": [
                    "Templates"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TemplateCategories"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/templates/install/{group_id}/{template_id}/": {
            "post": {
                "operationId": "group_install_template",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_install_template](#tag/Templates/operation/workspace_install_template).**\n\n**Support for this endpoint will end in 2024.**\n\n Installs the applications of the given template into the given group if the user has access to that group. The response contains those newly created applications.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the group where the template applications must be installed into.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "template_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the template that must be installed.",
                        "required": true
                    }
                ],
                "tags": [
                    "Templates"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Applications"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TEMPLATE_FILE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_TEMPLATE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/templates/install/{group_id}/{template_id}/async/": {
            "post": {
                "operationId": "group_install_template_async",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_install_template_async](#tag/Templates/operation/workspace_install_template_async).**\n\n**Support for this endpoint will end in 2024.**\n\n Start an async job to install the applications of the given template into the given group if the user has access to that group. The response contains those newly created applications.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the group where the template applications must be installed into.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "template_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the template that must be installed.",
                        "required": true
                    }
                ],
                "tags": [
                    "Templates"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleInstallTemplateJobType"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TEMPLATE_FILE_DOES_NOT_EXIST",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_TEMPLATE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/templates/install/{workspace_id}/{template_id}/": {
            "post": {
                "operationId": "install_template",
                "description": "(Deprecated) Installs the applications of the given template into the given workspace if the user has access to that workspace. The response contains those newly created applications.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "template_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the template that must be installed.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the workspace where the template applications must be installed into.",
                        "required": true
                    }
                ],
                "tags": [
                    "Templates"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Applications"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TEMPLATE_FILE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_TEMPLATE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/templates/install/{workspace_id}/{template_id}/async/": {
            "post": {
                "operationId": "install_template_async",
                "description": "Start an async job to install the applications of the given template into the given workspace if the user has access to that workspace. The response contains those newly created applications.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "template_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the template that must be installed.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id related to the workspace where the template applications must be installed into.",
                        "required": true
                    }
                ],
                "tags": [
                    "Templates"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleInstallTemplateJobType"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TEMPLATE_FILE_DOES_NOT_EXIST",
                                                "ERROR_MAX_JOB_COUNT_EXCEEDED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_TEMPLATE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/trash/": {
            "get": {
                "operationId": "get_trash_structure",
                "description": "Responds with the workspaces and applications available for the requesting user to inspect the trash contents of.",
                "tags": [
                    "Trash"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrashStructure"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/trash/group/{group_id}/": {
            "get": {
                "operationId": "group_get_contents",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_get_contents](#tag/Trash/operation/workspace_get_contents).**\n\n**Support for this endpoint will end in 2024.**\n\n Responds with trash contents for a group optionally filtered to a specific application.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Optionally filters down the trash to only items for this application in the group."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the trash for the group with this id.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Selects which page of trash contents should be returned."
                    }
                ],
                "tags": [
                    "Trash"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerTrashContents"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "group_empty_contents",
                "description": "**This endpoint has been deprecated and replaced with a new endpoint, [workspace_empty_contents](#tag/Trash/operation/workspace_empty_contents).**\n\n**Support for this endpoint will end in 2024.**\n\n Empties the specified group and/or application of trash, including the group and application themselves if they are trashed also.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Optionally filters down the trash to delete to only items for this application in the group."
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The group whose trash contents to empty, including the group itself if it is also trashed.",
                        "required": true
                    }
                ],
                "tags": [
                    "Trash"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/trash/restore/": {
            "patch": {
                "operationId": "restore",
                "description": "Restores the specified trashed item back into baserow.",
                "tags": [
                    "Trash"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTrashEntryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTrashEntryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTrashEntryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_TRASH_ITEM_DOES_NOT_EXIST",
                                                "ERROR_CANNOT_RESTORE_PARENT_BEFORE_CHILD",
                                                "ERROR_PARENT_ID_MUST_NOT_BE_PROVIDED",
                                                "ERROR_PARENT_ID_MUST_BE_PROVIDED",
                                                "ERROR_CANT_RESTORE_AS_RELATED_TABLE_TRASHED",
                                                "ERROR_CANNOT_RESTORE_ITEM_NOT_OWNED_BY_USER"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/trash/workspace/{workspace_id}/": {
            "get": {
                "operationId": "workspace_get_contents",
                "description": "Responds with trash contents for a workspace optionally filtered to a specific application.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Optionally filters down the trash to only items for this application in the workspace."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Selects which page of trash contents should be returned."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the trash for the workspace with this id.",
                        "required": true
                    }
                ],
                "tags": [
                    "Trash"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginationSerializerTrashContents"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "workspace_empty_contents",
                "description": "Empties the specified workspace and/or application of trash, including the workspace and application themselves if they are trashed also.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Optionally filters down the trash to delete to only items for this application in the workspace."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace whose trash contents to empty, including the workspace itself if it is also trashed.",
                        "required": true
                    }
                ],
                "tags": [
                    "Trash"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_APPLICATION_NOT_IN_GROUP",
                                                "ERROR_GROUP_DOES_NOT_EXIST",
                                                "ERROR_APPLICATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/": {
            "post": {
                "operationId": "create_user",
                "description": "Creates a new user based on the provided values. If desired an authentication JWT can be generated right away. After creating an account the initial workspace containing a database is created.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "description": "An object containing information related to the user.",
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "The first name of related user."
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "description": "The username of the related user. This is always an email address."
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string",
                                            "deprecated": true,
                                            "description": "Deprecated. Use the `access_token` instead."
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "description": "'access_token' can be used to authorize for other endpoints that require authorization. This token will be valid for 10 minutes."
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "description": "'refresh_token' can be used to get a new valid 'access_token'. This token will be valid for 168 hours."
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_ALREADY_EXISTS",
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "BAD_TOKEN_SIGNATURE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user-files/upload-file/": {
            "post": {
                "operationId": "upload_file",
                "description": "Uploads a file to Baserow by uploading the file contents directly. A `file` multipart is expected containing the file contents.",
                "tags": [
                    "User files"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFile"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INVALID_FILE",
                                                "ERROR_FILE_SIZE_TOO_LARGE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user-files/upload-via-url/": {
            "post": {
                "operationId": "upload_via_url",
                "description": "Uploads a file to Baserow by downloading it from the provided URL.",
                "tags": [
                    "User files"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFileUploadViaURLRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFileUploadViaURLRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFileUploadViaURLRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    },
                    {
                        "Database token": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFile"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INVALID_FILE",
                                                "ERROR_FILE_SIZE_TOO_LARGE",
                                                "ERROR_FILE_URL_COULD_NOT_BE_REACHED",
                                                "ERROR_INVALID_FILE_URL"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/account/": {
            "patch": {
                "operationId": "update_account",
                "description": "Updates the account information of the authenticated user.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/change-password/": {
            "post": {
                "operationId": "change_password",
                "description": "Changes the password of an authenticated user, but only if the old password matches.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordBodyValidation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordBodyValidation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordBodyValidation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_INVALID_OLD_PASSWORD",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/dashboard/": {
            "get": {
                "operationId": "dashboard",
                "description": "Lists all the relevant user information that for example could be shown on a dashboard. It will contain all the pending workspace invitations for that user.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Dashboard"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/redo/": {
            "patch": {
                "operationId": "redo",
                "description": "Redoes the latest redoable action performed by the user making the request. a ClientSessionId header must be provided and only actions which were performed the same user with the same ClientSessionId value set on the api request that performed the action will be redone.Additionally the ClientSessionId header must be between 1 and 256 characters long and must only contain alphanumeric or the - characters.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The particular client session to redo actions for. The actions must have been performed with this same header set with the same value for them to be redoable by this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUndoRedoRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUndoRedoRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUndoRedoRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UndoRedoResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/reset-password/": {
            "post": {
                "operationId": "reset_password",
                "description": "Changes the password of a user if the reset token is valid. The **send_password_reset_email** endpoint sends an email to the user containing the token. That token can be used to change the password here without providing the old password.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordBodyValidation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordBodyValidation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordBodyValidation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "BAD_TOKEN_SIGNATURE",
                                                "EXPIRED_TOKEN_SIGNATURE",
                                                "ERROR_USER_NOT_FOUND",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/schedule-account-deletion/": {
            "post": {
                "operationId": "schedule_account_deletion",
                "description": "Schedules the account deletion of the authenticated user. The user will be permanently deleted after the grace delay defined by the instance administrator.",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/send-reset-password-email/": {
            "post": {
                "operationId": "send_password_reset_email",
                "description": "Sends an email containing the password reset link to the email address of the user. This will only be done if a user is found with the given email address. The endpoint will not fail if the email address is not found. The link is going to the valid for 48 hours.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendResetPasswordEmailBodyValidation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SendResetPasswordEmailBodyValidation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SendResetPasswordEmailBodyValidation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_HOSTNAME_IS_NOT_ALLOWED"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/token-auth/": {
            "post": {
                "operationId": "token_auth",
                "description": "Authenticates an existing user based on their email and their password. If successful, an access token and a refresh token will be returned.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairWithUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairWithUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairWithUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "description": "An object containing information related to the user.",
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "The first name of related user."
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "description": "The username of the related user. This is always an email address."
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string",
                                            "deprecated": true,
                                            "description": "Deprecated. Use the `access_token` instead."
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "description": "'access_token' can be used to authorize for other endpoints that require authorization. This token will be valid for 10 minutes."
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "description": "'refresh_token' can be used to get a new valid 'access_token'. This token will be valid for 168 hours."
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An active user with the provided email and password could not be found."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/token-blacklist/": {
            "post": {
                "operationId": "token_blacklist",
                "description": "Blacklists the provided token. This can be used the sign the user off.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenBlacklist"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenBlacklist"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenBlacklist"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The JWT refresh token is invalid or expired."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/token-refresh/": {
            "post": {
                "operationId": "token_refresh",
                "description": "Generate a new access_token that can be used to continue operating on Baserow starting from a valid refresh token.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshWithUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshWithUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshWithUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "description": "An object containing information related to the user.",
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "The first name of related user."
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "description": "The username of the related user. This is always an email address."
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string",
                                            "deprecated": true,
                                            "description": "Deprecated. Use the `access_token` instead."
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "description": "'access_token' can be used to authorize for other endpoints that require authorization. This token will be valid for 10 minutes."
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The JWT refresh token is invalid or expired."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/token-verify/": {
            "post": {
                "operationId": "token_verify",
                "description": "Verifies if the refresh token is valid and can be used to generate a new access_token.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerifyWithUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerifyWithUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerifyWithUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "description": "An object containing information related to the user.",
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "description": "The first name of related user."
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "description": "The username of the related user. This is always an email address."
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The JWT refresh token is invalid or expired."
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user/undo/": {
            "patch": {
                "operationId": "undo",
                "description": "undoes the latest undoable action performed by the user making the request. a ClientSessionId header must be provided and only actions which were performed the same user with the same ClientSessionId value set on the api request that performed the action will be undone.Additionally the ClientSessionId header must be between 1 and 256 characters long and must only contain alphanumeric or the - characters.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The particular client session to undo actions for. The actions must have been performed with this same header set with the same value for them to be undoable by this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUndoRedoRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUndoRedoRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUndoRedoRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UndoRedoResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user_source/{user_source_id}/": {
            "patch": {
                "operationId": "update_application_user_source",
                "description": "Updates an existing user_source.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "user_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the user_source",
                        "required": true
                    }
                ],
                "tags": [
                    "User sources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser_SourceUpdateUserSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser_SourceUpdateUserSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser_SourceUpdateUserSource"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User_SourceUserSource"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_SOURCE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_application_user_source",
                "description": "Deletes the user_source related by the given id.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "user_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the user_source",
                        "required": true
                    }
                ],
                "tags": [
                    "User sources"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_SOURCE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/user_source/{user_source_id}/move/": {
            "patch": {
                "operationId": "move_application_user_source",
                "description": "Moves the user_source in the application before another user_source or at the end of the application if no before user_source is given. The user_sources must belong to the same application.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "path",
                        "name": "user_source_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The id of the user_source to move",
                        "required": true
                    }
                ],
                "tags": [
                    "User sources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveUserSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveUserSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMoveUserSource"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User_SourceUserSource"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_USER_SOURCE_NOT_IN_SAME_APPLICATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_SOURCE_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/": {
            "get": {
                "operationId": "list_workspaces",
                "description": "Lists all the workspaces of the authorized user. A workspace can contain multiple applications like a database. Multiple users can have access to a workspace. For example each company could have their own workspace containing databases related to that company. The order of the workspaces are custom for each user. The order is configurable via the **order_workspaces** endpoint.",
                "tags": [
                    "Workspaces"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceUserWorkspace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_workspace",
                "description": "Creates a new workspace where only the authorized user has access to. No initial data like database applications are added, they have to be created via other endpoints.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceUserWorkspace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/{workspace_id}/": {
            "patch": {
                "operationId": "update_workspace",
                "description": "Updates the existing workspace related to the provided `workspace_id` parameter if the authorized user belongs to the workspace. It is not yet possible to add additional users to a workspace.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkspace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkspace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkspace"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_workspace",
                "description": "Deletes an existing workspace if the authorized user belongs to the workspace. All the applications, databases, tables etc that were in the workspace are going to be deleted also.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_REQUEST_BODY_VALIDATION",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/{workspace_id}/leave/": {
            "post": {
                "operationId": "leave_workspace",
                "description": "Makes the authenticated user leave the workspace related to the provided `workspace_id` if the user is in that workspace. If the user is the last admin in the workspace, they will not be able to leave it. There must always be one admin in the workspace, otherwise it will be left without control. If that is the case, they must either delete the workspace or give another member admin permissions first.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Leaves the workspace related to the value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_GROUP_USER_IS_LAST_ADMIN"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/{workspace_id}/permissions/": {
            "get": {
                "operationId": "workspace_permissions",
                "description": "Returns a the permission data necessary to determine the permissions of a specific user over a specific workspace. \nSee `core.handler.CoreHandler.get_permissions()` for more details.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The workspace id we want the permission object for.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PermissionObject"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/invitations/{workspace_invitation_id}/": {
            "get": {
                "operationId": "get_workspace_invitation",
                "description": "Returns the requested workspace invitation if the authorized user has admin right to the related workspace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns the workspace invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_workspace_invitation",
                "description": "Updates the existing workspace invitation related to the provided `workspace_invitation_id` param if the authorized user has admin rights to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the workspace invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_workspace_invitation",
                "description": "Deletes a workspace invitation if the authorized user has admin rights to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the workspace invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/invitations/{workspace_invitation_id}/accept/": {
            "post": {
                "operationId": "accept_workspace_invitation",
                "description": "Accepts a workspace invitation with the given id if the email address of the user matches that of the invitation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Accepts the workspace invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceUserWorkspace"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_EMAIL_MISMATCH"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/invitations/{workspace_invitation_id}/reject/": {
            "post": {
                "operationId": "reject_workspace_invitation",
                "description": "Rejects a workspace invitation with the given id if the email address of the user matches that of the invitation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_invitation_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Rejects the workspace invitation related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_EMAIL_MISMATCH"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/invitations/token/{token}/": {
            "get": {
                "operationId": "get_workspace_invitation_by_token",
                "description": "Responds with the serialized workspace invitation if an invitation with the provided token is found.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Returns the workspace invitation related to the provided token.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserWorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "BAD_TOKEN_SIGNATURE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/invitations/workspace/{workspace_id}/": {
            "get": {
                "operationId": "list_workspace_invitations",
                "description": "Lists all the workspace invitations of the workspace related to the provided `workspace_id` parameter if the authorized user has admin rights to that workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Returns only invitations that are in the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceInvitation"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_workspace_invitation",
                "description": "Creates a new workspace invitations for an email address if the authorized user has admin rights to the related workspace. An email containing a sign up link will be send to the user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Creates a workspace invitation to the workspace related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspace invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceInvitation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceInvitation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceInvitation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceInvitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/order/": {
            "post": {
                "operationId": "order_workspaces",
                "description": "Changes the order of the provided workspace ids to the matching position that the id has in the list. If the authorized user does not belong to the workspace it will be ignored. The order will be custom for each user.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "ClientSessionId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone."
                    },
                    {
                        "in": "header",
                        "name": "ClientUndoRedoActionGroupId",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call."
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkspaces"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkspaces"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderWorkspaces"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/workspaces/users/{workspace_user_id}/": {
            "patch": {
                "operationId": "update_workspace_user",
                "description": "Updates the existing workspace user related to the provided `workspace_user_id` param if the authorized user has admin rights to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Updates the workspace user related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceUser"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_REQUEST_BODY_VALIDATION"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_USER_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_workspace_user",
                "description": "Deletes a workspace user if the authorized user has admin rights to the related workspace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Deletes the workspace user related to the provided value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_INVITATION_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/workspaces/users/workspace/{workspace_id}/": {
            "get": {
                "operationId": "list_workspace_users",
                "description": "Lists all the users that are in a workspace if the authorized user has admin permissions to the related workspace. To add a user to a workspace an invitation must be sent first.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search for workspace users by username, or email."
                    },
                    {
                        "in": "query",
                        "name": "sorts",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sort workspace users by name, email or role."
                    },
                    {
                        "in": "path",
                        "name": "workspace_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Lists workspace users related to the provided workspace value.",
                        "required": true
                    }
                ],
                "tags": [
                    "Workspaces"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListWorkspaceUsersWithMemberData"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_USER_NOT_IN_GROUP",
                                                "ERROR_USER_INVALID_GROUP_PERMISSIONS",
                                                "ERROR_INVALID_SORT_DIRECTION",
                                                "ERROR_INVALID_SORT_ATTRIBUTE"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Machine readable error indicating what went wrong.",
                                            "enum": [
                                                "ERROR_GROUP_DOES_NOT_EXIST"
                                            ]
                                        },
                                        "detail": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "format": "string",
                                                    "description": "Human readable details about what went wrong."
                                                },
                                                {
                                                    "type": "object",
                                                    "format": "object",
                                                    "description": "Machine readable object about what went wrong."
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "description": "This serializer must be kept in sync with `UserSerializer`.",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 2
                    },
                    "language": {
                        "type": "string",
                        "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB.",
                        "maxLength": 10,
                        "minLength": 2
                    },
                    "email_notification_frequency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmailNotificationFrequencyEnum"
                            }
                        ],
                        "description": "The maximum frequency at which the user wants to receive email notifications.\n\n* `instant` - instant\n* `daily` - daily\n* `weekly` - weekly\n* `never` - never"
                    }
                }
            },
            "ActionScopes": {
                "type": "object",
                "description": "Mixin to a DRF serializer class to raise an exception if data with unknown fields\nis provided to the serializer.",
                "properties": {
                    "root": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "If set to true then actions registered in the root scope will be included when undoing or redoing."
                    },
                    "workspace": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "If set to a workspaces id then any actions directly related to that workspace will be be included when undoing or redoing."
                    },
                    "group": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "If set to a workspaces id then any actions directly related to that workspace will be be included when undoing or redoing."
                    },
                    "application": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "If set to an applications id then any actions directly related to that application will be be included when undoing or redoing."
                    },
                    "table": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "If set to a table id then any actions directly related to that table will be be included when undoing or redoing."
                    },
                    "view": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "If set to an view id then any actions directly related to that view will be be included when undoing or redoing."
                    },
                    "teams_in_workspace": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "If set to a workspace id then any actions directly related to that workspace will be be included when undoing or redoing."
                    }
                }
            },
            "AdminDashboard": {
                "type": "object",
                "properties": {
                    "total_users": {
                        "type": "integer"
                    },
                    "total_groups": {
                        "type": "integer"
                    },
                    "total_workspaces": {
                        "type": "integer"
                    },
                    "total_applications": {
                        "type": "integer"
                    },
                    "new_users_last_24_hours": {
                        "type": "integer"
                    },
                    "new_users_last_7_days": {
                        "type": "integer"
                    },
                    "new_users_last_30_days": {
                        "type": "integer"
                    },
                    "previous_new_users_last_24_hours": {
                        "type": "integer"
                    },
                    "previous_new_users_last_7_days": {
                        "type": "integer"
                    },
                    "previous_new_users_last_30_days": {
                        "type": "integer"
                    },
                    "active_users_last_24_hours": {
                        "type": "integer"
                    },
                    "active_users_last_7_days": {
                        "type": "integer"
                    },
                    "active_users_last_30_days": {
                        "type": "integer"
                    },
                    "previous_active_users_last_24_hours": {
                        "type": "integer"
                    },
                    "previous_active_users_last_7_days": {
                        "type": "integer"
                    },
                    "previous_active_users_last_30_days": {
                        "type": "integer"
                    },
                    "new_users_per_day": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminDashboardPerDay"
                        }
                    },
                    "active_users_per_day": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminDashboardPerDay"
                        }
                    }
                },
                "required": [
                    "active_users_last_24_hours",
                    "active_users_last_30_days",
                    "active_users_last_7_days",
                    "active_users_per_day",
                    "new_users_last_24_hours",
                    "new_users_last_30_days",
                    "new_users_last_7_days",
                    "new_users_per_day",
                    "previous_active_users_last_24_hours",
                    "previous_active_users_last_30_days",
                    "previous_active_users_last_7_days",
                    "previous_new_users_last_24_hours",
                    "previous_new_users_last_30_days",
                    "previous_new_users_last_7_days",
                    "total_applications",
                    "total_groups",
                    "total_users",
                    "total_workspaces"
                ]
            },
            "AdminDashboardPerDay": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "count",
                    "date"
                ]
            },
            "AggregationRawTypeEnum": {
                "enum": [
                    "empty_count",
                    "not_empty_count",
                    "unique_count",
                    "min",
                    "max",
                    "sum",
                    "average",
                    "median",
                    "decile",
                    "variance",
                    "std_dev"
                ],
                "type": "string",
                "description": "* `empty_count` - empty_count\n* `not_empty_count` - not_empty_count\n* `unique_count` - unique_count\n* `min` - min\n* `max` - max\n* `sum` - sum\n* `average` - average\n* `median` - median\n* `decile` - decile\n* `variance` - variance\n* `std_dev` - std_dev"
            },
            "AirtableImportJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "group_id": {
                        "type": "integer",
                        "description": "The group ID where the Airtable base must be imported into."
                    },
                    "workspace_id": {
                        "type": "integer",
                        "description": "The workspace ID where the Airtable base must be imported into."
                    },
                    "airtable_share_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The publicly shared URL of the Airtable base (e.g. https://airtable.com/shrxxxxxxxxxxxxxx)"
                    }
                },
                "required": [
                    "airtable_share_url",
                    "type"
                ]
            },
            "AirtableImportJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "group_id": {
                        "type": "integer",
                        "description": "The group ID where the Airtable base must be imported into."
                    },
                    "workspace_id": {
                        "type": "integer",
                        "description": "The workspace ID where the Airtable base must be imported into."
                    },
                    "database": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "airtable_share_id": {
                        "type": "string",
                        "format": "uri",
                        "description": "Public ID of the shared Airtable base that must be imported.",
                        "maxLength": 200
                    }
                },
                "required": [
                    "airtable_share_id",
                    "database",
                    "group_id",
                    "id",
                    "progress_percentage",
                    "state",
                    "type",
                    "workspace_id"
                ]
            },
            "Alignment0e8Enum": {
                "enum": [
                    "top",
                    "center",
                    "bottom"
                ],
                "type": "string",
                "description": "* `top` - Top\n* `center` - Center\n* `bottom` - Bottom"
            },
            "Alignment675Enum": {
                "enum": [
                    "left",
                    "center",
                    "right"
                ],
                "type": "string",
                "description": "* `left` - Left\n* `center` - Center\n* `right` - Right"
            },
            "App_Auth_ProviderAppAuthProvider": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_password": "#/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider"
                    }
                }
            },
            "App_Auth_ProviderBaseAppAuthProvider": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_password": "#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider"
                    }
                }
            },
            "Application": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "The workspace that the application belongs to."
                    }
                },
                "required": [
                    "group",
                    "id",
                    "name",
                    "order",
                    "type",
                    "workspace"
                ]
            },
            "ApplicationCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "type": {
                        "$ref": "#/components/schemas/ApplicationCreateTypeEnum"
                    },
                    "init_with_data": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "ApplicationCreateTypeEnum": {
                "enum": [
                    "database",
                    "builder"
                ],
                "type": "string",
                "description": "* `database` - database\n* `builder` - builder"
            },
            "Applications": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DatabaseApplication"
                    },
                    {
                        "$ref": "#/components/schemas/BuilderApplication"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "database": "#/components/schemas/DatabaseApplication",
                        "builder": "#/components/schemas/BuilderApplication"
                    }
                }
            },
            "ArrayFormulaTypeEnum": {
                "enum": [
                    "invalid",
                    "text",
                    "char",
                    "button",
                    "link",
                    "date_interval",
                    "duration",
                    "date",
                    "boolean",
                    "number",
                    "single_select",
                    "multiple_select",
                    "single_file"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `text` - text\n* `char` - char\n* `button` - button\n* `link` - link\n* `date_interval` - date_interval\n* `duration` - duration\n* `date` - date\n* `boolean` - boolean\n* `number` - number\n* `single_select` - single_select\n* `multiple_select` - multiple_select\n* `single_file` - single_file"
            },
            "AuditLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "action_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "type": "string",
                        "readOnly": true
                    },
                    "group": {
                        "type": "string",
                        "readOnly": true
                    },
                    "workspace": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ip_address": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "action_type",
                    "description",
                    "group",
                    "id",
                    "ip_address",
                    "timestamp",
                    "type",
                    "user",
                    "workspace"
                ]
            },
            "AuditLogActionType": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/IdEnum"
                    },
                    "value": {
                        "type": "string",
                        "description": "Given the *incoming* primitive data, return the value for this field\nthat should be validated and transformed to a native value.",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "AuditLogExportJobCreateJob": {
                "type": "object",
                "description": "When mixed in to a model serializer for an ExportJob this will add an url field\nwith the actual usable url of the export job's file (if it has one).",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "export_charset": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportCharsetEnum"
                            }
                        ],
                        "default": "utf-8",
                        "description": "The character set to use when creating the export file.\n\n* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
                    },
                    "csv_column_separator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
                            }
                        ],
                        "default": ",",
                        "description": "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \u001e\n* `unit_separator` - \u001f"
                    },
                    "csv_first_row_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to generate a header row at the top of the csv file."
                    },
                    "filter_user_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The user to filter the audit log by."
                    },
                    "filter_workspace_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The workspace to filter the audit log by."
                    },
                    "filter_action_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FilterActionTypeEnum"
                            }
                        ],
                        "description": "Optional: The action type to filter the audit log by.\n\n* `create_group` - create_group\n* `delete_group` - delete_group\n* `update_group` - update_group\n* `order_groups` - order_groups\n* `create_application` - create_application\n* `update_application` - update_application\n* `delete_application` - delete_application\n* `order_applications` - order_applications\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_group_invitation` - create_group_invitation\n* `delete_group_invitation` - delete_group_invitation\n* `accept_group_invitation` - accept_group_invitation\n* `reject_group_invitation` - reject_group_invitation\n* `update_group_invitation_permissions` - update_group_invitation_permissions\n* `leave_group` - leave_group\n* `create_snapshot` - create_snapshot\n* `delete_snapshot` - delete_snapshot\n* `restore_snapshot` - restore_snapshot\n* `empty_trash` - empty_trash\n* `restore_from_trash` - restore_from_trash\n* `create_user` - create_user\n* `update_user` - update_user\n* `schedule_user_deletion` - schedule_user_deletion\n* `cancel_user_deletion` - cancel_user_deletion\n* `sign_in_user` - sign_in_user\n* `change_user_password` - change_user_password\n* `send_reset_user_password` - send_reset_user_password\n* `reset_user_password` - reset_user_password\n* `create_db_token` - create_db_token\n* `update_db_token_name` - update_db_token_name\n* `update_db_token_permissions` - update_db_token_permissions\n* `rotate_db_token_key` - rotate_db_token_key\n* `delete_db_token_key` - delete_db_token_key\n* `create_webhook` - create_webhook\n* `delete_webhook` - delete_webhook\n* `update_webhook` - update_webhook\n* `export_table` - export_table\n* `import_database_from_airtable` - import_database_from_airtable\n* `create_table` - create_table\n* `delete_table` - delete_table\n* `order_tables` - order_tables\n* `update_table` - update_table\n* `duplicate_table` - duplicate_table\n* `create_row` - create_row\n* `create_rows` - create_rows\n* `import_rows` - import_rows\n* `delete_row` - delete_row\n* `delete_rows` - delete_rows\n* `move_row` - move_row\n* `update_row` - update_row\n* `update_rows` - update_rows\n* `create_view` - create_view\n* `duplicate_view` - duplicate_view\n* `delete_view` - delete_view\n* `order_views` - order_views\n* `update_view` - update_view\n* `create_view_filter` - create_view_filter\n* `update_view_filter` - update_view_filter\n* `delete_view_filter` - delete_view_filter\n* `create_view_sort` - create_view_sort\n* `update_view_sort` - update_view_sort\n* `delete_view_sort` - delete_view_sort\n* `create_view_group` - create_view_group\n* `update_view_group` - update_view_group\n* `delete_view_group` - delete_view_group\n* `rotate_view_slug` - rotate_view_slug\n* `update_view_field_options` - update_view_field_options\n* `create_decoration` - create_decoration\n* `update_decoration` - update_decoration\n* `delete_decoration` - delete_decoration\n* `create_view_filter_group` - create_view_filter_group\n* `update_view_filter_group` - update_view_filter_group\n* `delete_view_filter_group` - delete_view_filter_group\n* `create_field` - create_field\n* `delete_field` - delete_field\n* `update_field` - update_field\n* `duplicate_field` - duplicate_field\n* `create_row_comment` - create_row_comment\n* `delete_row_comment` - delete_row_comment\n* `update_row_comment` - update_row_comment\n* `create_team` - create_team\n* `update_team` - update_team\n* `delete_team` - delete_team\n* `create_team_subject` - create_team_subject\n* `delete_team_subject` - delete_team_subject\n* `batch_assign_role` - batch_assign_role"
                    },
                    "filter_from_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The start date to filter the audit log by."
                    },
                    "filter_to_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The end date to filter the audit log by."
                    },
                    "exclude_columns": {
                        "type": "string",
                        "description": "Optional: A comma separated list of column names to exclude from the export. Available options are `user_email, user_id, workspace_name, workspace_id, type, description, timestamp, ip_address`."
                    }
                },
                "required": [
                    "type",
                    "url"
                ]
            },
            "AuditLogExportJobJob": {
                "type": "object",
                "description": "When mixed in to a model serializer for an ExportJob this will add an url field\nwith the actual usable url of the export job's file (if it has one).",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "csv_column_separator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
                            }
                        ],
                        "default": ",",
                        "description": "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \u001e\n* `unit_separator` - \u001f"
                    },
                    "csv_first_row_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to generate a header row at the top of the csv file."
                    },
                    "export_charset": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportCharsetEnum"
                            }
                        ],
                        "default": "utf-8",
                        "description": "The character set to use when creating the export file.\n\n* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
                    },
                    "filter_user_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The user to filter the audit log by."
                    },
                    "filter_workspace_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The workspace to filter the audit log by."
                    },
                    "filter_action_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FilterActionTypeEnum"
                            }
                        ],
                        "description": "Optional: The action type to filter the audit log by.\n\n* `create_group` - create_group\n* `delete_group` - delete_group\n* `update_group` - update_group\n* `order_groups` - order_groups\n* `create_application` - create_application\n* `update_application` - update_application\n* `delete_application` - delete_application\n* `order_applications` - order_applications\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_group_invitation` - create_group_invitation\n* `delete_group_invitation` - delete_group_invitation\n* `accept_group_invitation` - accept_group_invitation\n* `reject_group_invitation` - reject_group_invitation\n* `update_group_invitation_permissions` - update_group_invitation_permissions\n* `leave_group` - leave_group\n* `create_snapshot` - create_snapshot\n* `delete_snapshot` - delete_snapshot\n* `restore_snapshot` - restore_snapshot\n* `empty_trash` - empty_trash\n* `restore_from_trash` - restore_from_trash\n* `create_user` - create_user\n* `update_user` - update_user\n* `schedule_user_deletion` - schedule_user_deletion\n* `cancel_user_deletion` - cancel_user_deletion\n* `sign_in_user` - sign_in_user\n* `change_user_password` - change_user_password\n* `send_reset_user_password` - send_reset_user_password\n* `reset_user_password` - reset_user_password\n* `create_db_token` - create_db_token\n* `update_db_token_name` - update_db_token_name\n* `update_db_token_permissions` - update_db_token_permissions\n* `rotate_db_token_key` - rotate_db_token_key\n* `delete_db_token_key` - delete_db_token_key\n* `create_webhook` - create_webhook\n* `delete_webhook` - delete_webhook\n* `update_webhook` - update_webhook\n* `export_table` - export_table\n* `import_database_from_airtable` - import_database_from_airtable\n* `create_table` - create_table\n* `delete_table` - delete_table\n* `order_tables` - order_tables\n* `update_table` - update_table\n* `duplicate_table` - duplicate_table\n* `create_row` - create_row\n* `create_rows` - create_rows\n* `import_rows` - import_rows\n* `delete_row` - delete_row\n* `delete_rows` - delete_rows\n* `move_row` - move_row\n* `update_row` - update_row\n* `update_rows` - update_rows\n* `create_view` - create_view\n* `duplicate_view` - duplicate_view\n* `delete_view` - delete_view\n* `order_views` - order_views\n* `update_view` - update_view\n* `create_view_filter` - create_view_filter\n* `update_view_filter` - update_view_filter\n* `delete_view_filter` - delete_view_filter\n* `create_view_sort` - create_view_sort\n* `update_view_sort` - update_view_sort\n* `delete_view_sort` - delete_view_sort\n* `create_view_group` - create_view_group\n* `update_view_group` - update_view_group\n* `delete_view_group` - delete_view_group\n* `rotate_view_slug` - rotate_view_slug\n* `update_view_field_options` - update_view_field_options\n* `create_decoration` - create_decoration\n* `update_decoration` - update_decoration\n* `delete_decoration` - delete_decoration\n* `create_view_filter_group` - create_view_filter_group\n* `update_view_filter_group` - update_view_filter_group\n* `delete_view_filter_group` - delete_view_filter_group\n* `create_field` - create_field\n* `delete_field` - delete_field\n* `update_field` - update_field\n* `duplicate_field` - duplicate_field\n* `create_row_comment` - create_row_comment\n* `delete_row_comment` - delete_row_comment\n* `update_row_comment` - update_row_comment\n* `create_team` - create_team\n* `update_team` - update_team\n* `delete_team` - delete_team\n* `create_team_subject` - create_team_subject\n* `delete_team_subject` - delete_team_subject\n* `batch_assign_role` - batch_assign_role"
                    },
                    "filter_from_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The start date to filter the audit log by."
                    },
                    "filter_to_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The end date to filter the audit log by."
                    },
                    "exclude_columns": {
                        "type": "string",
                        "description": "Optional: A comma separated list of column names to exclude from the export. Available options are `user_email, user_id, workspace_name, workspace_id, type, description, timestamp, ip_address`."
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date and time when the export job was created."
                    },
                    "exported_file_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the file that was created by the export job."
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL to download the exported file."
                    }
                },
                "required": [
                    "created_on",
                    "exported_file_name",
                    "id",
                    "progress_percentage",
                    "state",
                    "type",
                    "url"
                ]
            },
            "AuditLogUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "AuditLogWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Authentication_ProviderAuthProvider": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PasswordAuthProviderModelAuthProvider"
                    },
                    {
                        "$ref": "#/components/schemas/SamlAuthProviderModelAuthProvider"
                    },
                    {
                        "$ref": "#/components/schemas/GoogleAuthProviderModelAuthProvider"
                    },
                    {
                        "$ref": "#/components/schemas/FacebookAuthProviderModelAuthProvider"
                    },
                    {
                        "$ref": "#/components/schemas/GitHubAuthProviderModelAuthProvider"
                    },
                    {
                        "$ref": "#/components/schemas/GitLabAuthProviderModelAuthProvider"
                    },
                    {
                        "$ref": "#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "password": "#/components/schemas/PasswordAuthProviderModelAuthProvider",
                        "saml": "#/components/schemas/SamlAuthProviderModelAuthProvider",
                        "google": "#/components/schemas/GoogleAuthProviderModelAuthProvider",
                        "facebook": "#/components/schemas/FacebookAuthProviderModelAuthProvider",
                        "github": "#/components/schemas/GitHubAuthProviderModelAuthProvider",
                        "gitlab": "#/components/schemas/GitLabAuthProviderModelAuthProvider",
                        "openid_connect": "#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider"
                    }
                }
            },
            "AutonumberFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the view to use for the initial ordering."
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "AutonumberFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "AutonumberFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "AutonumberFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the view to use for the initial ordering."
                    }
                }
            },
            "BaseExporterOptions": {
                "type": "object",
                "properties": {
                    "view_id": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "Optional: The view for this table to export using its filters, sorts and other view specific settings."
                    },
                    "exporter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExporterTypeEnum"
                            }
                        ],
                        "description": "The file type to export to.\n\n* `csv` - csv\n* `json` - json\n* `xml` - xml"
                    },
                    "export_charset": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportCharsetEnum"
                            }
                        ],
                        "default": "utf-8",
                        "description": "The character set to use when creating the export file.\n\n* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
                    }
                },
                "required": [
                    "exporter_type"
                ]
            },
            "BaserowImpersonateAuthToken": {
                "type": "object",
                "description": "Serializer used for impersonation.",
                "properties": {
                    "user": {
                        "type": "integer"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "BatchCreateRoleAssignment": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateRoleAssignment"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            },
            "BatchDeleteRows": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "maxItems": 200,
                        "minItems": 1
                    }
                },
                "required": [
                    "items"
                ]
            },
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "BooleanFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "BooleanFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "BooleanFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "BooleanFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "BuilderApplication": {
                "type": "object",
                "description": "The builder serializer.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "The workspace that the application belongs to."
                    },
                    "pages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        },
                        "readOnly": true,
                        "description": "This field is specific to the `builder` application and contains an array of pages that are in the builder."
                    },
                    "theme": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CombinedThemeConfigBlocks"
                            }
                        ],
                        "readOnly": true,
                        "description": "This field is specific to the `builder` application and contains the theme settings."
                    }
                },
                "required": [
                    "group",
                    "id",
                    "name",
                    "order",
                    "pages",
                    "theme",
                    "type",
                    "workspace"
                ]
            },
            "BuilderWorkflowAction": {
                "type": "object",
                "description": "Basic builder workflow action serializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the workflow action"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    }
                },
                "required": [
                    "element_id",
                    "event",
                    "id",
                    "order",
                    "type"
                ]
            },
            "Builder_Workflow_Action_TypeBuilderWorkflowAction": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/NotificationWorkflowActionBuilderWorkflowAction"
                    },
                    {
                        "$ref": "#/components/schemas/OpenPageWorkflowActionBuilderWorkflowAction"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "notification": "#/components/schemas/NotificationWorkflowActionBuilderWorkflowAction",
                        "open_page": "#/components/schemas/OpenPageWorkflowActionBuilderWorkflowAction",
                        "create_row": "#/components/schemas/LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction",
                        "update_row": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction"
                    }
                }
            },
            "Builder_Workflow_Action_TypeCreateBuilderWorkflowAction": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/NotificationWorkflowActionCreateBuilderWorkflowAction"
                    },
                    {
                        "$ref": "#/components/schemas/OpenPageWorkflowActionCreateBuilderWorkflowAction"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "notification": "#/components/schemas/NotificationWorkflowActionCreateBuilderWorkflowAction",
                        "open_page": "#/components/schemas/OpenPageWorkflowActionCreateBuilderWorkflowAction",
                        "create_row": "#/components/schemas/LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction",
                        "update_row": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction"
                    }
                }
            },
            "ButtonElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The caption of the button."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "ButtonElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The caption of the button."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "ButtonElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The caption of the button."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "ButtonElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The caption of the button."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                }
            },
            "CalendarViewCreateView": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/ViewTypesEnum"
                    },
                    "ownership_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OwnershipTypeEnum"
                            }
                        ],
                        "default": "collaborative"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "date_field": {
                        "type": "integer",
                        "nullable": true
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "name",
                    "slug",
                    "type"
                ]
            },
            "CalendarViewExampleResponse": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CalendarViewExampleResponseStack"
                        },
                        "description": "Every date bucket (e.g. '2023-01-01') related to the view's date field can have its own entry like this."
                    },
                    "field_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalendarViewFieldOptions"
                        }
                    },
                    "row_metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RowMetadata"
                        },
                        "description": "An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so."
                    }
                },
                "required": [
                    "field_options",
                    "rows"
                ]
            },
            "CalendarViewExampleResponseStack": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total count of rows that are included in this group."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponse"
                        },
                        "description": "All the rows that belong in this group and match provided `limit` and `offset`."
                    }
                },
                "required": [
                    "count",
                    "results"
                ]
            },
            "CalendarViewFieldOptions": {
                "type": "object",
                "properties": {
                    "hidden": {
                        "type": "boolean",
                        "description": "Whether or not the field should be hidden in the card."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The order that the field has in the view. Lower value is first."
                    }
                }
            },
            "CalendarViewView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "table": {
                        "$ref": "#/components/schemas/Table"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilter"
                        }
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilterGroup"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewSort"
                        }
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewGroupBy"
                        }
                    },
                    "decorations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewDecoration"
                        }
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_has_password": {
                        "type": "boolean",
                        "description": "Indicates whether the public view is password protected or not.\n\n:return: True if the public view is password protected, False otherwise.",
                        "readOnly": true
                    },
                    "show_logo": {
                        "type": "boolean"
                    },
                    "ownership_type": {
                        "type": "string"
                    },
                    "owned_by_id": {
                        "type": "integer"
                    },
                    "date_field": {
                        "type": "integer",
                        "nullable": true
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "ownership_type",
                    "public_view_has_password",
                    "slug",
                    "table",
                    "table_id",
                    "type"
                ]
            },
            "ChangePasswordBodyValidation": {
                "type": "object",
                "properties": {
                    "old_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password",
                    "old_password"
                ]
            },
            "CheckboxElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "The input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this input is a required field."
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "CheckboxElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "The input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this input is a required field."
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "CheckboxElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "The input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this input is a required field."
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "CheckboxElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "The input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this input is a required field."
                    }
                }
            },
            "Collaborator": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CollectionField": {
                "type": "object",
                "description": "This serializer transform the flat properties object from/to a config dict property.\nThis allows us to see the field on the frontend side as a simple polymorphic\nobject.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the field.",
                        "maxLength": 225
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the field.",
                        "maxLength": 225
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type"
                ]
            },
            "ColumnElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "column_amount": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "description": "The amount of columns inside this column element."
                    },
                    "column_gap": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 0,
                        "description": "The amount of space between the columns."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment0e8Enum"
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "ColumnElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "column_amount": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "description": "The amount of columns inside this column element."
                    },
                    "column_gap": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 0,
                        "description": "The amount of space between the columns."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment0e8Enum"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "ColumnElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "column_amount": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "description": "The amount of columns inside this column element."
                    },
                    "column_gap": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 0,
                        "description": "The amount of space between the columns."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment0e8Enum"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "ColumnElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "column_amount": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "description": "The amount of columns inside this column element."
                    },
                    "column_gap": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 0,
                        "description": "The amount of space between the columns."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment0e8Enum"
                    }
                }
            },
            "CombinedThemeConfigBlocks": {
                "type": "object",
                "properties": {
                    "primary_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "secondary_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "border_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "heading_1_font_size": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768
                    },
                    "heading_1_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "heading_2_font_size": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768
                    },
                    "heading_2_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "heading_3_font_size": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768
                    },
                    "heading_3_color": {
                        "type": "string",
                        "maxLength": 9
                    }
                }
            },
            "ConditionTypeEnum": {
                "enum": [
                    "AND",
                    "OR"
                ],
                "type": "string",
                "description": "* `AND` - And\n* `OR` - Or"
            },
            "ConditionalColorValueProviderConfColor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for this condition."
                    },
                    "color": {
                        "type": "string",
                        "description": "The color the decorator should take if the defined conditions apply."
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionalColorValueProviderConfColorFilter"
                        },
                        "description": "A list of conditions that the row must meet to get the selected color. This list of conditions can be empty, in that case, this color will always match the row values."
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionalColorValueProviderConfColorFilterGroup"
                        },
                        "description": "A list of filter groups that the row must meet to get the selected color. "
                    },
                    "operator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "default": "AND",
                        "description": "The boolean operator used to group all conditions.\n\n* `AND` - And\n* `OR` - Or"
                    }
                },
                "required": [
                    "color",
                    "filters",
                    "id"
                ]
            },
            "ConditionalColorValueProviderConfColorFilter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for this condition."
                    },
                    "field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The field of which the value must be compared to the filter value."
                    },
                    "type": {
                        "nullable": true,
                        "description": "Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).\n\n* `equal` - equal\n* `not_equal` - not_equal\n* `filename_contains` - filename_contains\n* `files_lower_than` - files_lower_than\n* `has_file_type` - has_file_type\n* `contains` - contains\n* `contains_not` - contains_not\n* `contains_word` - contains_word\n* `doesnt_contain_word` - doesnt_contain_word\n* `length_is_lower_than` - length_is_lower_than\n* `higher_than` - higher_than\n* `lower_than` - lower_than\n* `is_even_and_whole` - is_even_and_whole\n* `date_equal` - date_equal\n* `date_before` - date_before\n* `date_before_or_equal` - date_before_or_equal\n* `date_after_days_ago` - date_after_days_ago\n* `date_after` - date_after\n* `date_after_or_equal` - date_after_or_equal\n* `date_not_equal` - date_not_equal\n* `date_equals_today` - date_equals_today\n* `date_before_today` - date_before_today\n* `date_after_today` - date_after_today\n* `date_within_days` - date_within_days\n* `date_within_weeks` - date_within_weeks\n* `date_within_months` - date_within_months\n* `date_equals_days_ago` - date_equals_days_ago\n* `date_equals_months_ago` - date_equals_months_ago\n* `date_equals_years_ago` - date_equals_years_ago\n* `date_equals_week` - date_equals_week\n* `date_equals_month` - date_equals_month\n* `date_equals_day_of_month` - date_equals_day_of_month\n* `date_equals_year` - date_equals_year\n* `single_select_equal` - single_select_equal\n* `single_select_not_equal` - single_select_not_equal\n* `link_row_has` - link_row_has\n* `link_row_has_not` - link_row_has_not\n* `link_row_contains` - link_row_contains\n* `link_row_not_contains` - link_row_not_contains\n* `boolean` - boolean\n* `empty` - empty\n* `not_empty` - not_empty\n* `multiple_select_has` - multiple_select_has\n* `multiple_select_has_not` - multiple_select_has_not\n* `multiple_collaborators_has` - multiple_collaborators_has\n* `multiple_collaborators_has_not` - multiple_collaborators_has_not\n* `user_is` - user_is\n* `user_is_not` - user_is_not",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Type880Enum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The field of which the value must be compared to the filter value."
                    },
                    "group": {
                        "type": "string",
                        "nullable": true,
                        "description": "The id of the filter group this filter belongs to. If this is null, the filter is not part of a filter group."
                    }
                },
                "required": [
                    "field",
                    "id",
                    "type"
                ]
            },
            "ConditionalColorValueProviderConfColorFilterGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for this condition."
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "default": "AND",
                        "description": "The boolean operator used to group all conditions.\n\n* `AND` - And\n* `OR` - Or"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "ConditionalColorValueProviderConfColors": {
                "type": "object",
                "properties": {
                    "colors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionalColorValueProviderConfColor"
                        },
                        "description": "A list of color items. For each row, the value provider try to match the defined colors one by one in the given order. The first matching color is returned to the decorator."
                    }
                },
                "required": [
                    "colors"
                ]
            },
            "CountFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to count values for."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "name",
                    "nullable",
                    "type"
                ]
            },
            "CountFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to count values for."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "CountFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to count values for."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "CountFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to count values for."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "nullable"
                ]
            },
            "CreatePage": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path_params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PathParam"
                        }
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "CreateRoleAssignment": {
                "type": "object",
                "description": "The create role assignment serializer.",
                "properties": {
                    "subject_id": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "The subject ID. A subject is an actor that can do operations."
                    },
                    "subject_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectType6dcEnum"
                            }
                        ],
                        "description": "The subject type.\n\n* `auth.User` - auth.User\n* `anonymous` - anonymous\n* `core.Token` - core.Token\n* `baserow_enterprise.Team` - baserow_enterprise.Team"
                    },
                    "role": {
                        "type": "string",
                        "nullable": true,
                        "description": "The uid of the role you want to assign to the user or team in the given workspace. You can omit this property if you want to remove the role."
                    },
                    "scope_id": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "The ID of the scope object. The scope object limit the role assignment to this scope and all its descendants."
                    },
                    "scope_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScopeTypeEnum"
                            }
                        ],
                        "description": "The scope object type.\n\n* `core` - core\n* `application` - application\n* `workspace` - workspace\n* `workspace_invitation` - workspace_invitation\n* `snapshot` - snapshot\n* `workspace_user` - workspace_user\n* `integration` - integration\n* `user_source` - user_source\n* `database` - database\n* `database_table` - database_table\n* `database_field` - database_field\n* `database_view` - database_view\n* `database_view_decoration` - database_view_decoration\n* `database_view_sort` - database_view_sort\n* `database_view_group` - database_view_group\n* `database_view_filter` - database_view_filter\n* `database_view_filter_group` - database_view_filter_group\n* `token` - token\n* `team` - team\n* `team_subject` - team_subject\n* `builder` - builder\n* `builder_page` - builder_page\n* `builder_element` - builder_element\n* `builder_domain` - builder_domain\n* `builder_data_source` - builder_data_source\n* `builder_workflow_action` - builder_workflow_action\n* `license` - license"
                    }
                },
                "required": [
                    "role",
                    "scope_id",
                    "scope_type",
                    "subject_id",
                    "subject_type"
                ]
            },
            "CreateSnapshotJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "CreateSnapshotJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    }
                },
                "required": [
                    "id",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "CreateViewFilter": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "integer",
                        "description": "The field of which the value must be compared to the filter value."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type880Enum"
                            }
                        ],
                        "description": "Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).\n\n* `equal` - equal\n* `not_equal` - not_equal\n* `filename_contains` - filename_contains\n* `files_lower_than` - files_lower_than\n* `has_file_type` - has_file_type\n* `contains` - contains\n* `contains_not` - contains_not\n* `contains_word` - contains_word\n* `doesnt_contain_word` - doesnt_contain_word\n* `length_is_lower_than` - length_is_lower_than\n* `higher_than` - higher_than\n* `lower_than` - lower_than\n* `is_even_and_whole` - is_even_and_whole\n* `date_equal` - date_equal\n* `date_before` - date_before\n* `date_before_or_equal` - date_before_or_equal\n* `date_after_days_ago` - date_after_days_ago\n* `date_after` - date_after\n* `date_after_or_equal` - date_after_or_equal\n* `date_not_equal` - date_not_equal\n* `date_equals_today` - date_equals_today\n* `date_before_today` - date_before_today\n* `date_after_today` - date_after_today\n* `date_within_days` - date_within_days\n* `date_within_weeks` - date_within_weeks\n* `date_within_months` - date_within_months\n* `date_equals_days_ago` - date_equals_days_ago\n* `date_equals_months_ago` - date_equals_months_ago\n* `date_equals_years_ago` - date_equals_years_ago\n* `date_equals_week` - date_equals_week\n* `date_equals_month` - date_equals_month\n* `date_equals_day_of_month` - date_equals_day_of_month\n* `date_equals_year` - date_equals_year\n* `single_select_equal` - single_select_equal\n* `single_select_not_equal` - single_select_not_equal\n* `link_row_has` - link_row_has\n* `link_row_has_not` - link_row_has_not\n* `link_row_contains` - link_row_contains\n* `link_row_not_contains` - link_row_not_contains\n* `boolean` - boolean\n* `empty` - empty\n* `not_empty` - not_empty\n* `multiple_select_has` - multiple_select_has\n* `multiple_select_has_not` - multiple_select_has_not\n* `multiple_collaborators_has` - multiple_collaborators_has\n* `multiple_collaborators_has_not` - multiple_collaborators_has_not\n* `user_is` - user_is\n* `user_is_not` - user_is_not"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The filter value that must be compared to the field's value.",
                        "maxLength": 255
                    },
                    "group": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the filter group the new filter will belong to. If this is null, the filter will not be part of a filter group, but directly part of the view."
                    }
                },
                "required": [
                    "field",
                    "type"
                ]
            },
            "CreateViewFilterGroup": {
                "type": "object",
                "properties": {
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.\n\n* `AND` - And\n* `OR` - Or"
                    }
                }
            },
            "CreateViewGroupBy": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "integer",
                        "description": "The field that must be grouped by."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "default": "ASC",
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    },
                    "width": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "default": 200,
                        "description": "The pixel width of the group by in the related view."
                    }
                },
                "required": [
                    "field"
                ]
            },
            "CreateViewSort": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "integer",
                        "description": "The field that must be sorted on."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "default": "ASC",
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    }
                },
                "required": [
                    "field"
                ]
            },
            "CreateWorkspaceInvitation": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user that the invitation is meant for. Only a user with that email address can accept it.",
                        "maxLength": 254
                    },
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user is going to get within the workspace after accepting the invitation.",
                        "maxLength": 32
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional message that the invitor can provide. This will be visible to the receiver of the invitation.",
                        "maxLength": 250
                    },
                    "base_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The base URL where the user can publicly accept his invitation.The accept token is going to be appended to the base_url (base_url '/token')."
                    }
                },
                "required": [
                    "base_url",
                    "email"
                ]
            },
            "CreatedByFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "CreatedByFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "CreatedByFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "CreatedByFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "CreatedOnFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_force_timezone_offset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('A UTC offset in minutes to add to all the field datetimes values.',)"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "CreatedOnFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "CreatedOnFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "CreatedOnFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_force_timezone_offset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('A UTC offset in minutes to add to all the field datetimes values.',)"
                    }
                }
            },
            "CsvColumnSeparatorEnum": {
                "enum": [
                    ",",
                    ";",
                    "|",
                    "tab",
                    "record_separator",
                    "unit_separator"
                ],
                "type": "string",
                "description": "* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \u001e\n* `unit_separator` - \u001f"
            },
            "CsvExporterOptions": {
                "type": "object",
                "properties": {
                    "view_id": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "Optional: The view for this table to export using its filters, sorts and other view specific settings."
                    },
                    "exporter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExporterTypeEnum"
                            }
                        ],
                        "description": "The file type to export to.\n\n* `csv` - csv\n* `json` - json\n* `xml` - xml"
                    },
                    "export_charset": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportCharsetEnum"
                            }
                        ],
                        "default": "utf-8",
                        "description": "The character set to use when creating the export file.\n\n* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
                    },
                    "csv_column_separator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
                            }
                        ],
                        "default": ",",
                        "description": "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \u001e\n* `unit_separator` - \u001f"
                    },
                    "csv_include_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to generate a header row at the top of the csv file."
                    }
                },
                "required": [
                    "exporter_type"
                ]
            },
            "CustomDomainCreateDomain": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type0a6Enum"
                            }
                        ],
                        "description": "The type of the domain.\n\n* `custom` - custom\n* `sub_domain` - sub_domain"
                    },
                    "domain_name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "domain_name",
                    "type"
                ]
            },
            "CustomDomainDomain": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the domain."
                    },
                    "domain_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "builder_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "last_published": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last publication date of this domain"
                    }
                },
                "required": [
                    "builder_id",
                    "domain_name",
                    "id",
                    "order",
                    "type"
                ]
            },
            "Dashboard": {
                "type": "object",
                "properties": {
                    "group_invitations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWorkspaceInvitation"
                        }
                    },
                    "workspace_invitations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWorkspaceInvitation"
                        }
                    }
                },
                "required": [
                    "group_invitations",
                    "workspace_invitations"
                ]
            },
            "DatabaseApplication": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "The workspace that the application belongs to."
                    },
                    "tables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TableSerializerWithFields"
                        },
                        "description": "This field is specific to the `database` application and contains an array of tables that are in the database."
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowView"
                        },
                        "description": "This field is specific to the `database` application and contains an array of views that are in the tables."
                    }
                },
                "required": [
                    "group",
                    "id",
                    "name",
                    "order",
                    "tables",
                    "type",
                    "views",
                    "workspace"
                ]
            },
            "DateFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_force_timezone_offset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('A UTC offset in minutes to add to all the field datetimes values.',)"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "DateFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "DateFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "DateFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_force_timezone_offset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('A UTC offset in minutes to add to all the field datetimes values.',)"
                    }
                }
            },
            "DateFormatEnum": {
                "enum": [
                    "EU",
                    "US",
                    "ISO"
                ],
                "type": "string",
                "description": "* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
            },
            "DateTimeFormatEnum": {
                "enum": [
                    "24",
                    "12"
                ],
                "type": "string",
                "description": "* `24` - 24 hour\n* `12` - 12 hour"
            },
            "Decorator_Value_Provider_TypeCreateViewDecoration": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GeneratedSingle_select_colorCreateViewDecoration"
                    },
                    {
                        "$ref": "#/components/schemas/GeneratedConditional_colorCreateViewDecoration"
                    }
                ],
                "discriminator": {
                    "propertyName": "value_provider_type",
                    "mapping": {
                        "single_select_color": "#/components/schemas/GeneratedSingle_select_colorCreateViewDecoration",
                        "conditional_color": "#/components/schemas/GeneratedConditional_colorCreateViewDecoration"
                    }
                }
            },
            "Decorator_Value_Provider_TypeViewDecoration": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GeneratedSingle_select_colorViewDecoration"
                    },
                    {
                        "$ref": "#/components/schemas/GeneratedConditional_colorViewDecoration"
                    }
                ],
                "discriminator": {
                    "propertyName": "value_provider_type",
                    "mapping": {
                        "single_select_color": "#/components/schemas/GeneratedSingle_select_colorViewDecoration",
                        "conditional_color": "#/components/schemas/GeneratedConditional_colorViewDecoration"
                    }
                }
            },
            "Domain_TypeCreateDomain": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CustomDomainCreateDomain"
                    },
                    {
                        "$ref": "#/components/schemas/SubDomainCreateDomain"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "custom": "#/components/schemas/CustomDomainCreateDomain",
                        "sub_domain": "#/components/schemas/SubDomainCreateDomain"
                    }
                }
            },
            "Domain_TypeDomain": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CustomDomainDomain"
                    },
                    {
                        "$ref": "#/components/schemas/SubDomainDomain"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "custom": "#/components/schemas/CustomDomainDomain",
                        "sub_domain": "#/components/schemas/SubDomainDomain"
                    }
                }
            },
            "DropdownElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this dropdown"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This dropdowns input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this drodpown is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DropdownOption"
                        }
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "DropdownElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this dropdown"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This dropdowns input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this drodpown is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DropdownOption"
                        }
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "DropdownElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this dropdown"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This dropdowns input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this drodpown is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DropdownOption"
                        }
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "DropdownElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this dropdown"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This dropdowns input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this drodpown is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DropdownOption"
                        }
                    }
                }
            },
            "DropdownOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the option"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the option"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "DuplicateApplicationJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "application_id": {
                        "type": "integer",
                        "description": "The application ID to duplicate."
                    }
                },
                "required": [
                    "application_id",
                    "type"
                ]
            },
            "DuplicateApplicationJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_application": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SpecificApplication"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_application": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SpecificApplication"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_application",
                    "id",
                    "original_application",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "DuplicateElement": {
                "type": "object",
                "properties": {
                    "elements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Element"
                        },
                        "readOnly": true,
                        "description": "The duplicated elements."
                    },
                    "workflow_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BuilderWorkflowAction"
                        },
                        "readOnly": true,
                        "description": "The duplicated workflow actions"
                    }
                },
                "required": [
                    "elements",
                    "workflow_actions"
                ]
            },
            "DuplicateFieldJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "field_id": {
                        "type": "integer",
                        "description": "The ID of the field to duplicate."
                    },
                    "duplicate_data": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to duplicate the data of the field."
                    }
                },
                "required": [
                    "field_id",
                    "type"
                ]
            },
            "DuplicateFieldJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_field": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Field"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_field": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FieldSerializerWithRelatedFields"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_field",
                    "id",
                    "original_field",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "DuplicatePageJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "page_id": {
                        "type": "integer",
                        "description": "The ID of the page to duplicate."
                    }
                },
                "required": [
                    "page_id",
                    "type"
                ]
            },
            "DuplicatePageJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_page": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Page"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_page": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Page"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_page",
                    "id",
                    "original_page",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "DuplicateTableJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "The ID of the table to duplicate."
                    }
                },
                "required": [
                    "table_id",
                    "type"
                ]
            },
            "DuplicateTableJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_table": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Table"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_table": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Table"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_table",
                    "id",
                    "original_table",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "DurationFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "duration_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            }
                        ],
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "DurationFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "duration_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            }
                        ],
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "DurationFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "duration_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            }
                        ],
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "DurationFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "duration_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            }
                        ],
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds"
                    }
                }
            },
            "DurationFormatEnum": {
                "enum": [
                    "h:mm",
                    "h:mm:ss",
                    "h:mm:ss.s",
                    "h:mm:ss.ss",
                    "h:mm:ss.sss",
                    "d h",
                    "d h:mm",
                    "d h:mm:ss"
                ],
                "type": "string",
                "description": "* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds"
            },
            "Element": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "Element_TypeCreateElement": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/HeadingElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/TextElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/LinkElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/ImageElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/InputTextElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/ColumnElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/ButtonElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/TableElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/FormContainerElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/DropdownElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/CheckboxElementCreateElement"
                    },
                    {
                        "$ref": "#/components/schemas/IFrameElementCreateElement"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "heading": "#/components/schemas/HeadingElementCreateElement",
                        "text": "#/components/schemas/TextElementCreateElement",
                        "link": "#/components/schemas/LinkElementCreateElement",
                        "image": "#/components/schemas/ImageElementCreateElement",
                        "input_text": "#/components/schemas/InputTextElementCreateElement",
                        "column": "#/components/schemas/ColumnElementCreateElement",
                        "button": "#/components/schemas/ButtonElementCreateElement",
                        "table": "#/components/schemas/TableElementCreateElement",
                        "form_container": "#/components/schemas/FormContainerElementCreateElement",
                        "dropdown": "#/components/schemas/DropdownElementCreateElement",
                        "checkbox": "#/components/schemas/CheckboxElementCreateElement",
                        "iframe": "#/components/schemas/IFrameElementCreateElement"
                    }
                }
            },
            "Element_TypeElement": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/HeadingElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/TextElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/LinkElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/ImageElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/InputTextElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/ColumnElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/ButtonElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/TableElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/FormContainerElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/DropdownElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/CheckboxElementElement"
                    },
                    {
                        "$ref": "#/components/schemas/IFrameElementElement"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "heading": "#/components/schemas/HeadingElementElement",
                        "text": "#/components/schemas/TextElementElement",
                        "link": "#/components/schemas/LinkElementElement",
                        "image": "#/components/schemas/ImageElementElement",
                        "input_text": "#/components/schemas/InputTextElementElement",
                        "column": "#/components/schemas/ColumnElementElement",
                        "button": "#/components/schemas/ButtonElementElement",
                        "table": "#/components/schemas/TableElementElement",
                        "form_container": "#/components/schemas/FormContainerElementElement",
                        "dropdown": "#/components/schemas/DropdownElementElement",
                        "checkbox": "#/components/schemas/CheckboxElementElement",
                        "iframe": "#/components/schemas/IFrameElementElement"
                    }
                }
            },
            "Element_TypePublicElement": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/HeadingElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/TextElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/LinkElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/ImageElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/InputTextElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/ColumnElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/ButtonElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/TableElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/FormContainerElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/DropdownElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/CheckboxElementPublicElement"
                    },
                    {
                        "$ref": "#/components/schemas/IFrameElementPublicElement"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "heading": "#/components/schemas/HeadingElementPublicElement",
                        "text": "#/components/schemas/TextElementPublicElement",
                        "link": "#/components/schemas/LinkElementPublicElement",
                        "image": "#/components/schemas/ImageElementPublicElement",
                        "input_text": "#/components/schemas/InputTextElementPublicElement",
                        "column": "#/components/schemas/ColumnElementPublicElement",
                        "button": "#/components/schemas/ButtonElementPublicElement",
                        "table": "#/components/schemas/TableElementPublicElement",
                        "form_container": "#/components/schemas/FormContainerElementPublicElement",
                        "dropdown": "#/components/schemas/DropdownElementPublicElement",
                        "checkbox": "#/components/schemas/CheckboxElementPublicElement",
                        "iframe": "#/components/schemas/IFrameElementPublicElement"
                    }
                }
            },
            "EmailFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "EmailFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "EmailFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "EmailFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "EmailNotificationFrequencyEnum": {
                "enum": [
                    "instant",
                    "daily",
                    "weekly",
                    "never"
                ],
                "type": "string",
                "description": "* `instant` - instant\n* `daily` - daily\n* `weekly` - weekly\n* `never` - never"
            },
            "EmailTesterRequest": {
                "type": "object",
                "properties": {
                    "target_email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "target_email"
                ]
            },
            "EmailTesterResponse": {
                "type": "object",
                "properties": {
                    "succeeded": {
                        "type": "boolean",
                        "description": "Whether or not the test email was sent successfully."
                    },
                    "error_stack": {
                        "type": "string",
                        "nullable": true,
                        "description": "The full stack trace and error message if the test email failed."
                    },
                    "error_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The type of error that occurred if the test email failed."
                    },
                    "error": {
                        "type": "string",
                        "nullable": true,
                        "description": "A short message describing the error that occured if the test email failed"
                    }
                },
                "required": [
                    "succeeded"
                ]
            },
            "EventEnum": {
                "enum": [
                    "click",
                    "submit"
                ],
                "type": "string",
                "description": "* `click` - Click\n* `submit` - Submit"
            },
            "EventTypeEnum": {
                "enum": [
                    "rows.created",
                    "row.created",
                    "rows.updated",
                    "row.updated",
                    "rows.deleted",
                    "row.deleted"
                ],
                "type": "string",
                "description": "* `rows.created` - rows.created\n* `row.created` - row.created\n* `rows.updated` - rows.updated\n* `row.updated` - row.updated\n* `rows.deleted` - rows.deleted\n* `row.deleted` - row.deleted"
            },
            "EventTypesEnum": {
                "enum": [
                    "rows.created",
                    "rows.updated",
                    "rows.deleted"
                ],
                "type": "string",
                "description": "* `rows.created` - rows.created\n* `rows.updated` - rows.updated\n* `rows.deleted` - rows.deleted"
            },
            "Events3eaEnum": {
                "enum": [
                    "rows.created",
                    "row.created",
                    "rows.updated",
                    "row.updated",
                    "rows.deleted",
                    "row.deleted"
                ],
                "type": "string",
                "description": "* `rows.created` - rows.created\n* `row.created` - row.created\n* `rows.updated` - rows.updated\n* `row.updated` - row.updated\n* `rows.deleted` - rows.deleted\n* `row.deleted` - row.deleted"
            },
            "ExampleBatchRowsRequest": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
                        },
                        "maxItems": 200,
                        "minItems": 1
                    }
                },
                "required": [
                    "items"
                ]
            },
            "ExampleBatchRowsResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                        },
                        "maxItems": 200,
                        "minItems": 1
                    }
                },
                "required": [
                    "items"
                ]
            },
            "ExampleBatchUpdateRowRequestSerializerWithUserFieldNames": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the row in the table."
                    },
                    "field_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `text` field. The number in field_1 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `long_text` field. The number in field_2 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_3": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `url` field. The number in field_3 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_4": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `email` field. The number in field_4 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 254
                    },
                    "field_5": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,50}(?:\\.\\d{0,0})?$",
                        "nullable": true,
                        "description": "This field represents the `number` field. The number in field_5 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_6": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 0,
                        "default": 0,
                        "description": "This field represents the `rating` field. The number in field_6 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_7": {
                        "type": "boolean",
                        "default": false,
                        "description": "This field represents the `boolean` field. The number in field_7 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_8": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "This field represents the `date` field. The number in field_8 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_13": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "This field represents the `duration` field. The number in field_13 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. The provided value can be a string in one of the available formats or a number representing the duration in seconds. In any case, the value will be rounded to match the field's duration format."
                    },
                    "field_14": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        },
                        "description": "This field represents the `link_row` field. The number in field_14 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing the ids or the names of the related rows. A name is the value of the primary key of the related row. This field also accepts a string with names separated by a comma. The response contains a list of objects containing the `id` and the primary field's `value` as a string for display purposes."
                    },
                    "field_15": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileFieldRequest"
                        },
                        "nullable": true,
                        "description": "This field represents the `file` field. The number in field_15 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing objects with the name of the file. The response contains an `array` of more detailed objects related to the files."
                    },
                    "field_16": {
                        "type": "integer",
                        "nullable": true,
                        "description": "This field represents the `single_select` field. The number in field_16 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_17": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true,
                            "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                        },
                        "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_18": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `phone_number` field. The number in field_18 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 100
                    },
                    "field_23": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collaborator"
                        },
                        "description": "This field represents the `multiple_collaborators` field. The number in field_23 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of objects representing the chosen collaborators through the object's `id` property. The id is Baserow user id. The response objects also contains the collaborator name directly along with its id."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "ExampleRowRequest": {
                "type": "object",
                "properties": {
                    "field_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `text` field. The number in field_1 is in a normal request or response the id of the field. "
                    },
                    "field_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `long_text` field. The number in field_2 is in a normal request or response the id of the field. "
                    },
                    "field_3": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `url` field. The number in field_3 is in a normal request or response the id of the field. "
                    },
                    "field_4": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `email` field. The number in field_4 is in a normal request or response the id of the field. ",
                        "maxLength": 254
                    },
                    "field_5": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,50}(?:\\.\\d{0,0})?$",
                        "nullable": true,
                        "description": "This field represents the `number` field. The number in field_5 is in a normal request or response the id of the field. "
                    },
                    "field_6": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 0,
                        "default": 0,
                        "description": "This field represents the `rating` field. The number in field_6 is in a normal request or response the id of the field. "
                    },
                    "field_7": {
                        "type": "boolean",
                        "default": false,
                        "description": "This field represents the `boolean` field. The number in field_7 is in a normal request or response the id of the field. "
                    },
                    "field_8": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "This field represents the `date` field. The number in field_8 is in a normal request or response the id of the field. "
                    },
                    "field_13": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "This field represents the `duration` field. The number in field_13 is in a normal request or response the id of the field. The provided value can be a string in one of the available formats or a number representing the duration in seconds. In any case, the value will be rounded to match the field's duration format."
                    },
                    "field_14": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        },
                        "description": "This field represents the `link_row` field. The number in field_14 is in a normal request or response the id of the field. This field accepts an `array` containing the ids or the names of the related rows. A name is the value of the primary key of the related row. This field also accepts a string with names separated by a comma. The response contains a list of objects containing the `id` and the primary field's `value` as a string for display purposes."
                    },
                    "field_15": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileFieldRequest"
                        },
                        "nullable": true,
                        "description": "This field represents the `file` field. The number in field_15 is in a normal request or response the id of the field. This field accepts an `array` containing objects with the name of the file. The response contains an `array` of more detailed objects related to the files."
                    },
                    "field_16": {
                        "type": "integer",
                        "nullable": true,
                        "description": "This field represents the `single_select` field. The number in field_16 is in a normal request or response the id of the field. This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_17": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true,
                            "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                        },
                        "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_18": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `phone_number` field. The number in field_18 is in a normal request or response the id of the field. ",
                        "maxLength": 100
                    },
                    "field_23": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collaborator"
                        },
                        "description": "This field represents the `multiple_collaborators` field. The number in field_23 is in a normal request or response the id of the field. This field accepts a list of objects representing the chosen collaborators through the object's `id` property. The id is Baserow user id. The response objects also contains the collaborator name directly along with its id."
                    }
                }
            },
            "ExampleRowRequestSerializerWithUserFieldNames": {
                "type": "object",
                "properties": {
                    "field_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `text` field. The number in field_1 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `long_text` field. The number in field_2 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_3": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `url` field. The number in field_3 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_4": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `email` field. The number in field_4 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 254
                    },
                    "field_5": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,50}(?:\\.\\d{0,0})?$",
                        "nullable": true,
                        "description": "This field represents the `number` field. The number in field_5 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_6": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 0,
                        "default": 0,
                        "description": "This field represents the `rating` field. The number in field_6 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_7": {
                        "type": "boolean",
                        "default": false,
                        "description": "This field represents the `boolean` field. The number in field_7 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_8": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "This field represents the `date` field. The number in field_8 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_13": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "This field represents the `duration` field. The number in field_13 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. The provided value can be a string in one of the available formats or a number representing the duration in seconds. In any case, the value will be rounded to match the field's duration format."
                    },
                    "field_14": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        },
                        "description": "This field represents the `link_row` field. The number in field_14 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing the ids or the names of the related rows. A name is the value of the primary key of the related row. This field also accepts a string with names separated by a comma. The response contains a list of objects containing the `id` and the primary field's `value` as a string for display purposes."
                    },
                    "field_15": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileFieldRequest"
                        },
                        "nullable": true,
                        "description": "This field represents the `file` field. The number in field_15 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing objects with the name of the file. The response contains an `array` of more detailed objects related to the files."
                    },
                    "field_16": {
                        "type": "integer",
                        "nullable": true,
                        "description": "This field represents the `single_select` field. The number in field_16 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_17": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true,
                            "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                        },
                        "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_18": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `phone_number` field. The number in field_18 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 100
                    },
                    "field_23": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collaborator"
                        },
                        "description": "This field represents the `multiple_collaborators` field. The number in field_23 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of objects representing the chosen collaborators through the object's `id` property. The id is Baserow user id. The response objects also contains the collaborator name directly along with its id."
                    }
                }
            },
            "ExampleRowResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the row in the table."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "description": "Indicates the position of the row, lowest first and highest last."
                    },
                    "field_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `text` field. The number in field_1 is in a normal request or response the id of the field. "
                    },
                    "field_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `long_text` field. The number in field_2 is in a normal request or response the id of the field. "
                    },
                    "field_3": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `url` field. The number in field_3 is in a normal request or response the id of the field. "
                    },
                    "field_4": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `email` field. The number in field_4 is in a normal request or response the id of the field. ",
                        "maxLength": 254
                    },
                    "field_5": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,50}(?:\\.\\d{0,0})?$",
                        "nullable": true,
                        "description": "This field represents the `number` field. The number in field_5 is in a normal request or response the id of the field. "
                    },
                    "field_6": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 0,
                        "default": 0,
                        "description": "This field represents the `rating` field. The number in field_6 is in a normal request or response the id of the field. "
                    },
                    "field_7": {
                        "type": "boolean",
                        "default": false,
                        "description": "This field represents the `boolean` field. The number in field_7 is in a normal request or response the id of the field. "
                    },
                    "field_8": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "This field represents the `date` field. The number in field_8 is in a normal request or response the id of the field. "
                    },
                    "field_9": {
                        "type": "string",
                        "format": "date-time",
                        "description": "This field represents the `last_modified` field. The number in field_9 is in a normal request or response the id of the field. "
                    },
                    "field_10": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Collaborator"
                            }
                        ],
                        "description": "This field represents the `last_modified_by` field. The number in field_10 is in a normal request or response the id of the field. "
                    },
                    "field_11": {
                        "type": "string",
                        "format": "date-time",
                        "description": "This field represents the `created_on` field. The number in field_11 is in a normal request or response the id of the field. "
                    },
                    "field_12": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Collaborator"
                            }
                        ],
                        "description": "This field represents the `created_by` field. The number in field_12 is in a normal request or response the id of the field. "
                    },
                    "field_13": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "This field represents the `duration` field. The number in field_13 is in a normal request or response the id of the field. The provided value can be a string in one of the available formats or a number representing the duration in seconds. In any case, the value will be rounded to match the field's duration format."
                    },
                    "field_14": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkRowValue"
                        },
                        "description": "This field represents the `link_row` field. The number in field_14 is in a normal request or response the id of the field. This field accepts an `array` containing the ids or the names of the related rows. A name is the value of the primary key of the related row. This field also accepts a string with names separated by a comma. The response contains a list of objects containing the `id` and the primary field's `value` as a string for display purposes."
                    },
                    "field_15": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileFieldResponse"
                        },
                        "description": "This field represents the `file` field. The number in field_15 is in a normal request or response the id of the field. This field accepts an `array` containing objects with the name of the file. The response contains an `array` of more detailed objects related to the files."
                    },
                    "field_16": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SelectOption"
                            }
                        ],
                        "nullable": true,
                        "description": "This field represents the `single_select` field. The number in field_16 is in a normal request or response the id of the field. This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_17": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        },
                        "nullable": true,
                        "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_18": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `phone_number` field. The number in field_18 is in a normal request or response the id of the field. ",
                        "maxLength": 100
                    },
                    "field_19": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `formula` field. The number in field_19 is in a normal request or response the id of the field. "
                    },
                    "field_20": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `count` field. The number in field_20 is in a normal request or response the id of the field. "
                    },
                    "field_21": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `rollup` field. The number in field_21 is in a normal request or response the id of the field. "
                    },
                    "field_22": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `lookup` field. The number in field_22 is in a normal request or response the id of the field. "
                    },
                    "field_23": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collaborator"
                        },
                        "description": "This field represents the `multiple_collaborators` field. The number in field_23 is in a normal request or response the id of the field. This field accepts a list of objects representing the chosen collaborators through the object's `id` property. The id is Baserow user id. The response objects also contains the collaborator name directly along with its id."
                    },
                    "field_24": {
                        "type": "string",
                        "format": "uuid",
                        "description": "This field represents the `uuid` field. The number in field_24 is in a normal request or response the id of the field. Contains a unique and persistent UUID for every row."
                    },
                    "field_25": {
                        "type": "integer",
                        "description": "This field represents the `autonumber` field. The number in field_25 is in a normal request or response the id of the field. Contains a unique and persistent incremental integer number for every row."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "ExampleRowResponseSerializerWithUserFieldNames": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the row in the table."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "description": "Indicates the position of the row, lowest first and highest last."
                    },
                    "field_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `text` field. The number in field_1 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `long_text` field. The number in field_2 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_3": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `url` field. The number in field_3 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_4": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `email` field. The number in field_4 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 254
                    },
                    "field_5": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,50}(?:\\.\\d{0,0})?$",
                        "nullable": true,
                        "description": "This field represents the `number` field. The number in field_5 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_6": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 0,
                        "default": 0,
                        "description": "This field represents the `rating` field. The number in field_6 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_7": {
                        "type": "boolean",
                        "default": false,
                        "description": "This field represents the `boolean` field. The number in field_7 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_8": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "This field represents the `date` field. The number in field_8 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_9": {
                        "type": "string",
                        "format": "date-time",
                        "description": "This field represents the `last_modified` field. The number in field_9 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_10": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Collaborator"
                            }
                        ],
                        "description": "This field represents the `last_modified_by` field. The number in field_10 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_11": {
                        "type": "string",
                        "format": "date-time",
                        "description": "This field represents the `created_on` field. The number in field_11 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_12": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Collaborator"
                            }
                        ],
                        "description": "This field represents the `created_by` field. The number in field_12 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_13": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "This field represents the `duration` field. The number in field_13 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. The provided value can be a string in one of the available formats or a number representing the duration in seconds. In any case, the value will be rounded to match the field's duration format."
                    },
                    "field_14": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkRowValue"
                        },
                        "description": "This field represents the `link_row` field. The number in field_14 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing the ids or the names of the related rows. A name is the value of the primary key of the related row. This field also accepts a string with names separated by a comma. The response contains a list of objects containing the `id` and the primary field's `value` as a string for display purposes."
                    },
                    "field_15": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileFieldResponse"
                        },
                        "description": "This field represents the `file` field. The number in field_15 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing objects with the name of the file. The response contains an `array` of more detailed objects related to the files."
                    },
                    "field_16": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SelectOption"
                            }
                        ],
                        "nullable": true,
                        "description": "This field represents the `single_select` field. The number in field_16 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_17": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        },
                        "nullable": true,
                        "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_18": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `phone_number` field. The number in field_18 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 100
                    },
                    "field_19": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `formula` field. The number in field_19 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_20": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `count` field. The number in field_20 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_21": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `rollup` field. The number in field_21 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_22": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `lookup` field. The number in field_22 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_23": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collaborator"
                        },
                        "description": "This field represents the `multiple_collaborators` field. The number in field_23 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of objects representing the chosen collaborators through the object's `id` property. The id is Baserow user id. The response objects also contains the collaborator name directly along with its id."
                    },
                    "field_24": {
                        "type": "string",
                        "format": "uuid",
                        "description": "This field represents the `uuid` field. The number in field_24 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. Contains a unique and persistent UUID for every row."
                    },
                    "field_25": {
                        "type": "integer",
                        "description": "This field represents the `autonumber` field. The number in field_25 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. Contains a unique and persistent incremental integer number for every row."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "Export": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CsvExporterOptions"
                    },
                    {
                        "$ref": "#/components/schemas/BaseExporterOptions"
                    },
                    {
                        "$ref": "#/components/schemas/BaseExporterOptions"
                    }
                ],
                "discriminator": {
                    "propertyName": "exporter_type",
                    "mapping": {
                        "csv": "#/components/schemas/CsvExporterOptions",
                        "json": "#/components/schemas/BaseExporterOptions",
                        "xml": "#/components/schemas/BaseExporterOptions"
                    }
                }
            },
            "ExportCharsetEnum": {
                "enum": [
                    "utf-8",
                    "iso-8859-6",
                    "windows-1256",
                    "iso-8859-4",
                    "windows-1257",
                    "iso-8859-14",
                    "iso-8859-2",
                    "windows-1250",
                    "gbk",
                    "gb18030",
                    "big5",
                    "koi8-r",
                    "koi8-u",
                    "iso-8859-5",
                    "windows-1251",
                    "x-mac-cyrillic",
                    "iso-8859-7",
                    "windows-1253",
                    "iso-8859-8",
                    "windows-1255",
                    "euc-jp",
                    "iso-2022-jp",
                    "shift-jis",
                    "euc-kr",
                    "macintosh",
                    "iso-8859-10",
                    "iso-8859-16",
                    "windows-874",
                    "windows-1254",
                    "windows-1258",
                    "iso-8859-1",
                    "windows-1252",
                    "iso-8859-3"
                ],
                "type": "string",
                "description": "* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
            },
            "ExportJob": {
                "type": "object",
                "description": "When mixed in to a model serializer for an ExportJob this will add an url field\nwith the actual usable url of the export job's file (if it has one).",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table": {
                        "type": "integer",
                        "nullable": true
                    },
                    "view": {
                        "type": "integer",
                        "nullable": true
                    },
                    "exporter_type": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/StateEnum"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true,
                        "description": "DEPRECATED: Use state instead"
                    },
                    "exported_file_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "progress_percentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "exporter_type",
                    "id",
                    "state",
                    "status",
                    "url"
                ]
            },
            "ExporterTypeEnum": {
                "enum": [
                    "csv",
                    "json",
                    "xml"
                ],
                "type": "string",
                "description": "* `csv` - csv\n* `json` - json\n* `xml` - xml"
            },
            "FacebookAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "client_id": {
                        "type": "string",
                        "description": "App ID, or consumer key",
                        "maxLength": 191
                    },
                    "secret": {
                        "type": "string",
                        "description": "API secret, client secret, or consumer secret",
                        "maxLength": 191
                    }
                },
                "required": [
                    "client_id",
                    "id",
                    "name",
                    "secret",
                    "type"
                ]
            },
            "Field": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "FieldCreateField": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TextFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/LongTextFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/URLFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/EmailFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/NumberFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/RatingFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/BooleanFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/DateFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedByFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedOnFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedByFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/DurationFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/LinkRowFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/FileFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/SingleSelectFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleSelectFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/PhoneNumberFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/FormulaFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/CountFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/RollupFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/LookupFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleCollaboratorsFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/UUIDFieldCreateField"
                    },
                    {
                        "$ref": "#/components/schemas/AutonumberFieldCreateField"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "text": "#/components/schemas/TextFieldCreateField",
                        "long_text": "#/components/schemas/LongTextFieldCreateField",
                        "url": "#/components/schemas/URLFieldCreateField",
                        "email": "#/components/schemas/EmailFieldCreateField",
                        "number": "#/components/schemas/NumberFieldCreateField",
                        "rating": "#/components/schemas/RatingFieldCreateField",
                        "boolean": "#/components/schemas/BooleanFieldCreateField",
                        "date": "#/components/schemas/DateFieldCreateField",
                        "last_modified": "#/components/schemas/LastModifiedFieldCreateField",
                        "last_modified_by": "#/components/schemas/LastModifiedByFieldCreateField",
                        "created_on": "#/components/schemas/CreatedOnFieldCreateField",
                        "created_by": "#/components/schemas/CreatedByFieldCreateField",
                        "duration": "#/components/schemas/DurationFieldCreateField",
                        "link_row": "#/components/schemas/LinkRowFieldCreateField",
                        "file": "#/components/schemas/FileFieldCreateField",
                        "single_select": "#/components/schemas/SingleSelectFieldCreateField",
                        "multiple_select": "#/components/schemas/MultipleSelectFieldCreateField",
                        "phone_number": "#/components/schemas/PhoneNumberFieldCreateField",
                        "formula": "#/components/schemas/FormulaFieldCreateField",
                        "count": "#/components/schemas/CountFieldCreateField",
                        "rollup": "#/components/schemas/RollupFieldCreateField",
                        "lookup": "#/components/schemas/LookupFieldCreateField",
                        "multiple_collaborators": "#/components/schemas/MultipleCollaboratorsFieldCreateField",
                        "uuid": "#/components/schemas/UUIDFieldCreateField",
                        "autonumber": "#/components/schemas/AutonumberFieldCreateField"
                    }
                }
            },
            "FieldField": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TextFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/LongTextFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/URLFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/EmailFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/NumberFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/RatingFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/BooleanFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/DateFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedByFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedOnFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedByFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/DurationFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/LinkRowFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/FileFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/SingleSelectFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleSelectFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/PhoneNumberFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/FormulaFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/CountFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/RollupFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/LookupFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleCollaboratorsFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/UUIDFieldField"
                    },
                    {
                        "$ref": "#/components/schemas/AutonumberFieldField"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "text": "#/components/schemas/TextFieldField",
                        "long_text": "#/components/schemas/LongTextFieldField",
                        "url": "#/components/schemas/URLFieldField",
                        "email": "#/components/schemas/EmailFieldField",
                        "number": "#/components/schemas/NumberFieldField",
                        "rating": "#/components/schemas/RatingFieldField",
                        "boolean": "#/components/schemas/BooleanFieldField",
                        "date": "#/components/schemas/DateFieldField",
                        "last_modified": "#/components/schemas/LastModifiedFieldField",
                        "last_modified_by": "#/components/schemas/LastModifiedByFieldField",
                        "created_on": "#/components/schemas/CreatedOnFieldField",
                        "created_by": "#/components/schemas/CreatedByFieldField",
                        "duration": "#/components/schemas/DurationFieldField",
                        "link_row": "#/components/schemas/LinkRowFieldField",
                        "file": "#/components/schemas/FileFieldField",
                        "single_select": "#/components/schemas/SingleSelectFieldField",
                        "multiple_select": "#/components/schemas/MultipleSelectFieldField",
                        "phone_number": "#/components/schemas/PhoneNumberFieldField",
                        "formula": "#/components/schemas/FormulaFieldField",
                        "count": "#/components/schemas/CountFieldField",
                        "rollup": "#/components/schemas/RollupFieldField",
                        "lookup": "#/components/schemas/LookupFieldField",
                        "multiple_collaborators": "#/components/schemas/MultipleCollaboratorsFieldField",
                        "uuid": "#/components/schemas/UUIDFieldField",
                        "autonumber": "#/components/schemas/AutonumberFieldField"
                    }
                }
            },
            "FieldFieldSerializerWithRelatedFields": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TextFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/URLFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/EmailFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/NumberFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/RatingFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/DateFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/DurationFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/FileFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/CountFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/RollupFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/LookupFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields"
                    },
                    {
                        "$ref": "#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "text": "#/components/schemas/TextFieldFieldSerializerWithRelatedFields",
                        "long_text": "#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields",
                        "url": "#/components/schemas/URLFieldFieldSerializerWithRelatedFields",
                        "email": "#/components/schemas/EmailFieldFieldSerializerWithRelatedFields",
                        "number": "#/components/schemas/NumberFieldFieldSerializerWithRelatedFields",
                        "rating": "#/components/schemas/RatingFieldFieldSerializerWithRelatedFields",
                        "boolean": "#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields",
                        "date": "#/components/schemas/DateFieldFieldSerializerWithRelatedFields",
                        "last_modified": "#/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields",
                        "last_modified_by": "#/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields",
                        "created_on": "#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields",
                        "created_by": "#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields",
                        "duration": "#/components/schemas/DurationFieldFieldSerializerWithRelatedFields",
                        "link_row": "#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields",
                        "file": "#/components/schemas/FileFieldFieldSerializerWithRelatedFields",
                        "single_select": "#/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields",
                        "multiple_select": "#/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields",
                        "phone_number": "#/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields",
                        "formula": "#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields",
                        "count": "#/components/schemas/CountFieldFieldSerializerWithRelatedFields",
                        "rollup": "#/components/schemas/RollupFieldFieldSerializerWithRelatedFields",
                        "lookup": "#/components/schemas/LookupFieldFieldSerializerWithRelatedFields",
                        "multiple_collaborators": "#/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields",
                        "uuid": "#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields",
                        "autonumber": "#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields"
                    }
                }
            },
            "FieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "FileFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "FileFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "FileFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "FileFieldRequest": {
                "type": "object",
                "properties": {
                    "visible_name": {
                        "type": "string",
                        "description": "A visually editable name for the field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Accepts the name of the already uploaded user file."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "FileFieldResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "thumbnails": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    },
                    "visible_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "is_image": {
                        "type": "boolean"
                    },
                    "image_width": {
                        "type": "integer"
                    },
                    "image_height": {
                        "type": "integer"
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "image_height",
                    "image_width",
                    "is_image",
                    "mime_type",
                    "name",
                    "size",
                    "thumbnails",
                    "uploaded_at",
                    "url",
                    "visible_name"
                ]
            },
            "FileFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "FileImportJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "FileImportJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "database_id": {
                        "type": "integer",
                        "description": "Database id where the table will be created."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the new table.",
                        "maxLength": 255
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "Table id where the data will be imported."
                    },
                    "first_row_header": {
                        "type": "boolean",
                        "default": false
                    },
                    "report": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Report"
                            }
                        ],
                        "description": "Import error report."
                    }
                },
                "required": [
                    "database_id",
                    "id",
                    "progress_percentage",
                    "report",
                    "state",
                    "type"
                ]
            },
            "FilterActionTypeEnum": {
                "enum": [
                    "create_group",
                    "delete_group",
                    "update_group",
                    "order_groups",
                    "create_application",
                    "update_application",
                    "delete_application",
                    "order_applications",
                    "duplicate_application",
                    "install_template",
                    "create_group_invitation",
                    "delete_group_invitation",
                    "accept_group_invitation",
                    "reject_group_invitation",
                    "update_group_invitation_permissions",
                    "leave_group",
                    "create_snapshot",
                    "delete_snapshot",
                    "restore_snapshot",
                    "empty_trash",
                    "restore_from_trash",
                    "create_user",
                    "update_user",
                    "schedule_user_deletion",
                    "cancel_user_deletion",
                    "sign_in_user",
                    "change_user_password",
                    "send_reset_user_password",
                    "reset_user_password",
                    "create_db_token",
                    "update_db_token_name",
                    "update_db_token_permissions",
                    "rotate_db_token_key",
                    "delete_db_token_key",
                    "create_webhook",
                    "delete_webhook",
                    "update_webhook",
                    "export_table",
                    "import_database_from_airtable",
                    "create_table",
                    "delete_table",
                    "order_tables",
                    "update_table",
                    "duplicate_table",
                    "create_row",
                    "create_rows",
                    "import_rows",
                    "delete_row",
                    "delete_rows",
                    "move_row",
                    "update_row",
                    "update_rows",
                    "create_view",
                    "duplicate_view",
                    "delete_view",
                    "order_views",
                    "update_view",
                    "create_view_filter",
                    "update_view_filter",
                    "delete_view_filter",
                    "create_view_sort",
                    "update_view_sort",
                    "delete_view_sort",
                    "create_view_group",
                    "update_view_group",
                    "delete_view_group",
                    "rotate_view_slug",
                    "update_view_field_options",
                    "create_decoration",
                    "update_decoration",
                    "delete_decoration",
                    "create_view_filter_group",
                    "update_view_filter_group",
                    "delete_view_filter_group",
                    "create_field",
                    "delete_field",
                    "update_field",
                    "duplicate_field",
                    "create_row_comment",
                    "delete_row_comment",
                    "update_row_comment",
                    "create_team",
                    "update_team",
                    "delete_team",
                    "create_team_subject",
                    "delete_team_subject",
                    "batch_assign_role"
                ],
                "type": "string",
                "description": "* `create_group` - create_group\n* `delete_group` - delete_group\n* `update_group` - update_group\n* `order_groups` - order_groups\n* `create_application` - create_application\n* `update_application` - update_application\n* `delete_application` - delete_application\n* `order_applications` - order_applications\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_group_invitation` - create_group_invitation\n* `delete_group_invitation` - delete_group_invitation\n* `accept_group_invitation` - accept_group_invitation\n* `reject_group_invitation` - reject_group_invitation\n* `update_group_invitation_permissions` - update_group_invitation_permissions\n* `leave_group` - leave_group\n* `create_snapshot` - create_snapshot\n* `delete_snapshot` - delete_snapshot\n* `restore_snapshot` - restore_snapshot\n* `empty_trash` - empty_trash\n* `restore_from_trash` - restore_from_trash\n* `create_user` - create_user\n* `update_user` - update_user\n* `schedule_user_deletion` - schedule_user_deletion\n* `cancel_user_deletion` - cancel_user_deletion\n* `sign_in_user` - sign_in_user\n* `change_user_password` - change_user_password\n* `send_reset_user_password` - send_reset_user_password\n* `reset_user_password` - reset_user_password\n* `create_db_token` - create_db_token\n* `update_db_token_name` - update_db_token_name\n* `update_db_token_permissions` - update_db_token_permissions\n* `rotate_db_token_key` - rotate_db_token_key\n* `delete_db_token_key` - delete_db_token_key\n* `create_webhook` - create_webhook\n* `delete_webhook` - delete_webhook\n* `update_webhook` - update_webhook\n* `export_table` - export_table\n* `import_database_from_airtable` - import_database_from_airtable\n* `create_table` - create_table\n* `delete_table` - delete_table\n* `order_tables` - order_tables\n* `update_table` - update_table\n* `duplicate_table` - duplicate_table\n* `create_row` - create_row\n* `create_rows` - create_rows\n* `import_rows` - import_rows\n* `delete_row` - delete_row\n* `delete_rows` - delete_rows\n* `move_row` - move_row\n* `update_row` - update_row\n* `update_rows` - update_rows\n* `create_view` - create_view\n* `duplicate_view` - duplicate_view\n* `delete_view` - delete_view\n* `order_views` - order_views\n* `update_view` - update_view\n* `create_view_filter` - create_view_filter\n* `update_view_filter` - update_view_filter\n* `delete_view_filter` - delete_view_filter\n* `create_view_sort` - create_view_sort\n* `update_view_sort` - update_view_sort\n* `delete_view_sort` - delete_view_sort\n* `create_view_group` - create_view_group\n* `update_view_group` - update_view_group\n* `delete_view_group` - delete_view_group\n* `rotate_view_slug` - rotate_view_slug\n* `update_view_field_options` - update_view_field_options\n* `create_decoration` - create_decoration\n* `update_decoration` - update_decoration\n* `delete_decoration` - delete_decoration\n* `create_view_filter_group` - create_view_filter_group\n* `update_view_filter_group` - update_view_filter_group\n* `delete_view_filter_group` - delete_view_filter_group\n* `create_field` - create_field\n* `delete_field` - delete_field\n* `update_field` - update_field\n* `duplicate_field` - duplicate_field\n* `create_row_comment` - create_row_comment\n* `delete_row_comment` - delete_row_comment\n* `update_row_comment` - update_row_comment\n* `create_team` - create_team\n* `update_team` - update_team\n* `delete_team` - delete_team\n* `create_team_subject` - create_team_subject\n* `delete_team_subject` - delete_team_subject\n* `batch_assign_role` - batch_assign_role"
            },
            "FormContainerElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "submit_button_label": {
                        "type": "string",
                        "default": ""
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "FormContainerElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "submit_button_label": {
                        "type": "string",
                        "default": ""
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "FormContainerElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "submit_button_label": {
                        "type": "string",
                        "default": ""
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "FormContainerElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "submit_button_label": {
                        "type": "string",
                        "default": ""
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                }
            },
            "FormViewCreateView": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/ViewTypesEnum"
                    },
                    "ownership_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OwnershipTypeEnum"
                            }
                        ],
                        "default": "collaborative"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "title": {
                        "type": "string",
                        "description": "The title that is displayed at the beginning of the form."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description that is displayed at the beginning of the form."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeC5eEnum"
                            }
                        ],
                        "description": "Configurable mode of the form.\n\n* `form` - form\n* `survey` - survey"
                    },
                    "cover_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The cover image that must be displayed at the top of the form."
                    },
                    "logo_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The logo image that must be displayed at the top of the form."
                    },
                    "submit_text": {
                        "type": "string",
                        "description": "The text displayed on the submit button."
                    },
                    "submit_action": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubmitActionEnum"
                            }
                        ],
                        "description": "The action that must be performed after the visitor has filled out the form.\n\n* `MESSAGE` - Message\n* `REDIRECT` - Redirect"
                    },
                    "submit_action_message": {
                        "type": "string",
                        "description": "If the `submit_action` is MESSAGE, then this message will be shown to the visitor after submitting the form."
                    },
                    "submit_action_redirect_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "If the `submit_action` is REDIRECT,then the visitors will be redirected to the this URL after submitting the form.",
                        "maxLength": 200
                    },
                    "receive_notification_on_submit": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "A boolean indicating if the current user should be notified when the form is submitted."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "name",
                    "receive_notification_on_submit",
                    "slug",
                    "type"
                ]
            },
            "FormViewFieldOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "By default, the name of the related field will be shown to the visitor. Optionally another name can be used by setting this name.",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "description": "If provided, then this value be will be shown under the field name."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether the field is included in the form."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates whether the field is required for the visitor to fill out."
                    },
                    "show_when_matching_conditions": {
                        "type": "boolean",
                        "description": "Indicates whether this field is visible when the conditions are met."
                    },
                    "condition_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all (AND) or any (OR) of the conditions should match before shown.\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The order that the field has in the form. Lower value is first."
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormViewFieldOptionsCondition"
                        }
                    },
                    "condition_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormViewFieldOptionsConditionGroup"
                        }
                    },
                    "field_component": {
                        "type": "string",
                        "description": "Indicates which field input component is used in the form. The value is only used in the frontend, and can differ per field.",
                        "maxLength": 32
                    }
                }
            },
            "FormViewFieldOptionsCondition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "field": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).",
                        "maxLength": 48
                    },
                    "value": {
                        "type": "string",
                        "description": "The filter value that must be compared to the field's value.",
                        "maxLength": 255
                    },
                    "group": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "field",
                    "id",
                    "type"
                ]
            },
            "FormViewFieldOptionsConditionGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.\n\n* `AND` - And\n* `OR` - Or"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "FormViewSubmitted": {
                "type": "object",
                "properties": {
                    "submit_action": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubmitActionEnum"
                            }
                        ],
                        "description": "The action that must be performed after the visitor has filled out the form.\n\n* `MESSAGE` - Message\n* `REDIRECT` - Redirect"
                    },
                    "submit_action_message": {
                        "type": "string",
                        "description": "If the `submit_action` is MESSAGE, then this message will be shown to the visitor after submitting the form."
                    },
                    "submit_action_redirect_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "If the `submit_action` is REDIRECT,then the visitors will be redirected to the this URL after submitting the form.",
                        "maxLength": 200
                    },
                    "row_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "row_id"
                ]
            },
            "FormViewView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "table": {
                        "$ref": "#/components/schemas/Table"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilter"
                        }
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilterGroup"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewSort"
                        }
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewGroupBy"
                        }
                    },
                    "decorations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewDecoration"
                        }
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_has_password": {
                        "type": "boolean",
                        "description": "Indicates whether the public view is password protected or not.\n\n:return: True if the public view is password protected, False otherwise.",
                        "readOnly": true
                    },
                    "show_logo": {
                        "type": "boolean"
                    },
                    "ownership_type": {
                        "type": "string"
                    },
                    "owned_by_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title that is displayed at the beginning of the form."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description that is displayed at the beginning of the form."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeC5eEnum"
                            }
                        ],
                        "description": "Configurable mode of the form.\n\n* `form` - form\n* `survey` - survey"
                    },
                    "cover_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The cover image that must be displayed at the top of the form."
                    },
                    "logo_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The logo image that must be displayed at the top of the form."
                    },
                    "submit_text": {
                        "type": "string",
                        "description": "The text displayed on the submit button."
                    },
                    "submit_action": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubmitActionEnum"
                            }
                        ],
                        "description": "The action that must be performed after the visitor has filled out the form.\n\n* `MESSAGE` - Message\n* `REDIRECT` - Redirect"
                    },
                    "submit_action_message": {
                        "type": "string",
                        "description": "If the `submit_action` is MESSAGE, then this message will be shown to the visitor after submitting the form."
                    },
                    "submit_action_redirect_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "If the `submit_action` is REDIRECT,then the visitors will be redirected to the this URL after submitting the form.",
                        "maxLength": 200
                    },
                    "receive_notification_on_submit": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "A boolean indicating if the current user should be notified when the form is submitted."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "ownership_type",
                    "public_view_has_password",
                    "receive_notification_on_submit",
                    "slug",
                    "table",
                    "table_id",
                    "type"
                ]
            },
            "FormatEnum": {
                "enum": [
                    "plain",
                    "markdown"
                ],
                "type": "string",
                "description": "* `plain` - Plain\n* `markdown` - Markdown"
            },
            "FormulaFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "readOnly": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "formula": {
                        "type": "string"
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "error",
                    "formula",
                    "name",
                    "nullable",
                    "type"
                ]
            },
            "FormulaFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "readOnly": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "formula": {
                        "type": "string"
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "error",
                    "formula",
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "FormulaFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "readOnly": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "formula": {
                        "type": "string"
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "error",
                    "formula",
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "FormulaFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "readOnly": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "formula": {
                        "type": "string"
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "error",
                    "formula",
                    "nullable"
                ]
            },
            "FormulaTypeEnum": {
                "enum": [
                    "invalid",
                    "text",
                    "char",
                    "button",
                    "link",
                    "date_interval",
                    "duration",
                    "date",
                    "boolean",
                    "number",
                    "array",
                    "single_select",
                    "multiple_select",
                    "single_file"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `text` - text\n* `char` - char\n* `button` - button\n* `link` - link\n* `date_interval` - date_interval\n* `duration` - duration\n* `date` - date\n* `boolean` - boolean\n* `number` - number\n* `array` - array\n* `single_select` - single_select\n* `multiple_select` - multiple_select\n* `single_file` - single_file"
            },
            "FullHealthCheck": {
                "type": "object",
                "properties": {
                    "passing": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "False if any of the critical service health checks are failing, true otherwise."
                    },
                    "checks": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "An object keyed by the name of the health check and the value being the result."
                    }
                },
                "required": [
                    "checks",
                    "passing"
                ]
            },
            "GalleryViewCreateView": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/ViewTypesEnum"
                    },
                    "ownership_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OwnershipTypeEnum"
                            }
                        ],
                        "default": "collaborative"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "card_cover_image_field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "References a file field of which the first image must be shown as card cover image."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "name",
                    "slug",
                    "type"
                ]
            },
            "GalleryViewFieldOptions": {
                "type": "object",
                "properties": {
                    "hidden": {
                        "type": "boolean",
                        "description": "Whether or not the field should be hidden in the card."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The order that the field has in the form. Lower value is first."
                    }
                }
            },
            "GalleryViewView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "table": {
                        "$ref": "#/components/schemas/Table"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilter"
                        }
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilterGroup"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewSort"
                        }
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewGroupBy"
                        }
                    },
                    "decorations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewDecoration"
                        }
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_has_password": {
                        "type": "boolean",
                        "description": "Indicates whether the public view is password protected or not.\n\n:return: True if the public view is password protected, False otherwise.",
                        "readOnly": true
                    },
                    "show_logo": {
                        "type": "boolean"
                    },
                    "ownership_type": {
                        "type": "string"
                    },
                    "owned_by_id": {
                        "type": "integer"
                    },
                    "card_cover_image_field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "References a file field of which the first image must be shown as card cover image."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "ownership_type",
                    "public_view_has_password",
                    "slug",
                    "table",
                    "table_id",
                    "type"
                ]
            },
            "GeneratedConditional_colorCreateViewDecoration": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeFc4Enum"
                            }
                        ],
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.\n\n* `left_border_color` - left_border_color\n* `background_color` - background_color"
                    },
                    "value_provider_type": {
                        "default": "",
                        "description": "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color` - single_select_color\n* `conditional_color` - conditional_color",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ValueProviderTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "value_provider_conf": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionalColorValueProviderConfColors"
                            }
                        ],
                        "description": "The configuration of the value provider"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                },
                "required": [
                    "type"
                ]
            },
            "GeneratedConditional_colorUpdateViewDecoration": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeFc4Enum"
                            }
                        ],
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.\n\n* `left_border_color` - left_border_color\n* `background_color` - background_color"
                    },
                    "value_provider_type": {
                        "description": "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color` - single_select_color\n* `conditional_color` - conditional_color",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ValueProviderTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "value_provider_conf": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionalColorValueProviderConfColors"
                            }
                        ],
                        "description": "The configuration of the value provider"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                }
            },
            "GeneratedConditional_colorViewDecoration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the decoration applies. Each view can have his own decorations."
                    },
                    "type": {
                        "type": "string",
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.",
                        "maxLength": 255
                    },
                    "value_provider_type": {
                        "type": "string",
                        "description": "The value provider type that gives the value to the decorator.",
                        "maxLength": 255
                    },
                    "value_provider_conf": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionalColorValueProviderConfColors"
                            }
                        ],
                        "description": "The configuration of the value provider"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GeneratedSingle_select_colorCreateViewDecoration": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeFc4Enum"
                            }
                        ],
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.\n\n* `left_border_color` - left_border_color\n* `background_color` - background_color"
                    },
                    "value_provider_type": {
                        "default": "",
                        "description": "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color` - single_select_color\n* `conditional_color` - conditional_color",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ValueProviderTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "value_provider_conf": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SelectColorValueProviderConf"
                            }
                        ],
                        "description": "The configuration of the value provider"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                },
                "required": [
                    "type"
                ]
            },
            "GeneratedSingle_select_colorUpdateViewDecoration": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeFc4Enum"
                            }
                        ],
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.\n\n* `left_border_color` - left_border_color\n* `background_color` - background_color"
                    },
                    "value_provider_type": {
                        "description": "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color` - single_select_color\n* `conditional_color` - conditional_color",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ValueProviderTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "value_provider_conf": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SelectColorValueProviderConf"
                            }
                        ],
                        "description": "The configuration of the value provider"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                }
            },
            "GeneratedSingle_select_colorViewDecoration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the decoration applies. Each view can have his own decorations."
                    },
                    "type": {
                        "type": "string",
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.",
                        "maxLength": 255
                    },
                    "value_provider_type": {
                        "type": "string",
                        "description": "The value provider type that gives the value to the decorator.",
                        "maxLength": 255
                    },
                    "value_provider_conf": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SelectColorValueProviderConf"
                            }
                        ],
                        "description": "The configuration of the value provider"
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GitHubAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "client_id": {
                        "type": "string",
                        "description": "App ID, or consumer key",
                        "maxLength": 191
                    },
                    "secret": {
                        "type": "string",
                        "description": "API secret, client secret, or consumer secret",
                        "maxLength": 191
                    }
                },
                "required": [
                    "client_id",
                    "id",
                    "name",
                    "secret",
                    "type"
                ]
            },
            "GitLabAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "base_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Base URL of the authorization server",
                        "maxLength": 200
                    },
                    "client_id": {
                        "type": "string",
                        "description": "App ID, or consumer key",
                        "maxLength": 191
                    },
                    "secret": {
                        "type": "string",
                        "description": "API secret, client secret, or consumer secret",
                        "maxLength": 191
                    }
                },
                "required": [
                    "base_url",
                    "client_id",
                    "id",
                    "name",
                    "secret",
                    "type"
                ]
            },
            "GoogleAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "client_id": {
                        "type": "string",
                        "description": "App ID, or consumer key",
                        "maxLength": 191
                    },
                    "secret": {
                        "type": "string",
                        "description": "API secret, client secret, or consumer secret",
                        "maxLength": 191
                    }
                },
                "required": [
                    "client_id",
                    "id",
                    "name",
                    "secret",
                    "type"
                ]
            },
            "GridViewCreateView": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/ViewTypesEnum"
                    },
                    "ownership_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OwnershipTypeEnum"
                            }
                        ],
                        "default": "collaborative"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "row_identifier_type": {
                        "$ref": "#/components/schemas/RowIdentifierTypeEnum"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "name",
                    "slug",
                    "type"
                ]
            },
            "GridViewFieldOptions": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "The width of the table field in the related view."
                    },
                    "hidden": {
                        "type": "boolean",
                        "description": "Whether or not the field should be hidden in the current view."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position that the field has within the view, lowest first. If there is another field with the same order value then the field with the lowest id must be shown first."
                    },
                    "aggregation_type": {
                        "type": "string",
                        "description": "Indicates how the field value is aggregated. This value is different from the `aggregation_raw_type`. The `aggregation_raw_type` is the value extracted from the database, while the `aggregation_type` can implies further calculations. For example: if you want to compute an average, `sum` is going to be the `aggregation_raw_type`, the value extracted from database, and `sum / row_count` will be the aggregation result displayed to the user. This aggregation_type should be used by the client to compute the final value.",
                        "maxLength": 48
                    },
                    "aggregation_raw_type": {
                        "description": "Indicates how to compute the raw aggregation value from database. This type must be registered in the backend prior to use it.\n\n* `empty_count` - empty_count\n* `not_empty_count` - not_empty_count\n* `unique_count` - unique_count\n* `min` - min\n* `max` - max\n* `sum` - sum\n* `average` - average\n* `median` - median\n* `decile` - decile\n* `variance` - variance\n* `std_dev` - std_dev",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AggregationRawTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    }
                }
            },
            "GridViewFilter": {
                "type": "object",
                "properties": {
                    "field_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Only the fields related to the provided ids are added to the response. If None are provided all fields will be returned."
                    },
                    "row_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Only rows related to the provided ids are added to the response."
                    }
                },
                "required": [
                    "row_ids"
                ]
            },
            "GridViewView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "table": {
                        "$ref": "#/components/schemas/Table"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilter"
                        }
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilterGroup"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewSort"
                        }
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewGroupBy"
                        }
                    },
                    "decorations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewDecoration"
                        }
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_has_password": {
                        "type": "boolean",
                        "description": "Indicates whether the public view is password protected or not.\n\n:return: True if the public view is password protected, False otherwise.",
                        "readOnly": true
                    },
                    "show_logo": {
                        "type": "boolean"
                    },
                    "ownership_type": {
                        "type": "string"
                    },
                    "owned_by_id": {
                        "type": "integer"
                    },
                    "row_identifier_type": {
                        "$ref": "#/components/schemas/RowIdentifierTypeEnum"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "ownership_type",
                    "public_view_has_password",
                    "slug",
                    "table",
                    "table_id",
                    "type"
                ]
            },
            "HeadingElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "level": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "default": 1,
                        "description": "The level of the heading from 1 to 6."
                    },
                    "font_color": {
                        "type": "string",
                        "description": "Heading font color.",
                        "maxLength": 20
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "HeadingElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "level": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "default": 1,
                        "description": "The level of the heading from 1 to 6."
                    },
                    "font_color": {
                        "type": "string",
                        "description": "Heading font color.",
                        "maxLength": 20
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "HeadingElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "level": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "default": 1,
                        "description": "The level of the heading from 1 to 6."
                    },
                    "font_color": {
                        "type": "string",
                        "description": "Heading font color.",
                        "maxLength": 20
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "HeadingElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "level": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 1,
                        "default": 1,
                        "description": "The level of the heading from 1 to 6."
                    },
                    "font_color": {
                        "type": "string",
                        "description": "Heading font color.",
                        "maxLength": 20
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    }
                }
            },
            "IFrameElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "source_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceTypeEnum"
                            }
                        ],
                        "default": "url"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "A link to the page to embed"
                    },
                    "embed": {
                        "type": "string",
                        "default": "",
                        "description": "Inline HTML to embed"
                    },
                    "height": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 1,
                        "default": 300,
                        "description": "Height in pixels of the iframe"
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "IFrameElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "source_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceTypeEnum"
                            }
                        ],
                        "default": "url"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "A link to the page to embed"
                    },
                    "embed": {
                        "type": "string",
                        "default": "",
                        "description": "Inline HTML to embed"
                    },
                    "height": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 1,
                        "default": 300,
                        "description": "Height in pixels of the iframe"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "IFrameElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "source_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceTypeEnum"
                            }
                        ],
                        "default": "url"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "A link to the page to embed"
                    },
                    "embed": {
                        "type": "string",
                        "default": "",
                        "description": "Inline HTML to embed"
                    },
                    "height": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 1,
                        "default": 300,
                        "description": "Height in pixels of the iframe"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "IFrameElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "source_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceTypeEnum"
                            }
                        ],
                        "default": "url"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "A link to the page to embed"
                    },
                    "embed": {
                        "type": "string",
                        "default": "",
                        "description": "Inline HTML to embed"
                    },
                    "height": {
                        "type": "integer",
                        "maximum": 2000,
                        "minimum": 1,
                        "default": 300,
                        "description": "Height in pixels of the iframe"
                    }
                }
            },
            "IdEnum": {
                "enum": [
                    "create_group",
                    "delete_group",
                    "update_group",
                    "order_groups",
                    "create_application",
                    "update_application",
                    "delete_application",
                    "order_applications",
                    "duplicate_application",
                    "install_template",
                    "create_group_invitation",
                    "delete_group_invitation",
                    "accept_group_invitation",
                    "reject_group_invitation",
                    "update_group_invitation_permissions",
                    "leave_group",
                    "create_snapshot",
                    "delete_snapshot",
                    "restore_snapshot",
                    "empty_trash",
                    "restore_from_trash",
                    "create_user",
                    "update_user",
                    "schedule_user_deletion",
                    "cancel_user_deletion",
                    "sign_in_user",
                    "change_user_password",
                    "send_reset_user_password",
                    "reset_user_password",
                    "create_db_token",
                    "update_db_token_name",
                    "update_db_token_permissions",
                    "rotate_db_token_key",
                    "delete_db_token_key",
                    "create_webhook",
                    "delete_webhook",
                    "update_webhook",
                    "export_table",
                    "import_database_from_airtable",
                    "create_table",
                    "delete_table",
                    "order_tables",
                    "update_table",
                    "duplicate_table",
                    "create_row",
                    "create_rows",
                    "import_rows",
                    "delete_row",
                    "delete_rows",
                    "move_row",
                    "update_row",
                    "update_rows",
                    "create_view",
                    "duplicate_view",
                    "delete_view",
                    "order_views",
                    "update_view",
                    "create_view_filter",
                    "update_view_filter",
                    "delete_view_filter",
                    "create_view_sort",
                    "update_view_sort",
                    "delete_view_sort",
                    "create_view_group",
                    "update_view_group",
                    "delete_view_group",
                    "rotate_view_slug",
                    "update_view_field_options",
                    "create_decoration",
                    "update_decoration",
                    "delete_decoration",
                    "create_view_filter_group",
                    "update_view_filter_group",
                    "delete_view_filter_group",
                    "create_field",
                    "delete_field",
                    "update_field",
                    "duplicate_field",
                    "create_row_comment",
                    "delete_row_comment",
                    "update_row_comment",
                    "create_team",
                    "update_team",
                    "delete_team",
                    "create_team_subject",
                    "delete_team_subject",
                    "batch_assign_role"
                ],
                "type": "string",
                "description": "* `create_group` - create_group\n* `delete_group` - delete_group\n* `update_group` - update_group\n* `order_groups` - order_groups\n* `create_application` - create_application\n* `update_application` - update_application\n* `delete_application` - delete_application\n* `order_applications` - order_applications\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_group_invitation` - create_group_invitation\n* `delete_group_invitation` - delete_group_invitation\n* `accept_group_invitation` - accept_group_invitation\n* `reject_group_invitation` - reject_group_invitation\n* `update_group_invitation_permissions` - update_group_invitation_permissions\n* `leave_group` - leave_group\n* `create_snapshot` - create_snapshot\n* `delete_snapshot` - delete_snapshot\n* `restore_snapshot` - restore_snapshot\n* `empty_trash` - empty_trash\n* `restore_from_trash` - restore_from_trash\n* `create_user` - create_user\n* `update_user` - update_user\n* `schedule_user_deletion` - schedule_user_deletion\n* `cancel_user_deletion` - cancel_user_deletion\n* `sign_in_user` - sign_in_user\n* `change_user_password` - change_user_password\n* `send_reset_user_password` - send_reset_user_password\n* `reset_user_password` - reset_user_password\n* `create_db_token` - create_db_token\n* `update_db_token_name` - update_db_token_name\n* `update_db_token_permissions` - update_db_token_permissions\n* `rotate_db_token_key` - rotate_db_token_key\n* `delete_db_token_key` - delete_db_token_key\n* `create_webhook` - create_webhook\n* `delete_webhook` - delete_webhook\n* `update_webhook` - update_webhook\n* `export_table` - export_table\n* `import_database_from_airtable` - import_database_from_airtable\n* `create_table` - create_table\n* `delete_table` - delete_table\n* `order_tables` - order_tables\n* `update_table` - update_table\n* `duplicate_table` - duplicate_table\n* `create_row` - create_row\n* `create_rows` - create_rows\n* `import_rows` - import_rows\n* `delete_row` - delete_row\n* `delete_rows` - delete_rows\n* `move_row` - move_row\n* `update_row` - update_row\n* `update_rows` - update_rows\n* `create_view` - create_view\n* `duplicate_view` - duplicate_view\n* `delete_view` - delete_view\n* `order_views` - order_views\n* `update_view` - update_view\n* `create_view_filter` - create_view_filter\n* `update_view_filter` - update_view_filter\n* `delete_view_filter` - delete_view_filter\n* `create_view_sort` - create_view_sort\n* `update_view_sort` - update_view_sort\n* `delete_view_sort` - delete_view_sort\n* `create_view_group` - create_view_group\n* `update_view_group` - update_view_group\n* `delete_view_group` - delete_view_group\n* `rotate_view_slug` - rotate_view_slug\n* `update_view_field_options` - update_view_field_options\n* `create_decoration` - create_decoration\n* `update_decoration` - update_decoration\n* `delete_decoration` - delete_decoration\n* `create_view_filter_group` - create_view_filter_group\n* `update_view_filter_group` - update_view_filter_group\n* `delete_view_filter_group` - delete_view_filter_group\n* `create_field` - create_field\n* `delete_field` - delete_field\n* `update_field` - update_field\n* `duplicate_field` - duplicate_field\n* `create_row_comment` - create_row_comment\n* `delete_row_comment` - delete_row_comment\n* `update_row_comment` - update_row_comment\n* `create_team` - create_team\n* `update_team` - update_team\n* `delete_team` - delete_team\n* `create_team_subject` - create_team_subject\n* `delete_team_subject` - delete_team_subject\n* `batch_assign_role` - batch_assign_role"
            },
            "ImageElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "image_source_type": {
                        "$ref": "#/components/schemas/ImageSourceTypeEnum"
                    },
                    "image_file": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The image file"
                    },
                    "image_url": {
                        "type": "string",
                        "description": "A link to the image file",
                        "maxLength": 1000
                    },
                    "alt_text": {
                        "type": "string",
                        "description": "Text that is displayed when the image can't load"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "style_image_constraint": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleImageConstraintEnum"
                            }
                        ],
                        "description": "The image constraint to apply to this image\n\n* `cover` - Cover\n* `contain` - Contain\n* `full-width` - Full Width"
                    },
                    "style_max_width": {
                        "type": "integer",
                        "nullable": true,
                        "default": 100,
                        "description": "The max-width for this image element."
                    },
                    "style_max_height": {
                        "type": "integer",
                        "maximum": 3000,
                        "minimum": 5,
                        "nullable": true,
                        "description": "The max-height for this image element."
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "ImageElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "image_source_type": {
                        "$ref": "#/components/schemas/ImageSourceTypeEnum"
                    },
                    "image_file": {
                        "$ref": "#/components/schemas/UserFile"
                    },
                    "image_url": {
                        "type": "string",
                        "default": "",
                        "description": "A link to the image file"
                    },
                    "alt_text": {
                        "type": "string",
                        "default": "",
                        "description": "Text that is displayed when the image can't load"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "style_image_constraint": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleImageConstraintEnum"
                            }
                        ],
                        "description": "The image constraint to apply to this image\n\n* `cover` - Cover\n* `contain` - Contain\n* `full-width` - Full Width"
                    },
                    "style_max_width": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true,
                        "description": "The max-width for this image element."
                    },
                    "style_max_height": {
                        "type": "integer",
                        "maximum": 3000,
                        "minimum": 5,
                        "nullable": true,
                        "description": "The max-height for this image element."
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "ImageElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "image_source_type": {
                        "$ref": "#/components/schemas/ImageSourceTypeEnum"
                    },
                    "image_file": {
                        "$ref": "#/components/schemas/UserFile"
                    },
                    "image_url": {
                        "type": "string",
                        "default": "",
                        "description": "A link to the image file"
                    },
                    "alt_text": {
                        "type": "string",
                        "default": "",
                        "description": "Text that is displayed when the image can't load"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "style_image_constraint": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleImageConstraintEnum"
                            }
                        ],
                        "description": "The image constraint to apply to this image\n\n* `cover` - Cover\n* `contain` - Contain\n* `full-width` - Full Width"
                    },
                    "style_max_width": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true,
                        "description": "The max-width for this image element."
                    },
                    "style_max_height": {
                        "type": "integer",
                        "maximum": 3000,
                        "minimum": 5,
                        "nullable": true,
                        "description": "The max-height for this image element."
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "ImageElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "image_source_type": {
                        "$ref": "#/components/schemas/ImageSourceTypeEnum"
                    },
                    "image_file": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The image file"
                    },
                    "image_url": {
                        "type": "string",
                        "description": "A link to the image file",
                        "maxLength": 1000
                    },
                    "alt_text": {
                        "type": "string",
                        "description": "Text that is displayed when the image can't load"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "style_image_constraint": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleImageConstraintEnum"
                            }
                        ],
                        "description": "The image constraint to apply to this image\n\n* `cover` - Cover\n* `contain` - Contain\n* `full-width` - Full Width"
                    },
                    "style_max_width": {
                        "type": "integer",
                        "nullable": true,
                        "default": 100,
                        "description": "The max-width for this image element."
                    },
                    "style_max_height": {
                        "type": "integer",
                        "maximum": 3000,
                        "minimum": 5,
                        "nullable": true,
                        "description": "The max-height for this image element."
                    }
                }
            },
            "ImageSourceTypeEnum": {
                "enum": [
                    "upload",
                    "url"
                ],
                "type": "string",
                "description": "* `upload` - Upload\n* `url` - Url"
            },
            "InputTextElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This text input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "is_multiline": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is multiline."
                    },
                    "rows": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 3,
                        "description": "Number of rows displayed by the rendered input element"
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "InputTextElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This text input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "is_multiline": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is multiline."
                    },
                    "rows": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 3,
                        "description": "Number of rows displayed by the rendered input element"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "InputTextElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This text input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "is_multiline": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is multiline."
                    },
                    "rows": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 3,
                        "description": "Number of rows displayed by the rendered input element"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "InputTextElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "label": {
                        "type": "string",
                        "default": "",
                        "description": "The text label for this input"
                    },
                    "default_value": {
                        "type": "string",
                        "default": "",
                        "description": "This text input's default value."
                    },
                    "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is a required field."
                    },
                    "placeholder": {
                        "type": "string",
                        "default": "",
                        "description": "The placeholder text which should be applied to the element."
                    },
                    "is_multiline": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this text input is multiline."
                    },
                    "rows": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "default": 3,
                        "description": "Number of rows displayed by the rendered input element"
                    }
                }
            },
            "InstallTemplateJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    },
                    "group_id": {
                        "type": "integer",
                        "description": "The ID of the group where the template will be installed."
                    },
                    "workspace_id": {
                        "type": "integer",
                        "description": "The ID of the workspace where the template will be installed."
                    },
                    "template_id": {
                        "type": "integer",
                        "description": "The template ID that will be installed."
                    }
                },
                "required": [
                    "template_id",
                    "type"
                ]
            },
            "InstallTemplateJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "workspace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "readOnly": true
                    },
                    "template": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Template"
                            }
                        ],
                        "readOnly": true
                    },
                    "installed_applications": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    },
                    "group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "group",
                    "id",
                    "installed_applications",
                    "progress_percentage",
                    "state",
                    "template",
                    "type",
                    "workspace"
                ]
            },
            "InstanceId": {
                "type": "object",
                "properties": {
                    "instance_id": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "instance_id"
                ]
            },
            "IntegrationCreateIntegration": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowIntegrationCreateIntegration"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow": "#/components/schemas/LocalBaserowIntegrationCreateIntegration"
                    }
                }
            },
            "IntegrationIntegration": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowIntegrationIntegration"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow": "#/components/schemas/LocalBaserowIntegrationIntegration"
                    }
                }
            },
            "Integration_Service": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowGetRow"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowListRows"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpsertRow"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_get_row": "#/components/schemas/LocalBaserowGetRow",
                        "local_baserow_list_rows": "#/components/schemas/LocalBaserowListRows",
                        "local_baserow_upsert_row": "#/components/schemas/LocalBaserowUpsertRow"
                    }
                }
            },
            "Integration_ServiceCreateDataSource": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowGetRowCreateDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowListRowsCreateDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpsertRowCreateDataSource"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_get_row": "#/components/schemas/LocalBaserowGetRowCreateDataSource",
                        "local_baserow_list_rows": "#/components/schemas/LocalBaserowListRowsCreateDataSource",
                        "local_baserow_upsert_row": "#/components/schemas/LocalBaserowUpsertRowCreateDataSource"
                    }
                }
            },
            "Integration_ServiceDataSource": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowGetRowDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowListRowsDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpsertRowDataSource"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_get_row": "#/components/schemas/LocalBaserowGetRowDataSource",
                        "local_baserow_list_rows": "#/components/schemas/LocalBaserowListRowsDataSource",
                        "local_baserow_upsert_row": "#/components/schemas/LocalBaserowUpsertRowDataSource"
                    }
                }
            },
            "Integration_ServicePublicDataSource": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowGetRowPublicDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowListRowsPublicDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpsertRowPublicDataSource"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_get_row": "#/components/schemas/LocalBaserowGetRowPublicDataSource",
                        "local_baserow_list_rows": "#/components/schemas/LocalBaserowListRowsPublicDataSource",
                        "local_baserow_upsert_row": "#/components/schemas/LocalBaserowUpsertRowPublicDataSource"
                    }
                }
            },
            "Integration_ServiceService": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowGetRowService"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowListRowsService"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpsertRowService"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow_get_row": "#/components/schemas/LocalBaserowGetRowService",
                        "local_baserow_list_rows": "#/components/schemas/LocalBaserowListRowsService",
                        "local_baserow_upsert_row": "#/components/schemas/LocalBaserowUpsertRowService"
                    }
                }
            },
            "Job": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    }
                },
                "required": [
                    "id",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "Job_TypeCreateJob": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DuplicateApplicationJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/InstallTemplateJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/CreateSnapshotJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/RestoreSnapshotJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/AirtableImportJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/FileImportJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/DuplicateTableJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/DuplicateFieldJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/AuditLogExportJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/DuplicatePageJobCreateJob"
                    },
                    {
                        "$ref": "#/components/schemas/PublishDomainJobCreateJob"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "duplicate_application": "#/components/schemas/DuplicateApplicationJobCreateJob",
                        "install_template": "#/components/schemas/InstallTemplateJobCreateJob",
                        "create_snapshot": "#/components/schemas/CreateSnapshotJobCreateJob",
                        "restore_snapshot": "#/components/schemas/RestoreSnapshotJobCreateJob",
                        "airtable": "#/components/schemas/AirtableImportJobCreateJob",
                        "file_import": "#/components/schemas/FileImportJobCreateJob",
                        "duplicate_table": "#/components/schemas/DuplicateTableJobCreateJob",
                        "duplicate_field": "#/components/schemas/DuplicateFieldJobCreateJob",
                        "audit_log_export": "#/components/schemas/AuditLogExportJobCreateJob",
                        "duplicate_page": "#/components/schemas/DuplicatePageJobCreateJob",
                        "publish_domain": "#/components/schemas/PublishDomainJobCreateJob"
                    }
                }
            },
            "Job_TypeJob": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DuplicateApplicationJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/InstallTemplateJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/CreateSnapshotJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/RestoreSnapshotJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/AirtableImportJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/FileImportJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/DuplicateTableJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/DuplicateFieldJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/AuditLogExportJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/DuplicatePageJobJob"
                    },
                    {
                        "$ref": "#/components/schemas/PublishDomainJobJob"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "duplicate_application": "#/components/schemas/DuplicateApplicationJobJob",
                        "install_template": "#/components/schemas/InstallTemplateJobJob",
                        "create_snapshot": "#/components/schemas/CreateSnapshotJobJob",
                        "restore_snapshot": "#/components/schemas/RestoreSnapshotJobJob",
                        "airtable": "#/components/schemas/AirtableImportJobJob",
                        "file_import": "#/components/schemas/FileImportJobJob",
                        "duplicate_table": "#/components/schemas/DuplicateTableJobJob",
                        "duplicate_field": "#/components/schemas/DuplicateFieldJobJob",
                        "audit_log_export": "#/components/schemas/AuditLogExportJobJob",
                        "duplicate_page": "#/components/schemas/DuplicatePageJobJob",
                        "publish_domain": "#/components/schemas/PublishDomainJobJob"
                    }
                }
            },
            "KanbanViewCreateView": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/ViewTypesEnum"
                    },
                    "ownership_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OwnershipTypeEnum"
                            }
                        ],
                        "default": "collaborative"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "single_select_field": {
                        "type": "integer",
                        "nullable": true
                    },
                    "card_cover_image_field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "References a file field of which the first image must be shown as card cover image."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "name",
                    "slug",
                    "type"
                ]
            },
            "KanbanViewExampleResponse": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/KanbanViewExampleResponseStack"
                        },
                        "description": "Every select option related to the view's single select field can have its own entry like this."
                    },
                    "field_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KanbanViewFieldOptions"
                        }
                    },
                    "row_metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RowMetadata"
                        },
                        "description": "An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so."
                    }
                },
                "required": [
                    "field_options",
                    "rows"
                ]
            },
            "KanbanViewExampleResponseStack": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total count of rows that are included in this group."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponse"
                        },
                        "description": "All the rows that belong in this group related with the provided `limit` and `offset`."
                    }
                },
                "required": [
                    "count",
                    "results"
                ]
            },
            "KanbanViewFieldOptions": {
                "type": "object",
                "properties": {
                    "hidden": {
                        "type": "boolean",
                        "description": "Whether or not the field should be hidden in the card."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The order that the field has in the view. Lower value is first."
                    }
                }
            },
            "KanbanViewView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "table": {
                        "$ref": "#/components/schemas/Table"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilter"
                        }
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilterGroup"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewSort"
                        }
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewGroupBy"
                        }
                    },
                    "decorations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewDecoration"
                        }
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_has_password": {
                        "type": "boolean",
                        "description": "Indicates whether the public view is password protected or not.\n\n:return: True if the public view is password protected, False otherwise.",
                        "readOnly": true
                    },
                    "show_logo": {
                        "type": "boolean"
                    },
                    "ownership_type": {
                        "type": "string"
                    },
                    "owned_by_id": {
                        "type": "integer"
                    },
                    "single_select_field": {
                        "type": "integer",
                        "nullable": true
                    },
                    "card_cover_image_field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "References a file field of which the first image must be shown as card cover image."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "ownership_type",
                    "public_view_has_password",
                    "slug",
                    "table",
                    "table_id",
                    "type"
                ]
            },
            "LastModifiedByFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "LastModifiedByFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "LastModifiedByFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "LastModifiedByFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "LastModifiedFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_force_timezone_offset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('A UTC offset in minutes to add to all the field datetimes values.',)"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "LastModifiedFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "LastModifiedFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "LastModifiedFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "date_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            }
                        ],
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)"
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "description": "Indicates if the field also includes a time."
                    },
                    "date_time_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            }
                        ],
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour"
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "description": "Indicates if the timezone should be shown."
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_force_timezone_offset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('A UTC offset in minutes to add to all the field datetimes values.',)"
                    }
                }
            },
            "License": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "license_id": {
                        "type": "string",
                        "description": "Unique identifier of the license."
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Indicates if the backend deems the license valid."
                    },
                    "last_check": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "valid_from": {
                        "type": "string",
                        "format": "date-time",
                        "description": "From which timestamp the license becomes active."
                    },
                    "valid_through": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Until which timestamp the license is active."
                    },
                    "free_users_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The amount of free users that are currently using the license."
                    },
                    "seats_taken": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The amount of users that are currently using the license."
                    },
                    "seats": {
                        "type": "integer",
                        "description": "The maximum amount of users that can use the license."
                    },
                    "product_code": {
                        "type": "string",
                        "description": "The product code that indicates what the license unlocks."
                    },
                    "issued_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date when the license was issued. It could be that a new license is issued with the same `license_id` because it was updated. In that case, the one that has been issued last should be used."
                    },
                    "issued_to_email": {
                        "type": "string",
                        "format": "email",
                        "description": "Indicates to which email address the license has been issued."
                    },
                    "issued_to_name": {
                        "type": "string",
                        "description": "Indicates to whom the license has been issued."
                    }
                },
                "required": [
                    "free_users_count",
                    "id",
                    "is_active",
                    "issued_on",
                    "issued_to_email",
                    "issued_to_name",
                    "license_id",
                    "product_code",
                    "seats",
                    "seats_taken",
                    "valid_from",
                    "valid_through"
                ]
            },
            "LicenseUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    }
                },
                "required": [
                    "id"
                ]
            },
            "LicenseUserLookup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The name and the email address of the user.",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "LicenseWithUsers": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "license_id": {
                        "type": "string",
                        "description": "Unique identifier of the license."
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Indicates if the backend deems the license valid."
                    },
                    "last_check": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "valid_from": {
                        "type": "string",
                        "format": "date-time",
                        "description": "From which timestamp the license becomes active."
                    },
                    "valid_through": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Until which timestamp the license is active."
                    },
                    "free_users_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The amount of free users that are currently using the license."
                    },
                    "seats_taken": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The amount of users that are currently using the license."
                    },
                    "seats": {
                        "type": "integer",
                        "description": "The maximum amount of users that can use the license."
                    },
                    "product_code": {
                        "type": "string",
                        "description": "The product code that indicates what the license unlocks."
                    },
                    "issued_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date when the license was issued. It could be that a new license is issued with the same `license_id` because it was updated. In that case, the one that has been issued last should be used."
                    },
                    "issued_to_email": {
                        "type": "string",
                        "format": "email",
                        "description": "Indicates to which email address the license has been issued."
                    },
                    "issued_to_name": {
                        "type": "string",
                        "description": "Indicates to whom the license has been issued."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LicenseUser"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "free_users_count",
                    "id",
                    "is_active",
                    "issued_on",
                    "issued_to_email",
                    "issued_to_name",
                    "license_id",
                    "product_code",
                    "seats",
                    "seats_taken",
                    "users",
                    "valid_from",
                    "valid_through"
                ]
            },
            "LinkElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "navigation_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NavigationTypeEnum"
                            }
                        ],
                        "description": "The navigation type.\n\n* `page` - Page\n* `custom` - Custom"
                    },
                    "navigate_to_page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('Destination page id for this link. If null then we use the navigate_to_url property instead.',)"
                    },
                    "navigate_to_url": {
                        "type": "string",
                        "default": "",
                        "description": "If no page is selected, this indicate the destination of the link."
                    },
                    "page_parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageParameterValue"
                        },
                        "description": "The parameters for each parameters of the selected page if any."
                    },
                    "variant": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VariantEnum"
                            }
                        ],
                        "description": "The variant of the link.\n\n* `link` - Link\n* `button` - Button"
                    },
                    "target": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetEnum"
                            }
                        ],
                        "description": "The target of the link when we click on it.\n\n* `self` - Self\n* `blank` - Blank"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "LinkElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "navigation_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NavigationTypeEnum"
                            }
                        ],
                        "description": "The navigation type.\n\n* `page` - Page\n* `custom` - Custom"
                    },
                    "navigate_to_page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('Destination page id for this link. If null then we use the navigate_to_url property instead.',)"
                    },
                    "navigate_to_url": {
                        "type": "string",
                        "default": "",
                        "description": "If no page is selected, this indicate the destination of the link."
                    },
                    "page_parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageParameterValue"
                        },
                        "description": "The parameters for each parameters of the selected page if any."
                    },
                    "variant": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VariantEnum"
                            }
                        ],
                        "description": "The variant of the link.\n\n* `link` - Link\n* `button` - Button"
                    },
                    "target": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetEnum"
                            }
                        ],
                        "description": "The target of the link when we click on it.\n\n* `self` - Self\n* `blank` - Blank"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "LinkElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "navigation_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NavigationTypeEnum"
                            }
                        ],
                        "description": "The navigation type.\n\n* `page` - Page\n* `custom` - Custom"
                    },
                    "navigate_to_page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('Destination page id for this link. If null then we use the navigate_to_url property instead.',)"
                    },
                    "navigate_to_url": {
                        "type": "string",
                        "default": "",
                        "description": "If no page is selected, this indicate the destination of the link."
                    },
                    "page_parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageParameterValue"
                        },
                        "description": "The parameters for each parameters of the selected page if any."
                    },
                    "variant": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VariantEnum"
                            }
                        ],
                        "description": "The variant of the link.\n\n* `link` - Link\n* `button` - Button"
                    },
                    "target": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetEnum"
                            }
                        ],
                        "description": "The target of the link when we click on it.\n\n* `self` - Self\n* `blank` - Blank"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "LinkElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be an formula."
                    },
                    "navigation_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NavigationTypeEnum"
                            }
                        ],
                        "description": "The navigation type.\n\n* `page` - Page\n* `custom` - Custom"
                    },
                    "navigate_to_page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "('Destination page id for this link. If null then we use the navigate_to_url property instead.',)"
                    },
                    "navigate_to_url": {
                        "type": "string",
                        "default": "",
                        "description": "If no page is selected, this indicate the destination of the link."
                    },
                    "page_parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageParameterValue"
                        },
                        "description": "The parameters for each parameters of the selected page if any."
                    },
                    "variant": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VariantEnum"
                            }
                        ],
                        "description": "The variant of the link.\n\n* `link` - Link\n* `button` - Button"
                    },
                    "target": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetEnum"
                            }
                        ],
                        "description": "The target of the link when we click on it.\n\n* `self` - Self\n* `blank` - Blank"
                    },
                    "width": {
                        "$ref": "#/components/schemas/WidthEnum"
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                }
            },
            "LinkRowFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "link_row_table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the linked table."
                    },
                    "link_row_table": {
                        "type": "integer",
                        "nullable": true,
                        "description": "(Deprecated) The id of the linked table."
                    },
                    "has_related_field": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "LinkRowFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "link_row_table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the linked table."
                    },
                    "link_row_related_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the related field.",
                        "readOnly": true
                    },
                    "link_row_table": {
                        "type": "integer",
                        "nullable": true,
                        "description": "(Deprecated) The id of the linked table."
                    },
                    "link_row_related_field": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "(Deprecated) The id of the related field."
                    }
                },
                "required": [
                    "id",
                    "link_row_related_field",
                    "link_row_related_field_id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "LinkRowFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "link_row_table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the linked table."
                    },
                    "link_row_related_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the related field.",
                        "readOnly": true
                    },
                    "link_row_table": {
                        "type": "integer",
                        "nullable": true,
                        "description": "(Deprecated) The id of the linked table."
                    },
                    "link_row_related_field": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "(Deprecated) The id of the related field."
                    }
                },
                "required": [
                    "id",
                    "link_row_related_field",
                    "link_row_related_field_id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "LinkRowFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "link_row_table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the linked table."
                    },
                    "link_row_table": {
                        "type": "integer",
                        "nullable": true,
                        "description": "(Deprecated) The id of the linked table."
                    },
                    "has_related_field": {
                        "type": "boolean"
                    }
                }
            },
            "LinkRowValue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The unique identifier of the row in the related table."
                    },
                    "value": {
                        "type": "string",
                        "description": "The primary field's value as a string of the row in the related table."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "ListWorkspaceUsersWithMemberData": {
                "type": "object",
                "description": "Mixin to a DRF serializer class to raise an exception if data with unknown fields\nis provided to the serializer.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "User defined name."
                    },
                    "email": {
                        "type": "string",
                        "readOnly": true,
                        "description": "User email."
                    },
                    "group": {
                        "type": "integer",
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "type": "integer",
                        "description": "The workspace that the user has access to."
                    },
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user has within the workspace.",
                        "maxLength": 32
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "description": "The user that has access to the workspace.",
                        "readOnly": true
                    },
                    "to_be_deleted": {
                        "type": "boolean",
                        "description": "True if user account is pending deletion."
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceUserEnterpriseTeam"
                        },
                        "description": "Enterprise only: a list of team IDs and names, which this workspace user belongs to in this workspace."
                    },
                    "role_uid": {
                        "type": "string",
                        "nullable": true,
                        "description": "Enterprise or advanced only: the uid of the role that is assigned to this workspace user in this workspace."
                    },
                    "highest_role_uid": {
                        "type": "string",
                        "nullable": true,
                        "description": "Enterprise or advanced only: the highest role uid assigned to this user in this workspace on anything, including roles from teams."
                    }
                },
                "required": [
                    "created_on",
                    "email",
                    "group",
                    "id",
                    "name",
                    "to_be_deleted",
                    "user_id",
                    "workspace"
                ]
            },
            "LocalBaserowContextData": {
                "type": "object",
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DatabaseApplication"
                        }
                    }
                },
                "required": [
                    "databases"
                ]
            },
            "LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction": {
                "type": "object",
                "description": "Basic builder workflow action serializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the workflow action"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Integration_ServiceService"
                            }
                        ],
                        "description": "The service which this workflow action is associated with."
                    }
                },
                "required": [
                    "element_id",
                    "event",
                    "id",
                    "order",
                    "service",
                    "type"
                ]
            },
            "LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the element the workflow action is associated with"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Integration_Service"
                            }
                        ],
                        "description": "The service which this workflow action is associated with."
                    }
                },
                "required": [
                    "event",
                    "id",
                    "type"
                ]
            },
            "LocalBaserowCreateRowWorkflowActionUpdateBuilderWorkflowActions": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Integration_Service"
                            }
                        ],
                        "description": "The service which this workflow action is associated with."
                    }
                }
            },
            "LocalBaserowField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "table_id",
                    "type"
                ]
            },
            "LocalBaserowGetRow": {
                "type": "object",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                }
            },
            "LocalBaserowGetRowCreateDataSource": {
                "type": "object",
                "description": "This serializer allow to set the type of a data_source and the data_source id\nbefore which we want to insert the new data_source.",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeC03Enum"
                            }
                        ],
                        "description": "The type of the service.\n\n* `local_baserow_get_row` - local_baserow_get_row\n* `local_baserow_list_rows` - local_baserow_list_rows\n* `local_baserow_upsert_row` - local_baserow_upsert_row"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Page this data source is linked to."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the data_source before the data_source with the given id."
                    },
                    "row_id": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "row_id",
                    "table_id",
                    "view_id"
                ]
            },
            "LocalBaserowGetRowDataSource": {
                "type": "object",
                "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Data source id."
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The integration used to establish the connection with the service.",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the data source."
                    },
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The schema of the service."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Page this data source is linked to."
                    },
                    "order": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "row_id": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "id",
                    "integration_id",
                    "name",
                    "order",
                    "page_id",
                    "row_id",
                    "schema",
                    "table_id",
                    "type",
                    "view_id"
                ]
            },
            "LocalBaserowGetRowPublicDataSource": {
                "type": "object",
                "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Data source id."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the data source."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Page this data source is linked to."
                    },
                    "order": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "row_id": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "page_id",
                    "row_id",
                    "table_id",
                    "type",
                    "view_id"
                ]
            },
            "LocalBaserowGetRowService": {
                "type": "object",
                "description": "Basic service serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The integration used to establish the connection with the service.",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the service."
                    },
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The schema of the service."
                    },
                    "row_id": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "id",
                    "integration_id",
                    "row_id",
                    "schema",
                    "table_id",
                    "type",
                    "view_id"
                ]
            },
            "LocalBaserowGetRowUpdateDataSource": {
                "type": "object",
                "properties": {
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The related integration id."
                    },
                    "name": {
                        "type": "string"
                    },
                    "row_id": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "row_id",
                    "table_id",
                    "view_id"
                ]
            },
            "LocalBaserowIntegrationCreateIntegration": {
                "type": "object",
                "description": "This serializer allow to set the type of an integration and the integration id\nbefore which we want to insert the new integration.",
                "properties": {
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the integration before the integration with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type5f7Enum"
                            }
                        ],
                        "description": "The type of the integration.\n\n* `local_baserow` - local_baserow"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "context_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalBaserowContextData"
                            }
                        ],
                        "readOnly": true
                    },
                    "authorized_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectUser"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "authorized_user",
                    "context_data",
                    "name",
                    "type"
                ]
            },
            "LocalBaserowIntegrationIntegration": {
                "type": "object",
                "description": "Basic integration serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "application_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the integration."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "context_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalBaserowContextData"
                            }
                        ],
                        "readOnly": true
                    },
                    "authorized_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectUser"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "application_id",
                    "authorized_user",
                    "context_data",
                    "id",
                    "name",
                    "order",
                    "type"
                ]
            },
            "LocalBaserowIntegrationUpdateIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "context_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalBaserowContextData"
                            }
                        ],
                        "readOnly": true
                    },
                    "authorized_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectUser"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "authorized_user",
                    "context_data"
                ]
            },
            "LocalBaserowListRows": {
                "type": "object",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceSort"
                        }
                    }
                }
            },
            "LocalBaserowListRowsCreateDataSource": {
                "type": "object",
                "description": "This serializer allow to set the type of a data_source and the data_source id\nbefore which we want to insert the new data_source.",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeC03Enum"
                            }
                        ],
                        "description": "The type of the service.\n\n* `local_baserow_get_row` - local_baserow_get_row\n* `local_baserow_list_rows` - local_baserow_list_rows\n* `local_baserow_upsert_row` - local_baserow_upsert_row"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Page this data source is linked to."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the data_source before the data_source with the given id."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceSort"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "table_id",
                    "view_id"
                ]
            },
            "LocalBaserowListRowsDataSource": {
                "type": "object",
                "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Data source id."
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The integration used to establish the connection with the service.",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the data source."
                    },
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The schema of the service."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Page this data source is linked to."
                    },
                    "order": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceSort"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "id",
                    "integration_id",
                    "name",
                    "order",
                    "page_id",
                    "schema",
                    "table_id",
                    "type",
                    "view_id"
                ]
            },
            "LocalBaserowListRowsPublicDataSource": {
                "type": "object",
                "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Data source id."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the data source."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Page this data source is linked to."
                    },
                    "order": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceSort"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "page_id",
                    "table_id",
                    "type",
                    "view_id"
                ]
            },
            "LocalBaserowListRowsService": {
                "type": "object",
                "description": "Basic service serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The integration used to establish the connection with the service.",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the service."
                    },
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The schema of the service."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceSort"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "id",
                    "integration_id",
                    "schema",
                    "table_id",
                    "type",
                    "view_id"
                ]
            },
            "LocalBaserowListRowsUpdateDataSource": {
                "type": "object",
                "properties": {
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The related integration id."
                    },
                    "name": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "view_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "search_query": {
                        "type": "string",
                        "description": "The query to apply to the service to narrow the results down.",
                        "maxLength": 225
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceSort"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFilter"
                        }
                    }
                },
                "required": [
                    "table_id",
                    "view_id"
                ]
            },
            "LocalBaserowPasswordAppAuthProviderAppAuthProvider": {
                "type": "object",
                "description": "Basic app_auth_provider serializer mostly for returned values.",
                "properties": {
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the app_auth_provider."
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "password_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field to use as password for the user account."
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider": {
                "type": "object",
                "description": "This serializer allow to set the type of an app_auth_provider and the\napp_auth_provider id before which we want to insert the new app_auth_provider.",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProviderTypeEnum"
                            }
                        ],
                        "description": "The type of the app_auth_provider.\n\n* `local_baserow_password` - local_baserow_password"
                    },
                    "user_source_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "password_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field to use as password for the user account."
                    }
                },
                "required": [
                    "type",
                    "user_source_id"
                ]
            },
            "LocalBaserowPasswordAppAuthProviderBaseAppAuthProviderTypeEnum": {
                "enum": [
                    "local_baserow_password"
                ],
                "type": "string",
                "description": "* `local_baserow_password` - local_baserow_password"
            },
            "LocalBaserowTableServiceFieldMapping": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "integer",
                        "description": "The primary key of the associated database table field."
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "field_id",
                    "value"
                ]
            },
            "LocalBaserowTableServiceFilter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "field": {
                        "type": "integer",
                        "description": "The database Field, in the LocalBaserowTableService, which we would like to filter upon."
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).",
                        "maxLength": 48
                    },
                    "value": {
                        "type": "string",
                        "description": "A formula for the filter's value."
                    }
                },
                "required": [
                    "field",
                    "id",
                    "order",
                    "type",
                    "value"
                ]
            },
            "LocalBaserowTableServiceSort": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "field": {
                        "type": "integer",
                        "description": "The database Field, in the LocalBaserowTableService service, which we would like to sort upon."
                    },
                    "order": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderByEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    }
                },
                "required": [
                    "field",
                    "id",
                    "order"
                ]
            },
            "LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction": {
                "type": "object",
                "description": "Basic builder workflow action serializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the workflow action"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Integration_ServiceService"
                            }
                        ],
                        "description": "The service which this workflow action is associated with."
                    }
                },
                "required": [
                    "element_id",
                    "event",
                    "id",
                    "order",
                    "service",
                    "type"
                ]
            },
            "LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the element the workflow action is associated with"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Integration_Service"
                            }
                        ],
                        "description": "The service which this workflow action is associated with."
                    }
                },
                "required": [
                    "event",
                    "id",
                    "type"
                ]
            },
            "LocalBaserowUpdateRowWorkflowActionUpdateBuilderWorkflowActions": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Integration_Service"
                            }
                        ],
                        "description": "The service which this workflow action is associated with."
                    }
                }
            },
            "LocalBaserowUpsertRow": {
                "type": "object",
                "properties": {
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow integration we want the data for."
                    },
                    "row_id": {
                        "type": "string",
                        "description": "A formula for defining the intended row."
                    },
                    "field_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
                        },
                        "description": "The field mapping associated with this service."
                    }
                }
            },
            "LocalBaserowUpsertRowCreateDataSource": {
                "type": "object",
                "description": "This serializer allow to set the type of a data_source and the data_source id\nbefore which we want to insert the new data_source.",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeC03Enum"
                            }
                        ],
                        "description": "The type of the service.\n\n* `local_baserow_get_row` - local_baserow_get_row\n* `local_baserow_list_rows` - local_baserow_list_rows\n* `local_baserow_upsert_row` - local_baserow_upsert_row"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Page this data source is linked to."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the data_source before the data_source with the given id."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "row_id": {
                        "type": "string",
                        "description": "A formula for defining the intended row."
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow integration we want the data for."
                    },
                    "field_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
                        },
                        "description": "The field mapping associated with this service."
                    }
                }
            },
            "LocalBaserowUpsertRowDataSource": {
                "type": "object",
                "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Data source id."
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow integration we want the data for."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the data source."
                    },
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The schema of the service."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Page this data source is linked to."
                    },
                    "order": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "row_id": {
                        "type": "string",
                        "description": "A formula for defining the intended row."
                    },
                    "field_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
                        },
                        "description": "The field mapping associated with this service."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "page_id",
                    "schema",
                    "type"
                ]
            },
            "LocalBaserowUpsertRowPublicDataSource": {
                "type": "object",
                "description": "Basic data_source serializer mostly for returned values. This serializer flatten the\nservice properties so that from an API POV the data_source object only exists.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Data source id."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the data source."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Human name for this data source."
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Page this data source is linked to."
                    },
                    "order": {
                        "type": "number",
                        "format": "float",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "row_id": {
                        "type": "string",
                        "description": "A formula for defining the intended row."
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow integration we want the data for."
                    },
                    "field_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
                        },
                        "description": "The field mapping associated with this service."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "page_id",
                    "type"
                ]
            },
            "LocalBaserowUpsertRowService": {
                "type": "object",
                "description": "Basic service serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow integration we want the data for."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the service."
                    },
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The schema of the service."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "row_id": {
                        "type": "string",
                        "description": "A formula for defining the intended row."
                    },
                    "field_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
                        },
                        "description": "The field mapping associated with this service."
                    }
                },
                "required": [
                    "id",
                    "schema",
                    "type"
                ]
            },
            "LocalBaserowUpsertRowUpdateDataSource": {
                "type": "object",
                "properties": {
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow integration we want the data for."
                    },
                    "name": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "row_id": {
                        "type": "string",
                        "description": "A formula for defining the intended row."
                    },
                    "field_mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
                        },
                        "description": "The field mapping associated with this service."
                    }
                }
            },
            "LocalBaserowUserSourceCreateUserSource": {
                "type": "object",
                "description": "This serializer allow to set the type of an user_source and the user_source id\nbefore which we want to insert the new user_source.",
                "properties": {
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the user_source before the user_source with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type5f7Enum"
                            }
                        ],
                        "description": "The type of the user_source.\n\n* `local_baserow` - local_baserow"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "integration_id": {
                        "type": "integer",
                        "description": "The related integration id."
                    },
                    "auth_providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App_Auth_ProviderBaseAppAuthProvider"
                        },
                        "description": "Auth providers related to this user source."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "email_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field to use as email for the user account."
                    },
                    "name_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field that contains the user name."
                    }
                },
                "required": [
                    "integration_id",
                    "name",
                    "type"
                ]
            },
            "LocalBaserowUserSourceUpdateUserSource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "integration_id": {
                        "type": "integer",
                        "description": "The related integration id."
                    },
                    "auth_providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App_Auth_ProviderBaseAppAuthProvider"
                        },
                        "description": "Auth providers related to this user source."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "email_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field to use as email for the user account."
                    },
                    "name_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field that contains the user name."
                    }
                }
            },
            "LocalBaserowUserSourceUserSource": {
                "type": "object",
                "description": "Basic user_source serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "application_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "integration_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The Integration used to establish the connection with the service.",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the user_source."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "auth_providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App_Auth_ProviderAppAuthProvider"
                        },
                        "description": "Auth providers related to this user source."
                    },
                    "table_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the Baserow table we want the data for."
                    },
                    "email_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field to use as email for the user account."
                    },
                    "name_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field that contains the user name."
                    }
                },
                "required": [
                    "application_id",
                    "id",
                    "integration_id",
                    "name",
                    "order",
                    "type"
                ]
            },
            "LocalBaserowView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "table_id"
                ]
            },
            "LongTextFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "LongTextFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "LongTextFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "LongTextFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "LookupFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to lookup values for. Will override the `through_field_name` parameter if both are provided, however only one is required."
                    },
                    "through_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the link row field to lookup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to lookup. Will override the `target_field_id` parameter if both are provided, however only one is required."
                    },
                    "target_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the field in the table linked to by the through_field to lookup."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "name",
                    "nullable",
                    "type"
                ]
            },
            "LookupFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to lookup values for. Will override the `through_field_name` parameter if both are provided, however only one is required."
                    },
                    "through_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the link row field to lookup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to lookup. Will override the `target_field_id` parameter if both are provided, however only one is required."
                    },
                    "target_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the field in the table linked to by the through_field to lookup."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "LookupFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to lookup values for. Will override the `through_field_name` parameter if both are provided, however only one is required."
                    },
                    "through_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the link row field to lookup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to lookup. Will override the `target_field_id` parameter if both are provided, however only one is required."
                    },
                    "target_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the field in the table linked to by the through_field to lookup."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "LookupFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to lookup values for. Will override the `through_field_name` parameter if both are provided, however only one is required."
                    },
                    "through_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the link row field to lookup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to lookup. Will override the `target_field_id` parameter if both are provided, however only one is required."
                    },
                    "target_field_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the field in the table linked to by the through_field to lookup."
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "nullable"
                ]
            },
            "ModeC5eEnum": {
                "enum": [
                    "form",
                    "survey"
                ],
                "type": "string",
                "description": "* `form` - form\n* `survey` - survey"
            },
            "ModeFf8Enum": {
                "enum": [
                    "all",
                    "mentions"
                ],
                "type": "string",
                "description": "* `all` - all\n* `mentions` - mentions"
            },
            "MultipleCollaboratorsFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "notify_user_when_added": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "MultipleCollaboratorsFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "notify_user_when_added": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "MultipleCollaboratorsFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "notify_user_when_added": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "MultipleCollaboratorsFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "notify_user_when_added": {
                        "type": "boolean"
                    }
                }
            },
            "MultipleSelectFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "MultipleSelectFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "MultipleSelectFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "MultipleSelectFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                }
            },
            "NavigationTypeEnum": {
                "enum": [
                    "page",
                    "custom"
                ],
                "type": "string",
                "description": "* `page` - Page\n* `custom` - Custom"
            },
            "NotificationRecipient": {
                "type": "object",
                "description": "Serialize notification data along with the recipient information about the\nread status for the given user.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the notification."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of notification"
                    },
                    "sender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Sender"
                            }
                        ],
                        "description": "The user that sent the notification."
                    },
                    "workspace": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The workspace that the notification is in (if any)."
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time that the notification was created."
                    },
                    "read": {
                        "type": "boolean",
                        "description": "If True, then the notification has been read by the user. "
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The data associated with the notification."
                    }
                },
                "required": [
                    "created_on",
                    "data",
                    "id",
                    "sender",
                    "type",
                    "workspace"
                ]
            },
            "NotificationWorkflowActionBuilderWorkflowAction": {
                "type": "object",
                "description": "Basic builder workflow action serializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the workflow action"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "title": {
                        "type": "string",
                        "default": "",
                        "description": "The title of the notification. Must be an formula."
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "The description of the notification. Must be an formula."
                    }
                },
                "required": [
                    "element_id",
                    "event",
                    "id",
                    "order",
                    "type"
                ]
            },
            "NotificationWorkflowActionCreateBuilderWorkflowAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the element the workflow action is associated with"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "title": {
                        "type": "string",
                        "default": "",
                        "description": "The title of the notification. Must be an formula."
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "The description of the notification. Must be an formula."
                    }
                },
                "required": [
                    "event",
                    "id",
                    "type"
                ]
            },
            "NotificationWorkflowActionUpdateBuilderWorkflowActions": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "title": {
                        "type": "string",
                        "default": "",
                        "description": "The title of the notification. Must be an formula."
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "The description of the notification. Must be an formula."
                    }
                }
            },
            "NullEnum": {
                "enum": [
                    null
                ]
            },
            "NumberDecimalPlacesEnum": {
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                "type": "integer",
                "description": "* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000"
            },
            "NumberFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            }
                        ],
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "number_negative": {
                        "type": "boolean",
                        "description": "Indicates if negative values are allowed."
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "NumberFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "number_decimal_places": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            }
                        ],
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "number_negative": {
                        "type": "boolean",
                        "description": "Indicates if negative values are allowed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "NumberFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "number_decimal_places": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            }
                        ],
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "number_negative": {
                        "type": "boolean",
                        "description": "Indicates if negative values are allowed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "NumberFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            }
                        ],
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "number_negative": {
                        "type": "boolean",
                        "description": "Indicates if negative values are allowed."
                    }
                }
            },
            "OpenApiRoleAssignment": {
                "type": "object",
                "description": "Serializer for RoleAssignment used for the Open API spec",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "type": "string",
                        "description": "The uid of the role assigned to the user or team in the given workspace."
                    },
                    "subject": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OpenApiSubjectField"
                            }
                        ],
                        "description": "The structure of the subject field depends on the subject typereturned and will have additional fields accordingly"
                    },
                    "subject_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "The subject ID."
                    },
                    "scope_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "The unique scope ID."
                    },
                    "subject_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectType6dcEnum"
                            }
                        ],
                        "description": "The subject type.\n\n* `auth.User` - auth.User\n* `anonymous` - anonymous\n* `core.Token` - core.Token\n* `baserow_enterprise.Team` - baserow_enterprise.Team"
                    },
                    "scope_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScopeTypeEnum"
                            }
                        ],
                        "description": "The type of the scope object. The scope object limit the role assignment to this scope and all its descendants.\n\n* `core` - core\n* `application` - application\n* `workspace` - workspace\n* `workspace_invitation` - workspace_invitation\n* `snapshot` - snapshot\n* `workspace_user` - workspace_user\n* `integration` - integration\n* `user_source` - user_source\n* `database` - database\n* `database_table` - database_table\n* `database_field` - database_field\n* `database_view` - database_view\n* `database_view_decoration` - database_view_decoration\n* `database_view_sort` - database_view_sort\n* `database_view_group` - database_view_group\n* `database_view_filter` - database_view_filter\n* `database_view_filter_group` - database_view_filter_group\n* `token` - token\n* `team` - team\n* `team_subject` - team_subject\n* `builder` - builder\n* `builder_page` - builder_page\n* `builder_element` - builder_element\n* `builder_domain` - builder_domain\n* `builder_data_source` - builder_data_source\n* `builder_workflow_action` - builder_workflow_action\n* `license` - license"
                    }
                },
                "required": [
                    "id",
                    "role",
                    "scope_id",
                    "scope_type",
                    "subject",
                    "subject_id",
                    "subject_type"
                ]
            },
            "OpenApiSubjectField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "OpenIdConnectAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "base_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Base URL of the authorization server",
                        "maxLength": 200
                    },
                    "client_id": {
                        "type": "string",
                        "description": "App ID, or consumer key",
                        "maxLength": 191
                    },
                    "secret": {
                        "type": "string",
                        "description": "API secret, client secret, or consumer secret",
                        "maxLength": 191
                    }
                },
                "required": [
                    "base_url",
                    "client_id",
                    "id",
                    "name",
                    "secret",
                    "type"
                ]
            },
            "OpenPageWorkflowActionBuilderWorkflowAction": {
                "type": "object",
                "description": "Basic builder workflow action serializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the workflow action"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "The url to open. Must be an formula."
                    }
                },
                "required": [
                    "element_id",
                    "event",
                    "id",
                    "order",
                    "type"
                ]
            },
            "OpenPageWorkflowActionCreateBuilderWorkflowAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the element the workflow action is associated with"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "The url to open. Must be an formula."
                    }
                },
                "required": [
                    "event",
                    "id",
                    "type"
                ]
            },
            "OpenPageWorkflowActionUpdateBuilderWorkflowActions": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type3a0Enum"
                            }
                        ],
                        "description": "The type of the workflow action\n\n* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
                    },
                    "url": {
                        "type": "string",
                        "default": "",
                        "description": "The url to open. Must be an formula."
                    }
                }
            },
            "OrderApplications": {
                "type": "object",
                "properties": {
                    "application_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Application ids in the desired order."
                    }
                },
                "required": [
                    "application_ids"
                ]
            },
            "OrderByEnum": {
                "enum": [
                    "ASC",
                    "DESC"
                ],
                "type": "string",
                "description": "* `ASC` - Ascending\n* `DESC` - Descending"
            },
            "OrderDomains": {
                "type": "object",
                "properties": {
                    "domain_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The ids of the domains in the order they are supposed to be set in"
                    }
                },
                "required": [
                    "domain_ids"
                ]
            },
            "OrderEnum": {
                "enum": [
                    "ASC",
                    "DESC"
                ],
                "type": "string",
                "description": "* `ASC` - Ascending\n* `DESC` - Descending"
            },
            "OrderPages": {
                "type": "object",
                "properties": {
                    "page_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The ids of the pages in the order they are supposed to be set in"
                    }
                },
                "required": [
                    "page_ids"
                ]
            },
            "OrderTables": {
                "type": "object",
                "properties": {
                    "table_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Table ids in the desired order."
                    }
                },
                "required": [
                    "table_ids"
                ]
            },
            "OrderViews": {
                "type": "object",
                "properties": {
                    "view_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "View ids in the desired order.",
                        "minItems": 1
                    }
                },
                "required": [
                    "view_ids"
                ]
            },
            "OrderWorkflowActions": {
                "type": "object",
                "properties": {
                    "workflow_action_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The ids of the workflow actions in the order they are supposed to be set in"
                    },
                    "element_id": {
                        "type": "integer",
                        "description": "The element the workflow actions belong to"
                    }
                },
                "required": [
                    "workflow_action_ids"
                ]
            },
            "OrderWorkspaces": {
                "type": "object",
                "properties": {
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Workspace ids in the desired order."
                    }
                },
                "required": [
                    "workspaces"
                ]
            },
            "OwnershipTypeEnum": {
                "enum": [
                    "collaborative",
                    "personal"
                ],
                "type": "string",
                "description": "* `collaborative` - collaborative\n* `personal` - personal"
            },
            "Page": {
                "type": "object",
                "description": "👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicPageSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path_params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PathParam"
                        }
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "builder_id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "builder_id",
                    "id",
                    "name",
                    "order",
                    "path"
                ]
            },
            "PageParameterValue": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "PaginationSerializerAuditLog": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLog"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerAuditLogUser": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogUser"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerAuditLogWorkspace": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogWorkspace"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerExampleRowResponseSerializerWithUserFieldNames": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerLicenseUserLookup": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LicenseUserLookup"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerLinkRowValue": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkRowValue"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerNotificationRecipient": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationRecipient"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerRowComment": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RowComment"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerRowHistory": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RowHistory"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerTrashContents": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrashContents"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerUserAdminResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAdminResponse"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GalleryViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    },
                    "row_metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RowMetadata"
                        },
                        "description": "An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so."
                    },
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponse"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerWithGridViewFieldOptionsExampleRowResponse": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GridViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    },
                    "row_metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RowMetadata"
                        },
                        "description": "An object keyed by row id with a value being an object containing additional metadata about that row. A row might not have metadata and will not be present as a key if so."
                    },
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponse"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PaginationSerializerWorkspacesAdminResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspacesAdminResponse"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PasswordAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "description": "The email domain (if any) registered with this password provider."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the provider is enabled or not."
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "PatchedAccount": {
                "type": "object",
                "description": "This serializer must be kept in sync with `UserSerializer`.",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 2
                    },
                    "language": {
                        "type": "string",
                        "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB.",
                        "maxLength": 10,
                        "minLength": 2
                    },
                    "email_notification_frequency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmailNotificationFrequencyEnum"
                            }
                        ],
                        "description": "The maximum frequency at which the user wants to receive email notifications.\n\n* `instant` - instant\n* `daily` - daily\n* `weekly` - weekly\n* `never` - never"
                    }
                }
            },
            "PatchedApplicationUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    }
                }
            },
            "PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/NotificationWorkflowActionUpdateBuilderWorkflowActions"
                    },
                    {
                        "$ref": "#/components/schemas/OpenPageWorkflowActionUpdateBuilderWorkflowActions"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowCreateRowWorkflowActionUpdateBuilderWorkflowActions"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionUpdateBuilderWorkflowActions"
                    }
                ]
            },
            "PatchedCombinedThemeConfigBlocks": {
                "type": "object",
                "properties": {
                    "primary_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "secondary_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "border_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "heading_1_font_size": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768
                    },
                    "heading_1_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "heading_2_font_size": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768
                    },
                    "heading_2_color": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "heading_3_font_size": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768
                    },
                    "heading_3_color": {
                        "type": "string",
                        "maxLength": 9
                    }
                }
            },
            "PatchedDecorator_Value_Provider_TypeUpdateViewDecoration": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration"
                    },
                    {
                        "$ref": "#/components/schemas/GeneratedConditional_colorUpdateViewDecoration"
                    }
                ],
                "discriminator": {
                    "propertyName": "value_provider_type",
                    "mapping": {
                        "single_select_color": "#/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration",
                        "conditional_color": "#/components/schemas/GeneratedConditional_colorUpdateViewDecoration"
                    }
                }
            },
            "PatchedElement_TypeUpdateElement": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/HeadingElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/TextElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/LinkElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/ImageElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/InputTextElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/ColumnElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/ButtonElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/TableElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/FormContainerElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/DropdownElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/CheckboxElementUpdateElement"
                    },
                    {
                        "$ref": "#/components/schemas/IFrameElementUpdateElement"
                    }
                ]
            },
            "PatchedExampleBatchUpdateRowsRequest": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleBatchUpdateRowRequestSerializerWithUserFieldNames"
                        },
                        "maxItems": 200,
                        "minItems": 1
                    }
                }
            },
            "PatchedExampleUpdateRowRequestSerializerWithUserFieldNames": {
                "type": "object",
                "properties": {
                    "field_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `text` field. The number in field_1 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `long_text` field. The number in field_2 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_3": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `url` field. The number in field_3 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_4": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `email` field. The number in field_4 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 254
                    },
                    "field_5": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,50}(?:\\.\\d{0,0})?$",
                        "nullable": true,
                        "description": "This field represents the `number` field. The number in field_5 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_6": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 0,
                        "default": 0,
                        "description": "This field represents the `rating` field. The number in field_6 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_7": {
                        "type": "boolean",
                        "default": false,
                        "description": "This field represents the `boolean` field. The number in field_7 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_8": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "This field represents the `date` field. The number in field_8 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. "
                    },
                    "field_13": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "This field represents the `duration` field. The number in field_13 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. The provided value can be a string in one of the available formats or a number representing the duration in seconds. In any case, the value will be rounded to match the field's duration format."
                    },
                    "field_14": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        },
                        "description": "This field represents the `link_row` field. The number in field_14 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing the ids or the names of the related rows. A name is the value of the primary key of the related row. This field also accepts a string with names separated by a comma. The response contains a list of objects containing the `id` and the primary field's `value` as a string for display purposes."
                    },
                    "field_15": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileFieldRequest"
                        },
                        "nullable": true,
                        "description": "This field represents the `file` field. The number in field_15 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `array` containing objects with the name of the file. The response contains an `array` of more detailed objects related to the files."
                    },
                    "field_16": {
                        "type": "integer",
                        "nullable": true,
                        "description": "This field represents the `single_select` field. The number in field_16 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_17": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true,
                            "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                        },
                        "description": "This field represents the `multiple_select` field. The number in field_17 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of `integer` each of which representing the chosen select option id related to the field. Available ids can be foundwhen getting or listing the field. You can also send a list of option names in which case the option are searched by name. The first one that matches is used. This field also accepts a string with names separated by a comma. The response represents chosen field, but also the value and color is exposed."
                    },
                    "field_18": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field represents the `phone_number` field. The number in field_18 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. ",
                        "maxLength": 100
                    },
                    "field_23": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collaborator"
                        },
                        "description": "This field represents the `multiple_collaborators` field. The number in field_23 is in a normal request or response the id of the field. If the GET parameter `user_field_names` is provided then the key will instead be the actual name of the field. This field accepts a list of objects representing the chosen collaborators through the object's `id` property. The id is Baserow user id. The response objects also contains the collaborator name directly along with its id."
                    }
                }
            },
            "PatchedFieldUpdateField": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TextFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/LongTextFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/URLFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/EmailFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/NumberFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/RatingFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/BooleanFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/DateFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/LastModifiedByFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedOnFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/CreatedByFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/DurationFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/LinkRowFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/FileFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/SingleSelectFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleSelectFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/PhoneNumberFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/FormulaFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/CountFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/RollupFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/LookupFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/MultipleCollaboratorsFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/UUIDFieldUpdateField"
                    },
                    {
                        "$ref": "#/components/schemas/AutonumberFieldUpdateField"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "text": "#/components/schemas/TextFieldUpdateField",
                        "long_text": "#/components/schemas/LongTextFieldUpdateField",
                        "url": "#/components/schemas/URLFieldUpdateField",
                        "email": "#/components/schemas/EmailFieldUpdateField",
                        "number": "#/components/schemas/NumberFieldUpdateField",
                        "rating": "#/components/schemas/RatingFieldUpdateField",
                        "boolean": "#/components/schemas/BooleanFieldUpdateField",
                        "date": "#/components/schemas/DateFieldUpdateField",
                        "last_modified": "#/components/schemas/LastModifiedFieldUpdateField",
                        "last_modified_by": "#/components/schemas/LastModifiedByFieldUpdateField",
                        "created_on": "#/components/schemas/CreatedOnFieldUpdateField",
                        "created_by": "#/components/schemas/CreatedByFieldUpdateField",
                        "duration": "#/components/schemas/DurationFieldUpdateField",
                        "link_row": "#/components/schemas/LinkRowFieldUpdateField",
                        "file": "#/components/schemas/FileFieldUpdateField",
                        "single_select": "#/components/schemas/SingleSelectFieldUpdateField",
                        "multiple_select": "#/components/schemas/MultipleSelectFieldUpdateField",
                        "phone_number": "#/components/schemas/PhoneNumberFieldUpdateField",
                        "formula": "#/components/schemas/FormulaFieldUpdateField",
                        "count": "#/components/schemas/CountFieldUpdateField",
                        "rollup": "#/components/schemas/RollupFieldUpdateField",
                        "lookup": "#/components/schemas/LookupFieldUpdateField",
                        "multiple_collaborators": "#/components/schemas/MultipleCollaboratorsFieldUpdateField",
                        "uuid": "#/components/schemas/UUIDFieldUpdateField",
                        "autonumber": "#/components/schemas/AutonumberFieldUpdateField"
                    }
                }
            },
            "PatchedIntegrationUpdateIntegration": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowIntegrationUpdateIntegration"
                    }
                ]
            },
            "PatchedIntegration_ServiceUpdateDataSource": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowGetRowUpdateDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowListRowsUpdateDataSource"
                    },
                    {
                        "$ref": "#/components/schemas/LocalBaserowUpsertRowUpdateDataSource"
                    }
                ]
            },
            "PatchedMoveDataSource": {
                "type": "object",
                "properties": {
                    "before_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, the data_source is moved before the data_source with this Id. Otherwise the data_source is placed  last for this page."
                    }
                }
            },
            "PatchedMoveElement": {
                "type": "object",
                "properties": {
                    "before_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, the element is moved before the element with this Id. Otherwise the element is placed at the end of the page."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, the element is moved as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container."
                    }
                }
            },
            "PatchedMoveIntegration": {
                "type": "object",
                "properties": {
                    "before_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, the integration is moved before the integration with this Id. Otherwise the integration is placed at the end of the page."
                    }
                }
            },
            "PatchedMoveUserSource": {
                "type": "object",
                "description": "Serializer used when moving a user source.",
                "properties": {
                    "before_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, the user_source is moved before the user_source with this Id. Otherwise the user_source is placed at the end of the page."
                    }
                }
            },
            "PatchedSettings": {
                "type": "object",
                "properties": {
                    "allow_new_signups": {
                        "type": "boolean",
                        "description": "Indicates whether new users can create a new account when signing up."
                    },
                    "allow_signups_via_workspace_invitations": {
                        "type": "boolean",
                        "description": "Indicates whether invited users can create an account when signing up, even if allow_new_signups is disabled."
                    },
                    "allow_signups_via_group_invitations": {
                        "type": "boolean",
                        "description": "DEPRECATED: Please use the functionally identical `allow_signups_via_workspace_invitations` instead as this attribute is being removed in the future."
                    },
                    "allow_reset_password": {
                        "type": "boolean",
                        "description": "Indicates whether users can request a password reset link."
                    },
                    "allow_global_workspace_creation": {
                        "type": "boolean",
                        "description": "Indicates whether all users can create workspaces, or just staff."
                    },
                    "allow_global_group_creation": {
                        "type": "boolean",
                        "description": "DEPRECATED: Please use the functionally identical `allow_global_workspace_creation` instead as this attribute is being removed in the future."
                    },
                    "account_deletion_grace_delay": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "description": "Number of days after the last login for an account pending deletion to be deleted"
                    },
                    "show_admin_signup_page": {
                        "type": "boolean",
                        "description": "Indicates that there are no admin users in the database yet, so in the frontend the signup form will be shown instead of the login page."
                    },
                    "track_workspace_usage": {
                        "type": "boolean",
                        "description": "Runs a job once per day which calculates per workspace row counts and file storage usage, displayed on the admin workspace page."
                    }
                }
            },
            "PatchedTableUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PatchedTableWebhookUpdateRequest": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL that must be called when the webhook is triggered.",
                        "maxLength": 2000
                    },
                    "include_all_events": {
                        "type": "boolean",
                        "description": "Indicates whether this webhook should listen to all events."
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventTypesEnum"
                        },
                        "description": "A list containing the events that will trigger this webhook."
                    },
                    "request_method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestMethodEnum"
                            }
                        ],
                        "description": "The request method that be used when the event occurs.\n\n* `POST` - Post\n* `GET` - Get\n* `PUT` - Put\n* `PATCH` - Patch\n* `DELETE` - Delete"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The additional headers as an object where the key is the name and the value the value."
                    },
                    "name": {
                        "type": "string",
                        "description": "An internal name of the webhook.",
                        "maxLength": 255
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Indicates whether the web hook is active. When a webhook has failed multiple times, it will automatically be deactivated."
                    },
                    "use_user_field_names": {
                        "type": "boolean",
                        "description": "Indicates whether the field names must be used as payload key instead of the id."
                    }
                }
            },
            "PatchedTokenUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The human readable name of the database token for the user.",
                        "maxLength": 100
                    },
                    "permissions": {
                        "type": "object",
                        "description": "Indicates per operation which permissions the database token has within the whole workspace. If the value of for example `create` is `true`, then the token can create rows in all tables related to the workspace. If a list is provided with for example `[[\"table\", 1]]` then the token only has create permissions for the table with id 1. Same goes for if a database references is provided. `[['database', 1]]` means create permissions for all tables in the database with id 1.\n\nExample:\n```json\n{\n  \"create\": true// Allows creating rows in all tables.\n  // Allows reading rows from database 1 and table 10.\n  \"read\": [[\"database\", 1], [\"table\", 10]],\n  \"update\": false  // Denies updating rows in all tables.\n  \"delete\": []  // Denies deleting rows in all tables.\n }\n```",
                        "properties": {
                            "create": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            },
                            "read": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            },
                            "update": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            },
                            "delete": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "rotate_key": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates if a new key must be generated."
                    }
                }
            },
            "PatchedTrashEntryRequest": {
                "type": "object",
                "description": "Mixin to a DRF serializer class to raise an exception if data with unknown fields\nis provided to the serializer.",
                "properties": {
                    "trash_item_id": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "parent_trash_item_id": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true
                    },
                    "trash_item_type": {
                        "$ref": "#/components/schemas/TrashItemTypeEnum"
                    }
                }
            },
            "PatchedUndoRedoRequest": {
                "type": "object",
                "properties": {
                    "scopes": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActionScopes"
                            }
                        ],
                        "description": "A JSON object with keys and values representing the various action scopes to include when undoing or redoing. Every action in Baserow will be associated with a action scope, when undoing/redoing only actions which match any of the provided scope key:value pairs will included when this endpoint picks the next action to undo/redo. If no scopes are provided then all actions performed in the client session will be included when undoing/redoing."
                    }
                }
            },
            "PatchedUpdateDomain": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type0a6Enum"
                            }
                        ],
                        "description": "The type of the domain.\n\n* `custom` - custom\n* `sub_domain` - sub_domain"
                    },
                    "domain_name": {
                        "type": "string"
                    }
                }
            },
            "PatchedUpdatePage": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path_params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PathParam"
                        }
                    }
                }
            },
            "PatchedUpdatePremiumViewAttributes": {
                "type": "object",
                "properties": {
                    "show_logo": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedUpdateViewFilter": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "integer",
                        "description": "The field of which the value must be compared to the filter value."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type880Enum"
                            }
                        ],
                        "description": "Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).\n\n* `equal` - equal\n* `not_equal` - not_equal\n* `filename_contains` - filename_contains\n* `files_lower_than` - files_lower_than\n* `has_file_type` - has_file_type\n* `contains` - contains\n* `contains_not` - contains_not\n* `contains_word` - contains_word\n* `doesnt_contain_word` - doesnt_contain_word\n* `length_is_lower_than` - length_is_lower_than\n* `higher_than` - higher_than\n* `lower_than` - lower_than\n* `is_even_and_whole` - is_even_and_whole\n* `date_equal` - date_equal\n* `date_before` - date_before\n* `date_before_or_equal` - date_before_or_equal\n* `date_after_days_ago` - date_after_days_ago\n* `date_after` - date_after\n* `date_after_or_equal` - date_after_or_equal\n* `date_not_equal` - date_not_equal\n* `date_equals_today` - date_equals_today\n* `date_before_today` - date_before_today\n* `date_after_today` - date_after_today\n* `date_within_days` - date_within_days\n* `date_within_weeks` - date_within_weeks\n* `date_within_months` - date_within_months\n* `date_equals_days_ago` - date_equals_days_ago\n* `date_equals_months_ago` - date_equals_months_ago\n* `date_equals_years_ago` - date_equals_years_ago\n* `date_equals_week` - date_equals_week\n* `date_equals_month` - date_equals_month\n* `date_equals_day_of_month` - date_equals_day_of_month\n* `date_equals_year` - date_equals_year\n* `single_select_equal` - single_select_equal\n* `single_select_not_equal` - single_select_not_equal\n* `link_row_has` - link_row_has\n* `link_row_has_not` - link_row_has_not\n* `link_row_contains` - link_row_contains\n* `link_row_not_contains` - link_row_not_contains\n* `boolean` - boolean\n* `empty` - empty\n* `not_empty` - not_empty\n* `multiple_select_has` - multiple_select_has\n* `multiple_select_has_not` - multiple_select_has_not\n* `multiple_collaborators_has` - multiple_collaborators_has\n* `multiple_collaborators_has_not` - multiple_collaborators_has_not\n* `user_is` - user_is\n* `user_is_not` - user_is_not"
                    },
                    "value": {
                        "type": "string",
                        "description": "The filter value that must be compared to the field's value.",
                        "maxLength": 255
                    }
                }
            },
            "PatchedUpdateViewFilterGroup": {
                "type": "object",
                "properties": {
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.\n\n* `AND` - And\n* `OR` - Or"
                    }
                }
            },
            "PatchedUpdateViewGroupBy": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "integer",
                        "description": "The field that must be grouped by."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    },
                    "width": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "The pixel width of the group by in the related view."
                    }
                }
            },
            "PatchedUpdateViewSort": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "integer",
                        "description": "The field that must be sorted on."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    }
                }
            },
            "PatchedUpdateWorkspaceInvitation": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user is going to get within the workspace after accepting the invitation.",
                        "maxLength": 32
                    }
                }
            },
            "PatchedUpdateWorkspaceUser": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user has within the workspace.",
                        "maxLength": 32
                    }
                }
            },
            "PatchedUserAdminUpdate": {
                "type": "object",
                "description": "Serializes a request body for updating a given user. Do not use for returning user\ndata as the password will be returned also.",
                "properties": {
                    "username": {
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Set this to false instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether this user is an admin and has access to all workspaces and Baserow's admin areas. "
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "PatchedUser_SourceUpdateUserSource": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowUserSourceUpdateUserSource"
                    }
                ]
            },
            "PatchedViewFieldOptions": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/grid_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/gallery_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/form_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/kanban_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/calendar_view_field_options"
                    }
                ]
            },
            "PatchedViewUpdateView": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/grid_view_update"
                    },
                    {
                        "$ref": "#/components/schemas/gallery_view_update"
                    },
                    {
                        "$ref": "#/components/schemas/form_view_update"
                    },
                    {
                        "$ref": "#/components/schemas/kanban_view_update"
                    },
                    {
                        "$ref": "#/components/schemas/calendar_view_update"
                    }
                ]
            },
            "PatchedWorkspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 165
                    }
                }
            },
            "PathParam": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the parameter.",
                        "maxLength": 255
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PathParamTypeEnum"
                            }
                        ],
                        "description": "The type of the parameter.\n\n* `text` - text\n* `numeric` - numeric"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "PathParamTypeEnum": {
                "enum": [
                    "text",
                    "numeric"
                ],
                "type": "string",
                "description": "* `text` - text\n* `numeric` - numeric"
            },
            "PermissionObject": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The permission manager name."
                    },
                    "permissions": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The content of the permission object for this permission manager."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "PhoneNumberFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "PhoneNumberFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "PhoneNumberFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "PhoneNumberFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "PublicBuilder": {
                "type": "object",
                "description": "A public version of the builder serializer with less data to prevent data leaks.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "pages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicPage"
                        },
                        "readOnly": true,
                        "description": "This field is specific to the `builder` application and contains an array of pages that are in the builder."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the object."
                    },
                    "theme": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CombinedThemeConfigBlocks"
                            }
                        ],
                        "readOnly": true,
                        "description": "This field is specific to the `builder` application and contains the theme settings."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "pages",
                    "theme",
                    "type"
                ]
            },
            "PublicField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "PublicFormView": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title that is displayed at the beginning of the form."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description that is displayed at the beginning of the form."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeC5eEnum"
                            }
                        ],
                        "description": "Configurable mode of the form.\n\n* `form` - form\n* `survey` - survey"
                    },
                    "cover_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The user file cover image that is displayed at the top of the form."
                    },
                    "logo_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The user file logo image that is displayed at the top of the form."
                    },
                    "submit_text": {
                        "type": "string",
                        "description": "The text displayed on the submit button."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicFormViewFieldOptions"
                        }
                    },
                    "show_logo": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "fields"
                ]
            },
            "PublicFormViewField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "PublicFormViewFieldOptions": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "If provided, then this value will be visible above the field input."
                    },
                    "description": {
                        "type": "string",
                        "description": "If provided, then this value be will be shown under the field name."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates whether the field is required for the visitor to fill out."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The order that the field has in the form. Lower value is first."
                    },
                    "field": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PublicFormViewField"
                            }
                        ],
                        "readOnly": true,
                        "description": "The properties of the related field. These can be used to construct the correct input. Additional properties could be added depending on the field type."
                    },
                    "show_when_matching_conditions": {
                        "type": "boolean",
                        "description": "Indicates whether this field is visible when the conditions are met."
                    },
                    "condition_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all (AND) or any (OR) of the conditions should match before shown.\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormViewFieldOptionsCondition"
                        }
                    },
                    "condition_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormViewFieldOptionsConditionGroup"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormViewFieldOptionsConditionGroup"
                        }
                    },
                    "field_component": {
                        "type": "string",
                        "description": "Indicates which field input component is used in the form. The value is only used in the frontend, and can differ per field.",
                        "maxLength": 32
                    }
                },
                "required": [
                    "field",
                    "name"
                ]
            },
            "PublicNone": {
                "type": "object",
                "description": "Basic builder workflow action serializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "element_id": {
                        "type": "integer",
                        "nullable": true,
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the workflow action"
                    },
                    "event": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventEnum"
                            }
                        ],
                        "description": "The event that triggers the execution\n\n* `click` - Click\n* `submit` - Submit"
                    },
                    "title": {
                        "type": "string",
                        "default": "",
                        "description": "The title of the notification. Must be an formula."
                    },
                    "description": {
                        "type": "string",
                        "default": "",
                        "description": "The description of the notification. Must be an formula."
                    }
                },
                "required": [
                    "element_id",
                    "event",
                    "id",
                    "order",
                    "type"
                ]
            },
            "PublicPage": {
                "type": "object",
                "description": "A public version of the page serializer with less data to prevent data leaks.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "path_params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PathParam"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "path"
                ]
            },
            "PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GalleryViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    },
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponse"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GridViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    },
                    "count": {
                        "type": "integer",
                        "description": "The total amount of results."
                    },
                    "next": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the next page."
                    },
                    "previous": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "URL to the previous page."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExampleRowResponse"
                        }
                    }
                },
                "required": [
                    "count",
                    "next",
                    "previous",
                    "results"
                ]
            },
            "PublicView": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "table": {
                        "$ref": "#/components/schemas/PublicViewTable"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicViewSort"
                        },
                        "readOnly": true
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicViewGroupBy"
                        },
                        "readOnly": true
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug where the view can be accessed publicly on.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "show_logo": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "group_bys",
                    "id",
                    "name",
                    "order",
                    "slug",
                    "sortings",
                    "table",
                    "type"
                ]
            },
            "PublicViewAuthRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "PublicViewAuthResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    }
                },
                "required": [
                    "access_token"
                ]
            },
            "PublicViewGroupBy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "field": {
                        "type": "integer",
                        "description": "The field that must be grouped by."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    },
                    "width": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "The pixel width of the group by in the related view."
                    }
                },
                "required": [
                    "field",
                    "id",
                    "view"
                ]
            },
            "PublicViewInfo": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicField"
                        },
                        "readOnly": true
                    },
                    "view": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PublicView"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "fields",
                    "view"
                ]
            },
            "PublicViewSort": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "field": {
                        "type": "integer",
                        "description": "The field that must be sorted on."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    }
                },
                "required": [
                    "field",
                    "id",
                    "view"
                ]
            },
            "PublicViewTable": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "database_id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "database_id",
                    "id"
                ]
            },
            "PublishDomainJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "PublishDomainJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    }
                },
                "required": [
                    "id",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "RatingFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "max_value": {
                        "type": "integer",
                        "maximum": 10,
                        "minimum": 1,
                        "description": "Maximum value the rating can take."
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of the symbols.",
                        "maxLength": 50
                    },
                    "style": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleEnum"
                            }
                        ],
                        "description": "Rating style. Allowed values: star, heart, thumbs-up, flag, smile.\n\n* `star` - Star\n* `heart` - Heart\n* `thumbs-up` - Thumbs-up\n* `flag` - Flags\n* `smile` - Smile"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "RatingFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "max_value": {
                        "type": "integer",
                        "maximum": 10,
                        "minimum": 1,
                        "description": "Maximum value the rating can take."
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of the symbols.",
                        "maxLength": 50
                    },
                    "style": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleEnum"
                            }
                        ],
                        "description": "Rating style. Allowed values: star, heart, thumbs-up, flag, smile.\n\n* `star` - Star\n* `heart` - Heart\n* `thumbs-up` - Thumbs-up\n* `flag` - Flags\n* `smile` - Smile"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "RatingFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "max_value": {
                        "type": "integer",
                        "maximum": 10,
                        "minimum": 1,
                        "description": "Maximum value the rating can take."
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of the symbols.",
                        "maxLength": 50
                    },
                    "style": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleEnum"
                            }
                        ],
                        "description": "Rating style. Allowed values: star, heart, thumbs-up, flag, smile.\n\n* `star` - Star\n* `heart` - Heart\n* `thumbs-up` - Thumbs-up\n* `flag` - Flags\n* `smile` - Smile"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "RatingFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "max_value": {
                        "type": "integer",
                        "maximum": 10,
                        "minimum": 1,
                        "description": "Maximum value the rating can take."
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of the symbols.",
                        "maxLength": 50
                    },
                    "style": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleEnum"
                            }
                        ],
                        "description": "Rating style. Allowed values: star, heart, thumbs-up, flag, smile.\n\n* `star` - Star\n* `heart` - Heart\n* `thumbs-up` - Thumbs-up\n* `flag` - Flags\n* `smile` - Smile"
                    }
                }
            },
            "Register": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 2
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address is also going to be the username."
                    },
                    "password": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "default": "en",
                        "description": "An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB.",
                        "maxLength": 10,
                        "minLength": 2
                    },
                    "authenticate": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates whether an authentication JWT should be generated and be included in the response."
                    },
                    "group_invitation_token": {
                        "type": "string",
                        "description": "DEPRECATED: Please use `workspace_invitation_token` which this attribute is being renamed to in 2024."
                    },
                    "workspace_invitation_token": {
                        "type": "string",
                        "description": "If provided and valid, the user accepts the workspace invitation and will have access to the workspace after signing up."
                    },
                    "template_id": {
                        "type": "integer",
                        "description": "The id of the template that must be installed after creating the account. This only works if the `workspace_invitation_token` param is not provided."
                    }
                },
                "required": [
                    "email",
                    "name",
                    "password"
                ]
            },
            "RegisterLicense": {
                "type": "object",
                "properties": {
                    "license": {
                        "type": "string",
                        "description": "The license that you want to register."
                    }
                },
                "required": [
                    "license"
                ]
            },
            "RelatedFields": {
                "type": "object",
                "properties": {
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "related_fields"
                ]
            },
            "Report": {
                "type": "object",
                "properties": {
                    "failing_rows": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Error messages for this field."
                            },
                            "description": "An object containing error messages by fields. The key is the field name and the value is an array of error messages for this field. These messages are localized for the user who has created the job when the translation is available."
                        },
                        "description": "An object containing field in error by rows. The keys are the row indexes from original file and values are objects of errors by fields."
                    }
                },
                "required": [
                    "failing_rows"
                ]
            },
            "RequestMethodEnum": {
                "enum": [
                    "POST",
                    "GET",
                    "PUT",
                    "PATCH",
                    "DELETE"
                ],
                "type": "string",
                "description": "* `POST` - Post\n* `GET` - Get\n* `PUT` - Put\n* `PATCH` - Patch\n* `DELETE` - Delete"
            },
            "ResetPasswordBodyValidation": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "token"
                ]
            },
            "RestoreSnapshotJobCreateJob": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeD2cEnum"
                            }
                        ],
                        "description": "The type of the job.\n\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "RestoreSnapshotJobJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    }
                },
                "required": [
                    "id",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "RollupFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to rollup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to rollup."
                    },
                    "rollup_function": {
                        "type": "string",
                        "description": "The rollup formula function that must be applied.",
                        "maxLength": 64
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "name",
                    "nullable",
                    "type"
                ]
            },
            "RollupFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to rollup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to rollup."
                    },
                    "rollup_function": {
                        "type": "string",
                        "description": "The rollup formula function that must be applied.",
                        "maxLength": 64
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "RollupFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to rollup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to rollup."
                    },
                    "rollup_function": {
                        "type": "string",
                        "description": "The rollup formula function that must be applied.",
                        "maxLength": 64
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nullable",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "RollupFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "through_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the link row field to rollup values for."
                    },
                    "target_field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the field in the table linked to by the through_field to rollup."
                    },
                    "rollup_function": {
                        "type": "string",
                        "description": "The rollup formula function that must be applied.",
                        "maxLength": 64
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "nullable"
                ]
            },
            "RowComment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The user who made the comment.",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "The table the row this comment is for is found in. ",
                        "readOnly": true
                    },
                    "row_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "The id of the row the comment is for."
                    },
                    "message": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "edited": {
                        "type": "string",
                        "readOnly": true
                    },
                    "trashed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "created_on",
                    "edited",
                    "id",
                    "message",
                    "row_id",
                    "table_id",
                    "updated_on",
                    "user_id"
                ]
            },
            "RowCommentCreate": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The rich text comment content."
                    }
                },
                "required": [
                    "message"
                ]
            },
            "RowCommentsNotificationMode": {
                "type": "object",
                "properties": {
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeFf8Enum"
                            }
                        ],
                        "description": "The mode to use to receive notifications for new comments on a table row.\n\n* `all` - all\n* `mentions` - mentions"
                    }
                },
                "required": [
                    "mode"
                ]
            },
            "RowCommentsNotificationModeEnum": {
                "enum": [
                    "all",
                    "mentions"
                ],
                "type": "string",
                "description": "* `all` - all\n* `mentions` - mentions"
            },
            "RowHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "action_type": {
                        "type": "string",
                        "description": "The type of the action that was performed."
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RowHistoryUser"
                            }
                        ],
                        "description": "The user that performed the action."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the action that was performed."
                    },
                    "before": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The mapping between field_ids and values for the row before the action was performed."
                    },
                    "after": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The mapping between field_ids and values for the row after the action was performed."
                    },
                    "fields_metadata": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The metadata of the fields that were changed."
                    }
                },
                "required": [
                    "action_type",
                    "after",
                    "before",
                    "fields_metadata",
                    "id",
                    "timestamp",
                    "user"
                ]
            },
            "RowHistoryUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the user."
                    },
                    "name": {
                        "type": "string",
                        "description": "The first name of the user."
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "RowIdentifierTypeEnum": {
                "enum": [
                    "id",
                    "count"
                ],
                "type": "string",
                "description": "* `id` - Id\n* `count` - Count"
            },
            "RowMetadata": {
                "type": "object",
                "properties": {
                    "row_comment_count": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "How many row comments exist for this row."
                    },
                    "row_comments_notification_mode": {
                        "$ref": "#/components/schemas/RowCommentsNotificationModeEnum"
                    }
                }
            },
            "SAMLResponse": {
                "type": "object",
                "properties": {
                    "SAMLResponse": {
                        "type": "string",
                        "description": "The encoded SAML response from the IdP."
                    },
                    "RelayState": {
                        "type": "string",
                        "description": "The frontend URL where redirect the authenticated user."
                    }
                },
                "required": [
                    "RelayState",
                    "SAMLResponse"
                ]
            },
            "SamlAuthProviderModelAuthProvider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "domain": {
                        "type": "string",
                        "description": "The email domain registered with this provider."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the provider is enabled or not."
                    },
                    "metadata": {
                        "type": "string",
                        "description": "The SAML metadata XML provided by the IdP."
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether or not a user sign in correctly with this SAML provider."
                    }
                },
                "required": [
                    "domain",
                    "id",
                    "is_verified",
                    "metadata",
                    "type"
                ]
            },
            "ScopeTypeEnum": {
                "enum": [
                    "core",
                    "application",
                    "workspace",
                    "workspace_invitation",
                    "snapshot",
                    "workspace_user",
                    "integration",
                    "user_source",
                    "database",
                    "database_table",
                    "database_field",
                    "database_view",
                    "database_view_decoration",
                    "database_view_sort",
                    "database_view_group",
                    "database_view_filter",
                    "database_view_filter_group",
                    "token",
                    "team",
                    "team_subject",
                    "builder",
                    "builder_page",
                    "builder_element",
                    "builder_domain",
                    "builder_data_source",
                    "builder_workflow_action",
                    "license"
                ],
                "type": "string",
                "description": "* `core` - core\n* `application` - application\n* `workspace` - workspace\n* `workspace_invitation` - workspace_invitation\n* `snapshot` - snapshot\n* `workspace_user` - workspace_user\n* `integration` - integration\n* `user_source` - user_source\n* `database` - database\n* `database_table` - database_table\n* `database_field` - database_field\n* `database_view` - database_view\n* `database_view_decoration` - database_view_decoration\n* `database_view_sort` - database_view_sort\n* `database_view_group` - database_view_group\n* `database_view_filter` - database_view_filter\n* `database_view_filter_group` - database_view_filter_group\n* `token` - token\n* `team` - team\n* `team_subject` - team_subject\n* `builder` - builder\n* `builder_page` - builder_page\n* `builder_element` - builder_element\n* `builder_domain` - builder_domain\n* `builder_data_source` - builder_data_source\n* `builder_workflow_action` - builder_workflow_action\n* `license` - license"
            },
            "SelectColorValueProviderConf": {
                "type": "object",
                "properties": {
                    "field_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "An id of a select field of the table. The value provider return the color of the selected option for each row."
                    }
                },
                "required": [
                    "field_id"
                ]
            },
            "SelectOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "color",
                    "value"
                ]
            },
            "SendResetPasswordEmailBodyValidation": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user that has requested a password reset."
                    },
                    "base_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The base URL where the user can reset his password. The reset token is going to be appended to the base_url (base_url '/token')."
                    }
                },
                "required": [
                    "base_url",
                    "email"
                ]
            },
            "Sender": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            },
            "Settings": {
                "type": "object",
                "properties": {
                    "allow_new_signups": {
                        "type": "boolean",
                        "description": "Indicates whether new users can create a new account when signing up."
                    },
                    "allow_signups_via_workspace_invitations": {
                        "type": "boolean",
                        "description": "Indicates whether invited users can create an account when signing up, even if allow_new_signups is disabled."
                    },
                    "allow_signups_via_group_invitations": {
                        "type": "boolean",
                        "description": "DEPRECATED: Please use the functionally identical `allow_signups_via_workspace_invitations` instead as this attribute is being removed in the future."
                    },
                    "allow_reset_password": {
                        "type": "boolean",
                        "description": "Indicates whether users can request a password reset link."
                    },
                    "allow_global_workspace_creation": {
                        "type": "boolean",
                        "description": "Indicates whether all users can create workspaces, or just staff."
                    },
                    "allow_global_group_creation": {
                        "type": "boolean",
                        "description": "DEPRECATED: Please use the functionally identical `allow_global_workspace_creation` instead as this attribute is being removed in the future."
                    },
                    "account_deletion_grace_delay": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "description": "Number of days after the last login for an account pending deletion to be deleted"
                    },
                    "show_admin_signup_page": {
                        "type": "boolean",
                        "description": "Indicates that there are no admin users in the database yet, so in the frontend the signup form will be shown instead of the login page."
                    },
                    "track_workspace_usage": {
                        "type": "boolean",
                        "description": "Runs a job once per day which calculates per workspace row counts and file storage usage, displayed on the admin workspace page."
                    }
                }
            },
            "SingleAuditLogExportJobRequest": {
                "type": "object",
                "description": "When mixed in to a model serializer for an ExportJob this will add an url field\nwith the actual usable url of the export job's file (if it has one).",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "export_charset": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportCharsetEnum"
                            }
                        ],
                        "default": "utf-8",
                        "description": "The character set to use when creating the export file.\n\n* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
                    },
                    "csv_column_separator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
                            }
                        ],
                        "default": ",",
                        "description": "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \u001e\n* `unit_separator` - \u001f"
                    },
                    "csv_first_row_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to generate a header row at the top of the csv file."
                    },
                    "filter_user_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The user to filter the audit log by."
                    },
                    "filter_workspace_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The workspace to filter the audit log by."
                    },
                    "filter_action_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FilterActionTypeEnum"
                            }
                        ],
                        "description": "Optional: The action type to filter the audit log by.\n\n* `create_group` - create_group\n* `delete_group` - delete_group\n* `update_group` - update_group\n* `order_groups` - order_groups\n* `create_application` - create_application\n* `update_application` - update_application\n* `delete_application` - delete_application\n* `order_applications` - order_applications\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_group_invitation` - create_group_invitation\n* `delete_group_invitation` - delete_group_invitation\n* `accept_group_invitation` - accept_group_invitation\n* `reject_group_invitation` - reject_group_invitation\n* `update_group_invitation_permissions` - update_group_invitation_permissions\n* `leave_group` - leave_group\n* `create_snapshot` - create_snapshot\n* `delete_snapshot` - delete_snapshot\n* `restore_snapshot` - restore_snapshot\n* `empty_trash` - empty_trash\n* `restore_from_trash` - restore_from_trash\n* `create_user` - create_user\n* `update_user` - update_user\n* `schedule_user_deletion` - schedule_user_deletion\n* `cancel_user_deletion` - cancel_user_deletion\n* `sign_in_user` - sign_in_user\n* `change_user_password` - change_user_password\n* `send_reset_user_password` - send_reset_user_password\n* `reset_user_password` - reset_user_password\n* `create_db_token` - create_db_token\n* `update_db_token_name` - update_db_token_name\n* `update_db_token_permissions` - update_db_token_permissions\n* `rotate_db_token_key` - rotate_db_token_key\n* `delete_db_token_key` - delete_db_token_key\n* `create_webhook` - create_webhook\n* `delete_webhook` - delete_webhook\n* `update_webhook` - update_webhook\n* `export_table` - export_table\n* `import_database_from_airtable` - import_database_from_airtable\n* `create_table` - create_table\n* `delete_table` - delete_table\n* `order_tables` - order_tables\n* `update_table` - update_table\n* `duplicate_table` - duplicate_table\n* `create_row` - create_row\n* `create_rows` - create_rows\n* `import_rows` - import_rows\n* `delete_row` - delete_row\n* `delete_rows` - delete_rows\n* `move_row` - move_row\n* `update_row` - update_row\n* `update_rows` - update_rows\n* `create_view` - create_view\n* `duplicate_view` - duplicate_view\n* `delete_view` - delete_view\n* `order_views` - order_views\n* `update_view` - update_view\n* `create_view_filter` - create_view_filter\n* `update_view_filter` - update_view_filter\n* `delete_view_filter` - delete_view_filter\n* `create_view_sort` - create_view_sort\n* `update_view_sort` - update_view_sort\n* `delete_view_sort` - delete_view_sort\n* `create_view_group` - create_view_group\n* `update_view_group` - update_view_group\n* `delete_view_group` - delete_view_group\n* `rotate_view_slug` - rotate_view_slug\n* `update_view_field_options` - update_view_field_options\n* `create_decoration` - create_decoration\n* `update_decoration` - update_decoration\n* `delete_decoration` - delete_decoration\n* `create_view_filter_group` - create_view_filter_group\n* `update_view_filter_group` - update_view_filter_group\n* `delete_view_filter_group` - delete_view_filter_group\n* `create_field` - create_field\n* `delete_field` - delete_field\n* `update_field` - update_field\n* `duplicate_field` - duplicate_field\n* `create_row_comment` - create_row_comment\n* `delete_row_comment` - delete_row_comment\n* `update_row_comment` - update_row_comment\n* `create_team` - create_team\n* `update_team` - update_team\n* `delete_team` - delete_team\n* `create_team_subject` - create_team_subject\n* `delete_team_subject` - delete_team_subject\n* `batch_assign_role` - batch_assign_role"
                    },
                    "filter_from_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The start date to filter the audit log by."
                    },
                    "filter_to_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The end date to filter the audit log by."
                    },
                    "exclude_columns": {
                        "type": "string",
                        "description": "Optional: A comma separated list of column names to exclude from the export. Available options are `user_email, user_id, workspace_name, workspace_id, type, description, timestamp, ip_address`."
                    }
                },
                "required": [
                    "url"
                ]
            },
            "SingleAuditLogExportJobResponse": {
                "type": "object",
                "description": "When mixed in to a model serializer for an ExportJob this will add an url field\nwith the actual usable url of the export job's file (if it has one).",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL to download the exported file."
                    },
                    "export_charset": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportCharsetEnum"
                            }
                        ],
                        "default": "utf-8",
                        "description": "The character set to use when creating the export file.\n\n* `utf-8` - utf-8\n* `iso-8859-6` - iso-8859-6\n* `windows-1256` - windows-1256\n* `iso-8859-4` - iso-8859-4\n* `windows-1257` - windows-1257\n* `iso-8859-14` - iso-8859-14\n* `iso-8859-2` - iso-8859-2\n* `windows-1250` - windows-1250\n* `gbk` - gbk\n* `gb18030` - gb18030\n* `big5` - big5\n* `koi8-r` - koi8-r\n* `koi8-u` - koi8-u\n* `iso-8859-5` - iso-8859-5\n* `windows-1251` - windows-1251\n* `x-mac-cyrillic` - mac-cyrillic\n* `iso-8859-7` - iso-8859-7\n* `windows-1253` - windows-1253\n* `iso-8859-8` - iso-8859-8\n* `windows-1255` - windows-1255\n* `euc-jp` - euc-jp\n* `iso-2022-jp` - iso-2022-jp\n* `shift-jis` - shift-jis\n* `euc-kr` - euc-kr\n* `macintosh` - macintosh\n* `iso-8859-10` - iso-8859-10\n* `iso-8859-16` - iso-8859-16\n* `windows-874` - cp874\n* `windows-1254` - windows-1254\n* `windows-1258` - windows-1258\n* `iso-8859-1` - iso-8859-1\n* `windows-1252` - windows-1252\n* `iso-8859-3` - iso-8859-3"
                    },
                    "csv_column_separator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
                            }
                        ],
                        "default": ",",
                        "description": "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \u001e\n* `unit_separator` - \u001f"
                    },
                    "csv_first_row_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to generate a header row at the top of the csv file."
                    },
                    "filter_user_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The user to filter the audit log by."
                    },
                    "filter_workspace_id": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Optional: The workspace to filter the audit log by."
                    },
                    "filter_action_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FilterActionTypeEnum"
                            }
                        ],
                        "description": "Optional: The action type to filter the audit log by.\n\n* `create_group` - create_group\n* `delete_group` - delete_group\n* `update_group` - update_group\n* `order_groups` - order_groups\n* `create_application` - create_application\n* `update_application` - update_application\n* `delete_application` - delete_application\n* `order_applications` - order_applications\n* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_group_invitation` - create_group_invitation\n* `delete_group_invitation` - delete_group_invitation\n* `accept_group_invitation` - accept_group_invitation\n* `reject_group_invitation` - reject_group_invitation\n* `update_group_invitation_permissions` - update_group_invitation_permissions\n* `leave_group` - leave_group\n* `create_snapshot` - create_snapshot\n* `delete_snapshot` - delete_snapshot\n* `restore_snapshot` - restore_snapshot\n* `empty_trash` - empty_trash\n* `restore_from_trash` - restore_from_trash\n* `create_user` - create_user\n* `update_user` - update_user\n* `schedule_user_deletion` - schedule_user_deletion\n* `cancel_user_deletion` - cancel_user_deletion\n* `sign_in_user` - sign_in_user\n* `change_user_password` - change_user_password\n* `send_reset_user_password` - send_reset_user_password\n* `reset_user_password` - reset_user_password\n* `create_db_token` - create_db_token\n* `update_db_token_name` - update_db_token_name\n* `update_db_token_permissions` - update_db_token_permissions\n* `rotate_db_token_key` - rotate_db_token_key\n* `delete_db_token_key` - delete_db_token_key\n* `create_webhook` - create_webhook\n* `delete_webhook` - delete_webhook\n* `update_webhook` - update_webhook\n* `export_table` - export_table\n* `import_database_from_airtable` - import_database_from_airtable\n* `create_table` - create_table\n* `delete_table` - delete_table\n* `order_tables` - order_tables\n* `update_table` - update_table\n* `duplicate_table` - duplicate_table\n* `create_row` - create_row\n* `create_rows` - create_rows\n* `import_rows` - import_rows\n* `delete_row` - delete_row\n* `delete_rows` - delete_rows\n* `move_row` - move_row\n* `update_row` - update_row\n* `update_rows` - update_rows\n* `create_view` - create_view\n* `duplicate_view` - duplicate_view\n* `delete_view` - delete_view\n* `order_views` - order_views\n* `update_view` - update_view\n* `create_view_filter` - create_view_filter\n* `update_view_filter` - update_view_filter\n* `delete_view_filter` - delete_view_filter\n* `create_view_sort` - create_view_sort\n* `update_view_sort` - update_view_sort\n* `delete_view_sort` - delete_view_sort\n* `create_view_group` - create_view_group\n* `update_view_group` - update_view_group\n* `delete_view_group` - delete_view_group\n* `rotate_view_slug` - rotate_view_slug\n* `update_view_field_options` - update_view_field_options\n* `create_decoration` - create_decoration\n* `update_decoration` - update_decoration\n* `delete_decoration` - delete_decoration\n* `create_view_filter_group` - create_view_filter_group\n* `update_view_filter_group` - update_view_filter_group\n* `delete_view_filter_group` - delete_view_filter_group\n* `create_field` - create_field\n* `delete_field` - delete_field\n* `update_field` - update_field\n* `duplicate_field` - duplicate_field\n* `create_row_comment` - create_row_comment\n* `delete_row_comment` - delete_row_comment\n* `update_row_comment` - update_row_comment\n* `create_team` - create_team\n* `update_team` - update_team\n* `delete_team` - delete_team\n* `create_team_subject` - create_team_subject\n* `delete_team_subject` - delete_team_subject\n* `batch_assign_role` - batch_assign_role"
                    },
                    "filter_from_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The start date to filter the audit log by."
                    },
                    "filter_to_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Optional: The end date to filter the audit log by."
                    },
                    "exclude_columns": {
                        "type": "string",
                        "description": "Optional: A comma separated list of column names to exclude from the export. Available options are `user_email, user_id, workspace_name, workspace_id, type, description, timestamp, ip_address`."
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date and time when the export job was created."
                    },
                    "exported_file_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the file that was created by the export job."
                    }
                },
                "required": [
                    "created_on",
                    "exported_file_name",
                    "url"
                ]
            },
            "SingleDuplicateApplicationJobType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_application": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SpecificApplication"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_application": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SpecificApplication"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_application",
                    "id",
                    "original_application",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "SingleDuplicateFieldJobType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_field": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Field"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_field": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FieldSerializerWithRelatedFields"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_field",
                    "id",
                    "original_field",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "SingleDuplicatePageJobType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_page": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Page"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_page": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Page"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_page",
                    "id",
                    "original_page",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "SingleDuplicateTableJobType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "original_table": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Table"
                            }
                        ],
                        "readOnly": true
                    },
                    "duplicated_table": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Table"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "duplicated_table",
                    "id",
                    "original_table",
                    "progress_percentage",
                    "state",
                    "type"
                ]
            },
            "SingleFileImportJobSerializerClass": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "database_id": {
                        "type": "integer",
                        "description": "Database id where the table will be created."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the new table.",
                        "maxLength": 255
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "Table id where the data will be imported."
                    },
                    "first_row_header": {
                        "type": "boolean",
                        "default": false
                    },
                    "report": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Report"
                            }
                        ],
                        "description": "Import error report."
                    }
                },
                "required": [
                    "database_id",
                    "id",
                    "progress_percentage",
                    "report",
                    "state",
                    "type"
                ]
            },
            "SingleInstallTemplateJobType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the job."
                    },
                    "progress_percentage": {
                        "type": "integer",
                        "description": "A percentage indicating how far along the job is. 100 means that it's finished."
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the import job."
                    },
                    "human_readable_error": {
                        "type": "string",
                        "description": "A human readable error message indicating what went wrong."
                    },
                    "workspace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "readOnly": true
                    },
                    "template": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Template"
                            }
                        ],
                        "readOnly": true
                    },
                    "installed_applications": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    },
                    "group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "group",
                    "id",
                    "installed_applications",
                    "progress_percentage",
                    "state",
                    "template",
                    "type",
                    "workspace"
                ]
            },
            "SingleSelectFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "SingleSelectFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "SingleSelectFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "SingleSelectFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "select_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectOption"
                        }
                    }
                }
            },
            "Snapshot": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "snapshot_from_application": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "created_by",
                    "id",
                    "name",
                    "snapshot_from_application"
                ]
            },
            "SourceTypeEnum": {
                "enum": [
                    "url",
                    "embed"
                ],
                "type": "string",
                "description": "* `url` - Url\n* `embed` - Embed"
            },
            "SpecificApplication": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        ],
                        "description": "The workspace that the application belongs to."
                    }
                },
                "required": [
                    "group",
                    "id",
                    "name",
                    "order",
                    "type",
                    "workspace"
                ]
            },
            "StateEnum": {
                "enum": [
                    "pending",
                    "exporting",
                    "cancelled",
                    "finished",
                    "failed",
                    "expired"
                ],
                "type": "string",
                "description": "* `pending` - pending\n* `exporting` - exporting\n* `cancelled` - cancelled\n* `finished` - finished\n* `failed` - failed\n* `expired` - expired"
            },
            "StyleBackgroundEnum": {
                "enum": [
                    "none",
                    "color"
                ],
                "type": "string",
                "description": "* `none` - None\n* `color` - Color"
            },
            "StyleEnum": {
                "enum": [
                    "star",
                    "heart",
                    "thumbs-up",
                    "flag",
                    "smile"
                ],
                "type": "string",
                "description": "* `star` - Star\n* `heart` - Heart\n* `thumbs-up` - Thumbs-up\n* `flag` - Flags\n* `smile` - Smile"
            },
            "StyleImageConstraintEnum": {
                "enum": [
                    "cover",
                    "contain",
                    "full-width"
                ],
                "type": "string",
                "description": "* `cover` - Cover\n* `contain` - Contain\n* `full-width` - Full Width"
            },
            "StyleWidthEnum": {
                "enum": [
                    "full",
                    "normal",
                    "medium",
                    "small"
                ],
                "type": "string",
                "description": "* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
            },
            "SubDomainCreateDomain": {
                "type": "object",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Type0a6Enum"
                            }
                        ],
                        "description": "The type of the domain.\n\n* `custom` - custom\n* `sub_domain` - sub_domain"
                    },
                    "domain_name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "domain_name",
                    "type"
                ]
            },
            "SubDomainDomain": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the domain."
                    },
                    "domain_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "builder_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "last_published": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last publication date of this domain"
                    }
                },
                "required": [
                    "builder_id",
                    "domain_name",
                    "id",
                    "order",
                    "type"
                ]
            },
            "SubjectType3ffEnum": {
                "enum": [
                    "auth.User"
                ],
                "type": "string",
                "description": "* `auth.User` - auth.User"
            },
            "SubjectType6dcEnum": {
                "enum": [
                    "auth.User",
                    "anonymous",
                    "core.Token",
                    "baserow_enterprise.Team"
                ],
                "type": "string",
                "description": "* `auth.User` - auth.User\n* `anonymous` - anonymous\n* `core.Token` - core.Token\n* `baserow_enterprise.Team` - baserow_enterprise.Team"
            },
            "SubjectUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "first_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "title": "Email address"
                    }
                },
                "required": [
                    "email",
                    "first_name",
                    "id",
                    "username"
                ]
            },
            "SubmitActionEnum": {
                "enum": [
                    "MESSAGE",
                    "REDIRECT"
                ],
                "type": "string",
                "description": "* `MESSAGE` - Message\n* `REDIRECT` - Redirect"
            },
            "Table": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "database_id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "database_id",
                    "id",
                    "name",
                    "order"
                ]
            },
            "TableCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {
                        "type": "array",
                        "items": {},
                        "description": "A list of rows that needs to be created as initial table data. Each row is a list of values that are going to be added in the new table in the same order as provided.\n\nEx: \n```json\n[\n  [\"row1_field1_value\", \"row1_field2_value\"],\n  [\"row2_field1_value\", \"row2_field2_value\"],\n]\n```\nfor creating a two rows table with two fields.\n\nIf not provided, some example data is going to be created.",
                        "minItems": 1
                    },
                    "first_row_header": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates if the first provided row is the header. If true the field names are going to be the values of the first row. Otherwise they will be called \"Field N\""
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TableElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "data_source_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The data source we want to show in the element for. Only data_sources that return list are allowed."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionField"
                        }
                    },
                    "items_per_page": {
                        "type": "integer",
                        "default": 20,
                        "description": "The amount item loaded with each page."
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "TableElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "data_source_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The data source we want to show in the element for. Only data_sources that return list are allowed."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionField"
                        }
                    },
                    "items_per_page": {
                        "type": "integer",
                        "default": 20,
                        "description": "The amount item loaded with each page."
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "TableElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "data_source_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The data source we want to show in the element for. Only data_sources that return list are allowed."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionField"
                        }
                    },
                    "items_per_page": {
                        "type": "integer",
                        "default": 20,
                        "description": "The amount item loaded with each page."
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "TableElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "data_source_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The data source we want to show in the element for. Only data_sources that return list are allowed."
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionField"
                        }
                    },
                    "items_per_page": {
                        "type": "integer",
                        "default": 20,
                        "description": "The amount item loaded with each page."
                    },
                    "button_color": {
                        "type": "string",
                        "default": "primary",
                        "description": "Button color.",
                        "maxLength": 20
                    }
                }
            },
            "TableImport": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {},
                        "description": "A list of rows you want to add to the specified table. Each row is a list of values, one for each **writable** field. The field values must be ordered according to the field order in the table. All values must be compatible with the corresponding field type.\n\nEx: \n```json\n[\n  [\"row1_field1_value\", \"row1_field2_value\"],\n  [\"row2_field1_value\", \"row2_field2_value\"],\n]\n```\nfor adding two rows to a table with two writable fields.",
                        "minItems": 1
                    }
                },
                "required": [
                    "data"
                ]
            },
            "TableSerializerWithFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "database_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalBaserowField"
                        },
                        "description": "Fields of this table"
                    }
                },
                "required": [
                    "database_id",
                    "fields",
                    "id",
                    "name",
                    "order"
                ]
            },
            "TableWebhook": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "events": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "A list containing the events that will trigger this webhook."
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The additional headers as an object where the key is the name and the value the value."
                    },
                    "calls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TableWebhookCall"
                        },
                        "description": "All the calls that this webhook made."
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "use_user_field_names": {
                        "type": "boolean",
                        "description": "Indicates whether the field names must be used as payload key instead of the id."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL that must be called when the webhook is triggered.",
                        "maxLength": 2000
                    },
                    "request_method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestMethodEnum"
                            }
                        ],
                        "description": "The request method that be used when the event occurs.\n\n* `POST` - Post\n* `GET` - Get\n* `PUT` - Put\n* `PATCH` - Patch\n* `DELETE` - Delete"
                    },
                    "name": {
                        "type": "string",
                        "description": "An internal name of the webhook.",
                        "maxLength": 255
                    },
                    "include_all_events": {
                        "type": "boolean",
                        "description": "Indicates whether this webhook should listen to all events."
                    },
                    "failed_triggers": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "The amount of failed webhook calls."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Indicates whether the web hook is active. When a webhook has failed multiple times, it will automatically be deactivated."
                    }
                },
                "required": [
                    "calls",
                    "created_on",
                    "events",
                    "headers",
                    "id",
                    "name",
                    "updated_on",
                    "url"
                ]
            },
            "TableWebhookCall": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "event_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Event ID where the call originated from."
                    },
                    "event_type": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "called_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "called_url": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "request": {
                        "type": "string",
                        "nullable": true,
                        "description": "A text copy of the request headers and body."
                    },
                    "response": {
                        "type": "string",
                        "nullable": true,
                        "description": "A text copy of the response headers and body."
                    },
                    "response_status": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The HTTP response status code."
                    },
                    "error": {
                        "type": "string",
                        "nullable": true,
                        "description": "An internal error reflecting what went wrong."
                    }
                },
                "required": [
                    "called_url",
                    "event_id",
                    "event_type",
                    "id"
                ]
            },
            "TableWebhookCreateRequest": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL that must be called when the webhook is triggered.",
                        "maxLength": 2000
                    },
                    "include_all_events": {
                        "type": "boolean",
                        "description": "Indicates whether this webhook should listen to all events."
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Events3eaEnum"
                        },
                        "description": "A list containing the events that will trigger this webhook."
                    },
                    "request_method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestMethodEnum"
                            }
                        ],
                        "description": "The request method that be used when the event occurs.\n\n* `POST` - Post\n* `GET` - Get\n* `PUT` - Put\n* `PATCH` - Patch\n* `DELETE` - Delete"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The additional headers as an object where the key is the name and the value the value."
                    },
                    "name": {
                        "type": "string",
                        "description": "An internal name of the webhook.",
                        "maxLength": 255
                    },
                    "use_user_field_names": {
                        "type": "boolean",
                        "description": "Indicates whether the field names must be used as payload key instead of the id."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "TableWebhookTestCallRequest": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL that must be called when the webhook is triggered.",
                        "maxLength": 2000
                    },
                    "event_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventTypeEnum"
                            }
                        ],
                        "description": "The event type that must be used for the test call.\n\n* `rows.created` - rows.created\n* `row.created` - row.created\n* `rows.updated` - rows.updated\n* `row.updated` - row.updated\n* `rows.deleted` - rows.deleted\n* `row.deleted` - row.deleted"
                    },
                    "request_method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestMethodEnum"
                            }
                        ],
                        "description": "The request method that be used when the event occurs.\n\n* `POST` - Post\n* `GET` - Get\n* `PUT` - Put\n* `PATCH` - Patch\n* `DELETE` - Delete"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The additional headers as an object where the key is the name and the value the value."
                    },
                    "use_user_field_names": {
                        "type": "boolean",
                        "description": "Indicates whether the field names must be used as payload key instead of the id."
                    }
                },
                "required": [
                    "event_type",
                    "url"
                ]
            },
            "TableWebhookTestCallResponse": {
                "type": "object",
                "properties": {
                    "request": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A text copy of the request headers and body."
                    },
                    "response": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A text copy of the response headers and body."
                    },
                    "status_code": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The HTTP response status code."
                    },
                    "is_unreachable": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the provided URL could be reached."
                    }
                },
                "required": [
                    "is_unreachable",
                    "request",
                    "response",
                    "status_code"
                ]
            },
            "TargetEnum": {
                "enum": [
                    "self",
                    "blank"
                ],
                "type": "string",
                "description": "* `self` - Self\n* `blank` - Blank"
            },
            "Team": {
                "type": "object",
                "description": "Mixin to a DRF serializer class to raise an exception if data with unknown fields\nis provided to the serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A human friendly name for this team.",
                        "maxLength": 160
                    },
                    "default_role": {
                        "type": "string",
                        "nullable": true,
                        "description": "The uid of the role you want to assign to the team in the given workspace. You can omit this property if you want to remove the role."
                    },
                    "subjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeamSubject"
                        },
                        "default": [],
                        "description": "An array of subject ID/type objects to be used during team create and update."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TeamResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A human friendly name for this team.",
                        "maxLength": 160
                    },
                    "group": {
                        "type": "integer",
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "type": "integer",
                        "description": "The workspace that this team belongs to."
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "default_role": {
                        "type": "string",
                        "description": "The uid of the role this team has in its workspace."
                    },
                    "subject_count": {
                        "type": "integer",
                        "description": "The amount of subjects (e.g. users) that are currently assigned to this team."
                    },
                    "subject_sample": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeamSampleSubject"
                        },
                        "description": "A sample, by default 10, of the most recent subjects to join this team."
                    }
                },
                "required": [
                    "created_on",
                    "group",
                    "id",
                    "name",
                    "subject_count",
                    "updated_on",
                    "workspace"
                ]
            },
            "TeamSampleSubject": {
                "type": "object",
                "properties": {
                    "subject_id": {
                        "type": "integer",
                        "description": "The subject's unique identifier."
                    },
                    "subject_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectType3ffEnum"
                            }
                        ],
                        "description": "The type of subject who belongs to the team.\n\n* `auth.User` - auth.User"
                    },
                    "subject_label": {
                        "type": "string",
                        "description": "The subject's label. Defaults to a user's first name."
                    },
                    "team_subject_id": {
                        "type": "integer",
                        "description": "The team subject unique identifier."
                    }
                },
                "required": [
                    "subject_id",
                    "subject_label",
                    "subject_type",
                    "team_subject_id"
                ]
            },
            "TeamSubject": {
                "type": "object",
                "description": "Mixin to a DRF serializer class to raise an exception if data with unknown fields\nis provided to the serializer.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "subject_id": {
                        "type": "integer",
                        "description": "The subject's unique identifier."
                    },
                    "subject_user_email": {
                        "type": "string",
                        "format": "email",
                        "description": "The user subject's email address."
                    },
                    "subject_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubjectType3ffEnum"
                            }
                        ],
                        "description": "The type of subject that is being invited.\n\n* `auth.User` - auth.User"
                    }
                },
                "required": [
                    "id",
                    "subject_type"
                ]
            },
            "TeamSubjectResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "subject_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "The unique subject ID."
                    },
                    "subject_type": {
                        "type": "string",
                        "description": "Returns the TeamSubject's `subject_type` natural key.\n\n:param obj: The TeamSubject record.\n:return: The subject's content type natural key.",
                        "readOnly": true
                    },
                    "team": {
                        "type": "integer",
                        "description": "The team this subject belongs to."
                    }
                },
                "required": [
                    "id",
                    "subject_id",
                    "subject_type",
                    "team"
                ]
            },
            "Template": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon class name that can be used for displaying purposes.",
                        "maxLength": 32
                    },
                    "keywords": {
                        "type": "string",
                        "description": "Keywords related to the template that can be used for search."
                    },
                    "group_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "workspace_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The group containing the applications related to the template. The read endpoints related to that group are publicly accessible for preview purposes.",
                        "readOnly": true
                    },
                    "is_default": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Indicates if the template must be selected by default. The web-frontend automatically selects the first `is_default` template that it can find."
                    }
                },
                "required": [
                    "group_id",
                    "icon",
                    "id",
                    "is_default",
                    "name",
                    "workspace_id"
                ]
            },
            "TemplateCategories": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 32
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Template"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "templates"
                ]
            },
            "TextElementCreateElement": {
                "type": "object",
                "description": "This serializer allow to set the type of an element and the element id before which\nwe want to insert the new element.",
                "properties": {
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "before_id": {
                        "type": "integer",
                        "description": "If provided, creates the element before the element with the given id."
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeA4dEnum"
                            }
                        ],
                        "description": "The type of the element.\n\n* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "If provided, creates the element as a child of the element with the given id."
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be a formula."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FormatEnum"
                            }
                        ],
                        "default": "plain",
                        "description": "The format of the text\n\n* `plain` - Plain\n* `markdown` - Markdown"
                    }
                },
                "required": [
                    "order",
                    "type"
                ]
            },
            "TextElementElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.\n\n👉 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen you update this one.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "page_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be a formula."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FormatEnum"
                            }
                        ],
                        "default": "plain",
                        "description": "The format of the text\n\n* `plain` - Plain\n* `markdown` - Markdown"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "page_id",
                    "parent_element_id",
                    "type"
                ]
            },
            "TextElementPublicElement": {
                "type": "object",
                "description": "Basic element serializer mostly for returned values.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the element."
                    },
                    "order": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,20}(?:\\.\\d{0,20})?$",
                        "readOnly": true,
                        "description": "Lowest first."
                    },
                    "parent_element_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The parent element, if inside a container.",
                        "readOnly": true
                    },
                    "place_in_container": {
                        "type": "string",
                        "nullable": true,
                        "description": "The place in the container.",
                        "maxLength": 255
                    },
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be a formula."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FormatEnum"
                            }
                        ],
                        "default": "plain",
                        "description": "The format of the text\n\n* `plain` - Plain\n* `markdown` - Markdown"
                    }
                },
                "required": [
                    "id",
                    "order",
                    "parent_element_id",
                    "type"
                ]
            },
            "TextElementUpdateElement": {
                "type": "object",
                "properties": {
                    "style_border_top_color": {
                        "type": "string",
                        "description": "Top border color.",
                        "maxLength": 20
                    },
                    "style_border_top_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the top border."
                    },
                    "style_padding_top": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the top border."
                    },
                    "style_border_bottom_color": {
                        "type": "string",
                        "description": "Bottom border color",
                        "maxLength": 20
                    },
                    "style_border_bottom_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the bottom border."
                    },
                    "style_padding_bottom": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the bottom border."
                    },
                    "style_border_left_color": {
                        "type": "string",
                        "description": "Left border color",
                        "maxLength": 20
                    },
                    "style_border_left_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the left border."
                    },
                    "style_padding_left": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the left border."
                    },
                    "style_border_right_color": {
                        "type": "string",
                        "description": "Right border color",
                        "maxLength": 20
                    },
                    "style_border_right_size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Pixel height of the right border."
                    },
                    "style_padding_right": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Padding size of the right border."
                    },
                    "style_background": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleBackgroundEnum"
                            }
                        ],
                        "description": "What type of background the element should have.\n\n* `none` - None\n* `color` - Color"
                    },
                    "style_background_color": {
                        "type": "string",
                        "description": "The background color if `style_background` is color.",
                        "maxLength": 20
                    },
                    "style_width": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StyleWidthEnum"
                            }
                        ],
                        "description": "Indicates the width of the element.\n\n* `full` - Full\n* `normal` - Normal\n* `medium` - Medium\n* `small` - Small"
                    },
                    "value": {
                        "type": "string",
                        "default": "",
                        "description": "The value of the element. Must be a formula."
                    },
                    "alignment": {
                        "$ref": "#/components/schemas/Alignment675Enum"
                    },
                    "format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FormatEnum"
                            }
                        ],
                        "default": "plain",
                        "description": "The format of the text\n\n* `plain` - Plain\n* `markdown` - Markdown"
                    }
                }
            },
            "TextFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "text_default": {
                        "type": "string",
                        "description": "If set, this value is going to be added every time a new row created.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "TextFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "text_default": {
                        "type": "string",
                        "description": "If set, this value is going to be added every time a new row created.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "TextFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    },
                    "text_default": {
                        "type": "string",
                        "description": "If set, this value is going to be added every time a new row created.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "TextFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    },
                    "text_default": {
                        "type": "string",
                        "description": "If set, this value is going to be added every time a new row created.",
                        "maxLength": 255
                    }
                }
            },
            "Token": {
                "type": "object",
                "description": "A mixin that allows us to rename the `group` field to `workspace` when serializing.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The human readable name of the database token for the user.",
                        "maxLength": 100
                    },
                    "group": {
                        "type": "string",
                        "readOnly": true
                    },
                    "workspace": {
                        "type": "integer",
                        "description": "Only the tables of the workspace can be accessed."
                    },
                    "key": {
                        "type": "string",
                        "description": "The unique token key that can be used to authorize for the table row endpoints.",
                        "maxLength": 32
                    },
                    "permissions": {
                        "type": "object",
                        "description": "Indicates per operation which permissions the database token has within the whole workspace. If the value of for example `create` is `true`, then the token can create rows in all tables related to the workspace. If a list is provided with for example `[[\"table\", 1]]` then the token only has create permissions for the table with id 1. Same goes for if a database references is provided. `[['database', 1]]` means create permissions for all tables in the database with id 1.\n\nExample:\n```json\n{\n  \"create\": true// Allows creating rows in all tables.\n  // Allows reading rows from database 1 and table 10.\n  \"read\": [[\"database\", 1], [\"table\", 10]],\n  \"update\": false  // Denies updating rows in all tables.\n  \"delete\": []  // Denies deleting rows in all tables.\n }\n```",
                        "properties": {
                            "create": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            },
                            "read": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            },
                            "update": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            },
                            "delete": {
                                "anyOf": [
                                    {
                                        "type": "boolean",
                                        "description": "Indicating if the database token has permissions to all tables.",
                                        "example": true
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "maxItems": 2,
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "string",
                                                        "example": "database",
                                                        "description": "First element should indicate the reference type `database` or `table`."
                                                    },
                                                    {
                                                        "type": "number",
                                                        "example": 1,
                                                        "description": "Second element should indicate the ID of the reference."
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "group",
                    "id",
                    "key",
                    "name",
                    "permissions",
                    "workspace"
                ]
            },
            "TokenBlacklist": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "TokenCreate": {
                "type": "object",
                "description": "A mixin that allows us to rename the `group` field to `workspace` when serializing.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The human readable name of the database token for the user.",
                        "maxLength": 100
                    },
                    "group": {
                        "type": "string",
                        "readOnly": true
                    },
                    "workspace": {
                        "type": "integer",
                        "description": "Only the tables of the workspace can be accessed."
                    }
                },
                "required": [
                    "group",
                    "name",
                    "workspace"
                ]
            },
            "TokenObtainPairWithUser": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "username": {
                        "type": "string",
                        "format": "email",
                        "description": "Deprecated. Use `email` instead.",
                        "deprecated": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "password"
                ]
            },
            "TokenRefreshWithUser": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string",
                        "description": "Deprecated. Use `refresh_token` instead.",
                        "deprecated": true
                    }
                },
                "required": [
                    "access"
                ]
            },
            "TokenVerifyWithUser": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Deprecated. Use `refresh_token` instead.",
                        "deprecated": true
                    },
                    "refresh_token": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh_token"
                ]
            },
            "TrashContents": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user_who_trashed": {
                        "type": "string",
                        "readOnly": true
                    },
                    "trash_item_type": {
                        "type": "string",
                        "description": "If an API consumer hasn't yet adopted the \"workspace\"\n`trash_item_type`, give them the option to return \"group\"\nby testing the `respond_with_workspace_rename` querystring.",
                        "readOnly": true
                    },
                    "trash_item_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "parent_trash_item_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true
                    },
                    "trashed_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "application": {
                        "type": "integer",
                        "nullable": true
                    },
                    "group": {
                        "type": "integer"
                    },
                    "workspace": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "parent_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "group",
                    "id",
                    "name",
                    "trash_item_id",
                    "trash_item_type",
                    "trashed_at",
                    "user_who_trashed",
                    "workspace"
                ]
            },
            "TrashItemTypeEnum": {
                "enum": [
                    "workspace",
                    "application",
                    "group",
                    "table",
                    "field",
                    "row",
                    "rows",
                    "view",
                    "row_comment",
                    "team",
                    "builder_domain"
                ],
                "type": "string",
                "description": "* `workspace` - workspace\n* `application` - application\n* `group` - group\n* `table` - table\n* `field` - field\n* `row` - row\n* `rows` - rows\n* `view` - view\n* `row_comment` - row_comment\n* `team` - team\n* `builder_domain` - builder_domain"
            },
            "TrashStructure": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrashStructureGroup"
                        },
                        "description": "An array of group trash structure records. Deprecated, please use `workspaces`."
                    },
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrashStructureGroup"
                        },
                        "description": "An array of workspace trash structure records"
                    }
                },
                "required": [
                    "groups",
                    "workspaces"
                ]
            },
            "TrashStructureApplication": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 160
                    },
                    "trashed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "TrashStructureGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrashStructureApplication"
                        }
                    }
                },
                "required": [
                    "applications",
                    "id",
                    "name",
                    "trashed"
                ]
            },
            "Type0a6Enum": {
                "enum": [
                    "custom",
                    "sub_domain"
                ],
                "type": "string",
                "description": "* `custom` - custom\n* `sub_domain` - sub_domain"
            },
            "Type3a0Enum": {
                "enum": [
                    "notification",
                    "open_page",
                    "create_row",
                    "update_row"
                ],
                "type": "string",
                "description": "* `notification` - notification\n* `open_page` - open_page\n* `create_row` - create_row\n* `update_row` - update_row"
            },
            "Type5f7Enum": {
                "enum": [
                    "local_baserow"
                ],
                "type": "string",
                "description": "* `local_baserow` - local_baserow"
            },
            "Type880Enum": {
                "enum": [
                    "equal",
                    "not_equal",
                    "filename_contains",
                    "files_lower_than",
                    "has_file_type",
                    "contains",
                    "contains_not",
                    "contains_word",
                    "doesnt_contain_word",
                    "length_is_lower_than",
                    "higher_than",
                    "lower_than",
                    "is_even_and_whole",
                    "date_equal",
                    "date_before",
                    "date_before_or_equal",
                    "date_after_days_ago",
                    "date_after",
                    "date_after_or_equal",
                    "date_not_equal",
                    "date_equals_today",
                    "date_before_today",
                    "date_after_today",
                    "date_within_days",
                    "date_within_weeks",
                    "date_within_months",
                    "date_equals_days_ago",
                    "date_equals_months_ago",
                    "date_equals_years_ago",
                    "date_equals_week",
                    "date_equals_month",
                    "date_equals_day_of_month",
                    "date_equals_year",
                    "single_select_equal",
                    "single_select_not_equal",
                    "link_row_has",
                    "link_row_has_not",
                    "link_row_contains",
                    "link_row_not_contains",
                    "boolean",
                    "empty",
                    "not_empty",
                    "multiple_select_has",
                    "multiple_select_has_not",
                    "multiple_collaborators_has",
                    "multiple_collaborators_has_not",
                    "user_is",
                    "user_is_not"
                ],
                "type": "string",
                "description": "* `equal` - equal\n* `not_equal` - not_equal\n* `filename_contains` - filename_contains\n* `files_lower_than` - files_lower_than\n* `has_file_type` - has_file_type\n* `contains` - contains\n* `contains_not` - contains_not\n* `contains_word` - contains_word\n* `doesnt_contain_word` - doesnt_contain_word\n* `length_is_lower_than` - length_is_lower_than\n* `higher_than` - higher_than\n* `lower_than` - lower_than\n* `is_even_and_whole` - is_even_and_whole\n* `date_equal` - date_equal\n* `date_before` - date_before\n* `date_before_or_equal` - date_before_or_equal\n* `date_after_days_ago` - date_after_days_ago\n* `date_after` - date_after\n* `date_after_or_equal` - date_after_or_equal\n* `date_not_equal` - date_not_equal\n* `date_equals_today` - date_equals_today\n* `date_before_today` - date_before_today\n* `date_after_today` - date_after_today\n* `date_within_days` - date_within_days\n* `date_within_weeks` - date_within_weeks\n* `date_within_months` - date_within_months\n* `date_equals_days_ago` - date_equals_days_ago\n* `date_equals_months_ago` - date_equals_months_ago\n* `date_equals_years_ago` - date_equals_years_ago\n* `date_equals_week` - date_equals_week\n* `date_equals_month` - date_equals_month\n* `date_equals_day_of_month` - date_equals_day_of_month\n* `date_equals_year` - date_equals_year\n* `single_select_equal` - single_select_equal\n* `single_select_not_equal` - single_select_not_equal\n* `link_row_has` - link_row_has\n* `link_row_has_not` - link_row_has_not\n* `link_row_contains` - link_row_contains\n* `link_row_not_contains` - link_row_not_contains\n* `boolean` - boolean\n* `empty` - empty\n* `not_empty` - not_empty\n* `multiple_select_has` - multiple_select_has\n* `multiple_select_has_not` - multiple_select_has_not\n* `multiple_collaborators_has` - multiple_collaborators_has\n* `multiple_collaborators_has_not` - multiple_collaborators_has_not\n* `user_is` - user_is\n* `user_is_not` - user_is_not"
            },
            "TypeA4dEnum": {
                "enum": [
                    "heading",
                    "text",
                    "link",
                    "image",
                    "input_text",
                    "column",
                    "button",
                    "table",
                    "form_container",
                    "dropdown",
                    "checkbox",
                    "iframe"
                ],
                "type": "string",
                "description": "* `heading` - heading\n* `text` - text\n* `link` - link\n* `image` - image\n* `input_text` - input_text\n* `column` - column\n* `button` - button\n* `table` - table\n* `form_container` - form_container\n* `dropdown` - dropdown\n* `checkbox` - checkbox\n* `iframe` - iframe"
            },
            "TypeC03Enum": {
                "enum": [
                    "local_baserow_get_row",
                    "local_baserow_list_rows",
                    "local_baserow_upsert_row"
                ],
                "type": "string",
                "description": "* `local_baserow_get_row` - local_baserow_get_row\n* `local_baserow_list_rows` - local_baserow_list_rows\n* `local_baserow_upsert_row` - local_baserow_upsert_row"
            },
            "TypeD2cEnum": {
                "enum": [
                    "duplicate_application",
                    "install_template",
                    "create_snapshot",
                    "restore_snapshot",
                    "airtable",
                    "file_import",
                    "duplicate_table",
                    "duplicate_field",
                    "audit_log_export",
                    "duplicate_page",
                    "publish_domain"
                ],
                "type": "string",
                "description": "* `duplicate_application` - duplicate_application\n* `install_template` - install_template\n* `create_snapshot` - create_snapshot\n* `restore_snapshot` - restore_snapshot\n* `airtable` - airtable\n* `file_import` - file_import\n* `duplicate_table` - duplicate_table\n* `duplicate_field` - duplicate_field\n* `audit_log_export` - audit_log_export\n* `duplicate_page` - duplicate_page\n* `publish_domain` - publish_domain"
            },
            "TypeE61Enum": {
                "enum": [
                    "text",
                    "long_text",
                    "url",
                    "email",
                    "number",
                    "rating",
                    "boolean",
                    "date",
                    "last_modified",
                    "last_modified_by",
                    "created_on",
                    "created_by",
                    "duration",
                    "link_row",
                    "file",
                    "single_select",
                    "multiple_select",
                    "phone_number",
                    "formula",
                    "count",
                    "rollup",
                    "lookup",
                    "multiple_collaborators",
                    "uuid",
                    "autonumber"
                ],
                "type": "string",
                "description": "* `text` - text\n* `long_text` - long_text\n* `url` - url\n* `email` - email\n* `number` - number\n* `rating` - rating\n* `boolean` - boolean\n* `date` - date\n* `last_modified` - last_modified\n* `last_modified_by` - last_modified_by\n* `created_on` - created_on\n* `created_by` - created_by\n* `duration` - duration\n* `link_row` - link_row\n* `file` - file\n* `single_select` - single_select\n* `multiple_select` - multiple_select\n* `phone_number` - phone_number\n* `formula` - formula\n* `count` - count\n* `rollup` - rollup\n* `lookup` - lookup\n* `multiple_collaborators` - multiple_collaborators\n* `uuid` - uuid\n* `autonumber` - autonumber"
            },
            "TypeFc4Enum": {
                "enum": [
                    "left_border_color",
                    "background_color"
                ],
                "type": "string",
                "description": "* `left_border_color` - left_border_color\n* `background_color` - background_color"
            },
            "TypeFormulaRequest": {
                "type": "object",
                "properties": {
                    "formula": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "formula",
                    "name"
                ]
            },
            "TypeFormulaResult": {
                "type": "object",
                "properties": {
                    "number_decimal_places": {
                        "nullable": true,
                        "description": "The amount of digits allowed after the point.\n\n* `0` - 1\n* `1` - 1.0\n* `2` - 1.00\n* `3` - 1.000\n* `4` - 1.0000\n* `5` - 1.00000\n* `6` - 1.000000\n* `7` - 1.0000000\n* `8` - 1.00000000\n* `9` - 1.000000000\n* `10` - 1.0000000000",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "duration_format": {
                        "nullable": true,
                        "description": "The format of the duration.\n\n* `h:mm` - hours:minutes\n* `h:mm:ss` - hours:minutes:seconds\n* `h:mm:ss.s` - hours:minutes:seconds:deciseconds\n* `h:mm:ss.ss` - hours:minutes:seconds:centiseconds\n* `h:mm:ss.sss` - hours:minutes:seconds:milliseconds\n* `d h` - days:hours\n* `d h:mm` - days:hours:minutes\n* `d h:mm:ss` - days:hours:minutes:seconds",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DurationFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "date_force_timezone": {
                        "type": "string",
                        "nullable": true,
                        "description": "Force a timezone for the field overriding user profile settings.",
                        "maxLength": 255
                    },
                    "date_format": {
                        "nullable": true,
                        "description": "EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)\n\n* `EU` - European (D/M/Y)\n* `US` - US (M/D/Y)\n* `ISO` - ISO (Y-M-D)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_include_time": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the field also includes a time."
                    },
                    "nullable": {
                        "type": "boolean"
                    },
                    "array_formula_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "date_show_tzinfo": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates if the time zone should be shown."
                    },
                    "date_time_format": {
                        "nullable": true,
                        "description": "24 (14:30) or 12 (02:30 PM)\n\n* `24` - 24 hour\n* `12` - 12 hour",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeFormatEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "formula": {
                        "type": "string"
                    },
                    "formula_type": {
                        "$ref": "#/components/schemas/FormulaTypeEnum"
                    }
                },
                "required": [
                    "formula",
                    "nullable"
                ]
            },
            "URLFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "URLFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "URLFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "URLFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "UUIDFieldCreateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "UUIDFieldField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "table_id",
                    "type"
                ]
            },
            "UUIDFieldFieldSerializerWithRelatedFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Lowest first."
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of the related field."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if the field is a primary field. If `true` the field cannot be deleted and the value should represent the whole row."
                    },
                    "read_only": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether the field is a read only field. If true, it's not possible to update the cell value."
                    },
                    "related_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        },
                        "readOnly": true,
                        "description": "A list of related fields which also changed."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "read_only",
                    "related_fields",
                    "table_id",
                    "type"
                ]
            },
            "UUIDFieldUpdateField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeE61Enum"
                    }
                }
            },
            "UndoRedoAction": {
                "type": "object",
                "properties": {
                    "action_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an action was undone/redone/skipped due to an error this field will contain the type of the action that was undone/redone."
                    },
                    "action_scope": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an action was undone/redone/skipped due to an error this field will contain the scope of the action that was undone/redone."
                    }
                }
            },
            "UndoRedoResponse": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UndoRedoAction"
                        }
                    },
                    "result_code": {
                        "type": "string",
                        "description": "Indicates the result of the undo/redo operation. Will be 'SUCCESS' on success, 'NOTHING_TO_DO' when there is no action to undo/redo and 'SKIPPED_DUE_TO_ERROR' when the undo/redo failed due to a conflict or error and was skipped over."
                    }
                },
                "required": [
                    "actions",
                    "result_code"
                ]
            },
            "UniqueRowValues": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "values"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserAdminCreate": {
                "type": "object",
                "description": "Serializes a request body for creating a new user. Do not use for returning user\ndata as the password will be returned also.",
                "properties": {
                    "username": {
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Set this to false instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether this user is an admin and has access to all workspaces and Baserow's admin areas. "
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "password",
                    "username"
                ]
            },
            "UserAdminGroups": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user has within the workspace.",
                        "maxLength": 32
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "UserAdminResponse": {
                "type": "object",
                "description": "Serializes the safe user attributes to expose for a response back to the user.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAdminGroups"
                        }
                    },
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAdminGroups"
                        }
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Set this to false instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether this user is an admin and has access to all workspaces and Baserow's admin areas. "
                    }
                },
                "required": [
                    "groups",
                    "id",
                    "name",
                    "username",
                    "workspaces"
                ]
            },
            "UserFile": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "mime_type": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_image": {
                        "type": "boolean"
                    },
                    "image_width": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "image_height": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "thumbnails": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "original_name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name",
                    "original_name",
                    "size",
                    "thumbnails",
                    "uploaded_at",
                    "url"
                ]
            },
            "UserFileUploadViaURLRequest": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "url"
                ]
            },
            "UserWorkspaceInvitation": {
                "type": "object",
                "description": "This serializer is used for displaying the invitation to the user that doesn't\nhave access to the workspace yet, so not for invitation management purposes.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "invited_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "group": {
                        "type": "string",
                        "readOnly": true
                    },
                    "workspace": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user that the invitation is meant for. Only a user with that email address can accept it.",
                        "maxLength": 254
                    },
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An optional message that the invitor can provide. This will be visible to the receiver of the invitation."
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "email_exists": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_on",
                    "email",
                    "email_exists",
                    "group",
                    "id",
                    "invited_by",
                    "message",
                    "workspace"
                ]
            },
            "User_SourceCreateUserSource": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowUserSourceCreateUserSource"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow": "#/components/schemas/LocalBaserowUserSourceCreateUserSource"
                    }
                }
            },
            "User_SourceUserSource": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocalBaserowUserSourceUserSource"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "local_baserow": "#/components/schemas/LocalBaserowUserSourceUserSource"
                    }
                }
            },
            "ValueProviderTypeEnum": {
                "enum": [
                    "single_select_color",
                    "conditional_color"
                ],
                "type": "string",
                "description": "* `` - \n* `single_select_color` - single_select_color\n* `conditional_color` - conditional_color"
            },
            "VariantEnum": {
                "enum": [
                    "link",
                    "button"
                ],
                "type": "string",
                "description": "* `link` - Link\n* `button` - Button"
            },
            "View": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "table_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "table": {
                        "$ref": "#/components/schemas/Table"
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilter"
                        }
                    },
                    "filter_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewFilterGroup"
                        }
                    },
                    "sortings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewSort"
                        }
                    },
                    "group_bys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewGroupBy"
                        }
                    },
                    "decorations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewDecoration"
                        }
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_has_password": {
                        "type": "boolean",
                        "description": "Indicates whether the public view is password protected or not.\n\n:return: True if the public view is password protected, False otherwise.",
                        "readOnly": true
                    },
                    "show_logo": {
                        "type": "boolean"
                    },
                    "ownership_type": {
                        "type": "string"
                    },
                    "owned_by_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "ownership_type",
                    "public_view_has_password",
                    "table",
                    "table_id",
                    "type"
                ]
            },
            "ViewCreateView": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridViewCreateView"
                    },
                    {
                        "$ref": "#/components/schemas/GalleryViewCreateView"
                    },
                    {
                        "$ref": "#/components/schemas/FormViewCreateView"
                    },
                    {
                        "$ref": "#/components/schemas/KanbanViewCreateView"
                    },
                    {
                        "$ref": "#/components/schemas/CalendarViewCreateView"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "grid": "#/components/schemas/GridViewCreateView",
                        "gallery": "#/components/schemas/GalleryViewCreateView",
                        "form": "#/components/schemas/FormViewCreateView",
                        "kanban": "#/components/schemas/KanbanViewCreateView",
                        "calendar": "#/components/schemas/CalendarViewCreateView"
                    }
                }
            },
            "ViewDecoration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the decoration applies. Each view can have his own decorations."
                    },
                    "type": {
                        "type": "string",
                        "description": "The decorator type. This is then interpreted by the frontend to display the decoration.",
                        "maxLength": 255
                    },
                    "value_provider_type": {
                        "type": "string",
                        "description": "The value provider type that gives the value to the decorator.",
                        "maxLength": 255
                    },
                    "value_provider_conf": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "The configuration consumed by the value provider."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": -32768,
                        "description": "The position of the decorator has within the view, lowest first. If there is another decorator with the same order value then the decorator with the lowest id must be shown first."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "ViewFieldOptions": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/grid_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/gallery_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/form_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/kanban_view_field_options"
                    },
                    {
                        "$ref": "#/components/schemas/calendar_view_field_options"
                    }
                ]
            },
            "ViewFilter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the filter applies. Each view can have his own filters."
                    },
                    "field": {
                        "type": "integer",
                        "description": "The field of which the value must be compared to the filter value."
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).",
                        "maxLength": 48
                    },
                    "value": {
                        "type": "string",
                        "description": "The filter value that must be compared to the field's value.",
                        "maxLength": 255
                    },
                    "preload_values": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "Can contain unique preloaded values per filter. This is for example used by the `link_row_has` filter to communicate the display name if a value is provided."
                    },
                    "group": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The id of the filter group this filter belongs to. If this is null, the filter is not part of a filter group."
                    }
                },
                "required": [
                    "field",
                    "id",
                    "preload_values",
                    "type",
                    "view"
                ]
            },
            "ViewFilterGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the filter group applies to. Each view can have its own filter groups."
                    }
                },
                "required": [
                    "id",
                    "view"
                ]
            },
            "ViewGroupBy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the group by applies. Each view can have his own group bys."
                    },
                    "field": {
                        "type": "integer",
                        "description": "The field that must be grouped by."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    },
                    "width": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "The pixel width of the group by in the related view."
                    }
                },
                "required": [
                    "field",
                    "id",
                    "view"
                ]
            },
            "ViewSort": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "view": {
                        "type": "integer",
                        "description": "The view to which the sort applies. Each view can have his own sortings."
                    },
                    "field": {
                        "type": "integer",
                        "description": "The field that must be sorted on."
                    },
                    "order": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderEnum"
                            }
                        ],
                        "description": "Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.\n\n* `ASC` - Ascending\n* `DESC` - Descending"
                    }
                },
                "required": [
                    "field",
                    "id",
                    "view"
                ]
            },
            "ViewTypesEnum": {
                "enum": [
                    "grid",
                    "gallery",
                    "form",
                    "kanban",
                    "calendar"
                ],
                "type": "string",
                "description": "* `grid` - grid\n* `gallery` - gallery\n* `form` - form\n* `kanban` - kanban\n* `calendar` - calendar"
            },
            "ViewView": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GridViewView"
                    },
                    {
                        "$ref": "#/components/schemas/GalleryViewView"
                    },
                    {
                        "$ref": "#/components/schemas/FormViewView"
                    },
                    {
                        "$ref": "#/components/schemas/KanbanViewView"
                    },
                    {
                        "$ref": "#/components/schemas/CalendarViewView"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "grid": "#/components/schemas/GridViewView",
                        "gallery": "#/components/schemas/GalleryViewView",
                        "form": "#/components/schemas/FormViewView",
                        "kanban": "#/components/schemas/KanbanViewView",
                        "calendar": "#/components/schemas/CalendarViewView"
                    }
                }
            },
            "WidthEnum": {
                "enum": [
                    "auto",
                    "full"
                ],
                "type": "string",
                "description": "* `auto` - Auto\n* `full` - Full"
            },
            "Workspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 165
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "WorkspaceAdminUsers": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user has within the workspace.",
                        "maxLength": 32
                    }
                },
                "required": [
                    "email",
                    "id"
                ]
            },
            "WorkspaceInvitation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "group": {
                        "type": "integer",
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "type": "integer",
                        "description": "The workspace that the user will get access to once the invitation is accepted."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user that the invitation is meant for. Only a user with that email address can accept it.",
                        "maxLength": 254
                    },
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user is going to get within the workspace after accepting the invitation.",
                        "maxLength": 32
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional message that the invitor can provide. This will be visible to the receiver of the invitation.",
                        "maxLength": 250
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_on",
                    "email",
                    "group",
                    "id",
                    "workspace"
                ]
            },
            "WorkspaceUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "User defined name."
                    },
                    "email": {
                        "type": "string",
                        "readOnly": true,
                        "description": "User email."
                    },
                    "group": {
                        "type": "integer",
                        "description": "DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future."
                    },
                    "workspace": {
                        "type": "integer",
                        "description": "The workspace that the user has access to."
                    },
                    "permissions": {
                        "type": "string",
                        "description": "The permissions that the user has within the workspace.",
                        "maxLength": 32
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "integer",
                        "description": "The user that has access to the workspace.",
                        "readOnly": true
                    },
                    "to_be_deleted": {
                        "type": "boolean",
                        "description": "True if user account is pending deletion."
                    }
                },
                "required": [
                    "created_on",
                    "email",
                    "group",
                    "id",
                    "name",
                    "to_be_deleted",
                    "user_id",
                    "workspace"
                ]
            },
            "WorkspaceUserEnterpriseTeam": {
                "type": "object",
                "description": "A serializer for the `WorkspaceUserSerializer.teams` field.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The unique identifier for this team."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The team name that this group user belongs to."
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "WorkspaceUserWorkspace": {
                "type": "object",
                "description": "This serializers includes relevant fields of the Workspace model, but also\nsome WorkspaceUser specific fields related to the workspace user relation.\n\nAdditionally, the list of users are included for each workspace.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Workspace id."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Workspace name."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceUser"
                        },
                        "readOnly": true,
                        "description": "List of all workspace users."
                    },
                    "order": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The requesting user's order within the workspace users."
                    },
                    "permissions": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The requesting user's permissions for the workspace."
                    },
                    "unread_notifications_count": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The number of unread notifications for the requesting user."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "order",
                    "permissions",
                    "unread_notifications_count",
                    "users"
                ]
            },
            "WorkspacesAdminResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 165
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceAdminUsers"
                        }
                    },
                    "application_count": {
                        "type": "integer"
                    },
                    "row_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "storage_usage": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "seats_taken": {
                        "type": "integer"
                    },
                    "free_users": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "application_count",
                    "created_on",
                    "free_users",
                    "id",
                    "name",
                    "row_count",
                    "seats_taken",
                    "users"
                ]
            },
            "calendar_view_field_options": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CalendarViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    }
                },
                "required": [
                    "field_options"
                ]
            },
            "calendar_view_update": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_password": {
                        "type": "string",
                        "description": "The new password or an empty string to remove any previous password from the view and make it publicly accessible again.",
                        "maxLength": 256,
                        "minLength": 8
                    },
                    "ownership_type": {
                        "type": "string",
                        "description": "Indicates how the access to the view is determined. By default, views are collaborative and shared for all users that have access to the table.",
                        "maxLength": 255
                    },
                    "date_field": {
                        "type": "integer",
                        "nullable": true
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "form_view_field_options": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/FormViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    }
                },
                "required": [
                    "field_options"
                ]
            },
            "form_view_update": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_password": {
                        "type": "string",
                        "description": "The new password or an empty string to remove any previous password from the view and make it publicly accessible again.",
                        "maxLength": 256,
                        "minLength": 8
                    },
                    "ownership_type": {
                        "type": "string",
                        "description": "Indicates how the access to the view is determined. By default, views are collaborative and shared for all users that have access to the table.",
                        "maxLength": 255
                    },
                    "title": {
                        "type": "string",
                        "description": "The title that is displayed at the beginning of the form."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description that is displayed at the beginning of the form."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeC5eEnum"
                            }
                        ],
                        "description": "Configurable mode of the form.\n\n* `form` - form\n* `survey` - survey"
                    },
                    "cover_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The cover image that must be displayed at the top of the form."
                    },
                    "logo_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFile"
                            }
                        ],
                        "nullable": true,
                        "description": "The logo image that must be displayed at the top of the form."
                    },
                    "submit_text": {
                        "type": "string",
                        "description": "The text displayed on the submit button."
                    },
                    "submit_action": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SubmitActionEnum"
                            }
                        ],
                        "description": "The action that must be performed after the visitor has filled out the form.\n\n* `MESSAGE` - Message\n* `REDIRECT` - Redirect"
                    },
                    "submit_action_message": {
                        "type": "string",
                        "description": "If the `submit_action` is MESSAGE, then this message will be shown to the visitor after submitting the form."
                    },
                    "submit_action_redirect_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "If the `submit_action` is REDIRECT,then the visitors will be redirected to the this URL after submitting the form.",
                        "maxLength": 200
                    },
                    "receive_notification_on_submit": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "A boolean indicating if the current user should be notified when the form is submitted."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "receive_notification_on_submit",
                    "slug"
                ]
            },
            "gallery_view_field_options": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GalleryViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    }
                },
                "required": [
                    "field_options"
                ]
            },
            "gallery_view_update": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_password": {
                        "type": "string",
                        "description": "The new password or an empty string to remove any previous password from the view and make it publicly accessible again.",
                        "maxLength": 256,
                        "minLength": 8
                    },
                    "ownership_type": {
                        "type": "string",
                        "description": "Indicates how the access to the view is determined. By default, views are collaborative and shared for all users that have access to the table.",
                        "maxLength": 255
                    },
                    "card_cover_image_field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "References a file field of which the first image must be shown as card cover image."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "grid_view_field_options": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GridViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    }
                },
                "required": [
                    "field_options"
                ]
            },
            "grid_view_update": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_password": {
                        "type": "string",
                        "description": "The new password or an empty string to remove any previous password from the view and make it publicly accessible again.",
                        "maxLength": 256,
                        "minLength": 8
                    },
                    "ownership_type": {
                        "type": "string",
                        "description": "Indicates how the access to the view is determined. By default, views are collaborative and shared for all users that have access to the table.",
                        "maxLength": 255
                    },
                    "row_identifier_type": {
                        "$ref": "#/components/schemas/RowIdentifierTypeEnum"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "kanban_view_field_options": {
                "type": "object",
                "properties": {
                    "field_options": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/KanbanViewFieldOptions"
                        },
                        "description": "An object containing the field id as key and the properties related to view as value."
                    }
                },
                "required": [
                    "field_options"
                ]
            },
            "kanban_view_update": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "filter_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).\n\n* `AND` - And\n* `OR` - Or"
                    },
                    "filters_disabled": {
                        "type": "boolean",
                        "description": "Allows users to see results unfiltered while still keeping the filters saved for the view."
                    },
                    "public_view_password": {
                        "type": "string",
                        "description": "The new password or an empty string to remove any previous password from the view and make it publicly accessible again.",
                        "maxLength": 256,
                        "minLength": 8
                    },
                    "ownership_type": {
                        "type": "string",
                        "description": "Indicates how the access to the view is determined. By default, views are collaborative and shared for all users that have access to the table.",
                        "maxLength": 255
                    },
                    "single_select_field": {
                        "type": "integer",
                        "nullable": true
                    },
                    "card_cover_image_field": {
                        "type": "integer",
                        "nullable": true,
                        "description": "References a file field of which the first image must be shown as card cover image."
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Indicates whether the view is publicly accessible to visitors."
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique slug that can be used to construct a public URL."
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "public_Builder_Workflow_Action_TypeBuilderWorkflowAction": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PublicNone"
                    },
                    {
                        "$ref": "#/components/schemas/PublicNone"
                    },
                    {
                        "$ref": "#/components/schemas/PublicNone"
                    },
                    {
                        "$ref": "#/components/schemas/PublicNone"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "public_notification": "#/components/schemas/PublicNone",
                        "public_open_page": "#/components/schemas/PublicNone",
                        "public_create_row": "#/components/schemas/PublicNone",
                        "public_update_row": "#/components/schemas/PublicNone"
                    }
                }
            }
        },
        "securitySchemes": {
            "Database token": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "Token your_token"
            },
            "JWT": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT your_token"
            }
        }
    },
    "tags": [
        {
            "name": "Settings"
        },
        {
            "name": "User"
        },
        {
            "name": "User files"
        },
        {
            "name": "Groups"
        },
        {
            "name": "Group invitations"
        },
        {
            "name": "Workspaces"
        },
        {
            "name": "Workspace invitations"
        },
        {
            "name": "Templates"
        },
        {
            "name": "Trash"
        },
        {
            "name": "Applications"
        },
        {
            "name": "Snapshots"
        },
        {
            "name": "Jobs"
        },
        {
            "name": "Integrations"
        },
        {
            "name": "User sources"
        },
        {
            "name": "Database tables"
        },
        {
            "name": "Database table fields"
        },
        {
            "name": "Database table views"
        },
        {
            "name": "Database table view filters"
        },
        {
            "name": "Database table view sortings"
        },
        {
            "name": "Database table view decorations"
        },
        {
            "name": "Database table view groupings"
        },
        {
            "name": "Database table grid view"
        },
        {
            "name": "Database table gallery view"
        },
        {
            "name": "Database table form view"
        },
        {
            "name": "Database table kanban view"
        },
        {
            "name": "Database table calendar view"
        },
        {
            "name": "Database table rows"
        },
        {
            "name": "Database table export"
        },
        {
            "name": "Database table webhooks"
        },
        {
            "name": "Database tokens"
        },
        {
            "name": "Builder pages"
        },
        {
            "name": "Builder elements"
        },
        {
            "name": "Builder domains"
        },
        {
            "name": "Builder public"
        },
        {
            "name": "Builder data sources"
        },
        {
            "name": "Builder workflow actions"
        },
        {
            "name": "Builder theme"
        },
        {
            "name": "Admin"
        }
    ]
}